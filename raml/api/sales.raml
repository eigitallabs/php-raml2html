#%RAML 0.8
title: ePaisa Sales App
version: 2.0
baseUri: https://salesapi.epaisa.com/v1
#baseUri: https://mocksvc.mulesoft.com/mocks/8bc4601f-57d0-4296-8cf3-f1564845f119
securitySchemes:
  - customSecurityScheme:
      type:
        x-custome
      description: This <i>Token</i> is generated by login call and is working for one houre.
/companies:
  description: Get a list of available companies and their belong offices
  get:
    description: To fetch a list of companies and their offices. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible departments will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - company id fetch specific company information. <u>Optional</u></p>
            <p><b><i>ids</i></b> - an array of company id fetch a list of companies information. <u>Optional</u></p>
            <p><b><i>name</i></b> - name of the company. <u>Optional</u></p>
            <p><b><i>domain</i></b> - domain of the company. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {            
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "Companies": [
                          {
                              "id": 1,
                              "name": "ePaisa",
                              "domain": "epaisa.com",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-07 06:15:43",
                              "updated_at": "2017-04-07 06:15:43",
                              "offices": [
                                  {
                                      "id": 1,
                                      "companyId": 1,
                                      "name": "Mumbai",
                                      "lat": "19.072664",
                                      "lng": "72.870992",
                                      "pincode": "400051",
                                      "cityId": 2913,
                                      "stateId": 13,
                                      "countryId": 103,
                                      "status": 1,
                                      "created_by": 0,
                                      "updated_by": 0,
                                      "created_at": "2017-04-07 06:15:43",
                                      "updated_at": "2017-04-07 06:15:43",
                                      "city": {
                                          "cityId": 2913,
                                          "countryId": 103,
                                          "stateId": 13,
                                          "cityName": "Mumbai",
                                          "createdUserId": 0,
                                          "created_at": 0,
                                          "updatedUserId": 0,
                                          "updated_at": 0,
                                          "status": 0
                                      },
                                      "state": {
                                          "stateId": 13,
                                          "countryId": 103,
                                          "stateName": "Maharashtra",
                                          "createdUserId": 0,
                                          "created_at": 0,
                                          "updatedUserId": 0,
                                          "updated_at": 0,
                                          "status": 0
                                      },
                                      "country": {
                                          "countryId": 103,
                                          "countryName": "India",
                                          "countryDialCode": "91",
                                          "countryDomainExtension": "",
                                          "countryAlpha2Code": "IN",
                                          "countryAlpha3Code": "IND",
                                          "countryNumericCode": 356,
                                          "countryISOCode": "",
                                          "createdUserId": 1,
                                          "created_at": 0,
                                          "updatedUserId": 1,
                                          "updated_at": 0,
                                          "status": 1
                                      },
                                      "countryName": "India"
                                  },
                                  {
                                      "id": 2,
                                      "companyId": 1,
                                      "name": "New Delhi",
                                      "lat": "28.558183",
                                      "lng": "77.155724",
                                      "pincode": "110057",
                                      "cityId": 1380,
                                      "stateId": 6,
                                      "countryId": 103,
                                      "status": 1,
                                      "created_by": 0,
                                      "updated_by": 0,
                                      "created_at": "2017-04-07 06:15:43",
                                      "updated_at": "2017-04-07 06:15:43",
                                      "city": {
                                          "cityId": 1380,
                                          "countryId": 103,
                                          "stateId": 6,
                                          "cityName": "New Delhi",
                                          "createdUserId": 0,
                                          "created_at": 0,
                                          "updatedUserId": 0,
                                          "updated_at": 0,
                                          "status": 0
                                      },
                                      "state": {
                                          "stateId": 6,
                                          "countryId": 103,
                                          "stateName": "Delhi",
                                          "createdUserId": 0,
                                          "created_at": 0,
                                          "updatedUserId": 0,
                                          "updated_at": 0,
                                          "status": 0
                                      },
                                      "country": {
                                          "countryId": 103,
                                          "countryName": "India",
                                          "countryDialCode": "91",
                                          "countryDomainExtension": "",
                                          "countryAlpha2Code": "IN",
                                          "countryAlpha3Code": "IND",
                                          "countryNumericCode": 356,
                                          "countryISOCode": "",
                                          "createdUserId": 1,
                                          "created_at": 0,
                                          "updatedUserId": 1,
                                          "updated_at": 0,
                                          "status": 1
                                      },
                                      "countryName": "India"
                                  }
                              ]
                          }
                      ],
                      "total": "1"
                  }
              }
/offices:
  description: endpoints to work with offices
  get:
    description: To fetch a list of offices. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible departments will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - id fetch specific office information. <u>Optional</u></p>
            <p><b><i>ids</i></b> - an array of office id fetch a list of offices information. <u>Optional</u></p>
            <p><b><i>companyId</i></b> - company id fetch all company office information. <u>Optional</u></p>
            <p><b><i>companyIds</i></b> - an array of company id fetch a list of companies offices information. <u>Optional</u></p>
            <p><b><i>cityId</i></b> - city id fetch all city office information. <u>Optional</u></p>
            <p><b><i>cityIds</i></b> - an array of city id fetch a list of companies offices information. <u>Optional</u></p>
            <p><b><i>stateId</i></b> - state id fetch all state office information. <u>Optional</u></p>
            <p><b><i>stateIds</i></b> - an array of state id fetch a list of states offices information. <u>Optional</u></p>
            <p><b><i>countryId</i></b> - company id fetch all company office information. <u>Optional</u></p>
            <p><b><i>countryIds</i></b> - an array of company id fetch a list of companies offices information. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {            
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {                                                                            
                  "success": 1,                                                            
                  "response": {                                                            
                      "Appointments": [                                                    
                          {                                                                
                              "id": 1,                                                     
                              "companyId": 1,                                              
                              "name": "Mumbai",                                            
                              "lat": "19.072664",                                          
                              "lng": "72.870992",                                          
                              "pincode": "400051",                                         
                              "cityId": 2913,                                              
                              "stateId": 13,                                               
                              "countryId": 103,                                            
                              "status": 1,                                                 
                              "created_by": 0,                                             
                              "updated_by": 0,                                             
                              "created_at": "2017-04-07 06:15:43",                         
                              "updated_at": "2017-04-07 06:15:43",                         
                              "city": {                                                    
                                  "cityId": 2913,                                          
                                  "countryId": 103,                                        
                                  "stateId": 13,                                           
                                  "cityName": "Mumbai",                                    
                                  "createdUserId": 0,                                      
                                  "created_at": 0,                                         
                                  "updatedUserId": 0,                                      
                                  "updated_at": 0,                                         
                                  "status": 0                                              
                              },                                                           
                              "state": {                                                   
                                  "stateId": 13,                                           
                                  "countryId": 103,                                        
                                  "stateName": "Maharashtra",                              
                                  "createdUserId": 0,                                      
                                  "created_at": 0,                                         
                                  "updatedUserId": 0,                                      
                                  "updated_at": 0,                                         
                                  "status": 0                                              
                              },                                                           
                              "country": {                                                 
                                  "countryId": 103,                                        
                                  "countryName": "India",                                  
                                  "countryDialCode": "91",                                 
                                  "countryDomainExtension": "",                            
                                  "countryAlpha2Code": "IN",                               
                                  "countryAlpha3Code": "IND",                              
                                  "countryNumericCode": 356,                               
                                  "countryISOCode": "",                                    
                                  "createdUserId": 1,                                      
                                  "created_at": 0,                                         
                                  "updatedUserId": 1,                                      
                                  "updated_at": 0,                                         
                                  "status": 1                                              
                              },                                                           
                              "company": {                                                 
                                  "id": 1,                                                 
                                  "name": "ePaisa",                                        
                                  "domain": "epaisa.com",                                  
                                  "status": 1,                                             
                                  "created_by": 0,                                         
                                  "updated_by": 0,                                         
                                  "created_at": "2017-04-07 06:15:43",                     
                                  "updated_at": "2017-04-07 06:15:43"                      
                              }                                                            
                          },                                                               
                          {                                                                
                              "id": 2,                                                     
                              "companyId": 1,                                              
                              "name": "New Delhi",                                         
                              "lat": "28.558183",                                          
                              "lng": "77.155724",                                          
                              "pincode": "110057",                                         
                              "cityId": 1380,                                              
                              "stateId": 6,                                                
                              "countryId": 103,                                            
                              "status": 1,                                                 
                              "created_by": 0,                                             
                              "updated_by": 0,                                             
                              "created_at": "2017-04-07 06:15:43",                         
                              "updated_at": "2017-04-07 06:15:43",                         
                              "city": {                                                    
                                  "cityId": 1380,                                          
                                  "countryId": 103,                                        
                                  "stateId": 6,                                            
                                  "cityName": "New Delhi",                                 
                                  "createdUserId": 0,                                      
                                  "created_at": 0,                                         
                                  "updatedUserId": 0,                                      
                                  "updated_at": 0,                                         
                                  "status": 0                                              
                              },                                                           
                              "state": {                                                   
                                  "stateId": 6,                                            
                                  "countryId": 103,                                        
                                  "stateName": "Delhi",                                    
                                  "createdUserId": 0,                                      
                                  "created_at": 0,                                         
                                  "updatedUserId": 0,                                      
                                  "updated_at": 0,                                         
                                  "status": 0                                              
                              },                                                           
                              "country": {                                                 
                                  "countryId": 103,                                        
                                  "countryName": "India",                                  
                                  "countryDialCode": "91",                                 
                                  "countryDomainExtension": "",                            
                                  "countryAlpha2Code": "IN",                               
                                  "countryAlpha3Code": "IND",                              
                                  "countryNumericCode": 356,                               
                                  "countryISOCode": "",                                    
                                  "createdUserId": 1,                                      
                                  "created_at": 0,                                         
                                  "updatedUserId": 1,                                      
                                  "updated_at": 0,                                         
                                  "status": 1                                              
                              },                                                           
                              "company": {                                                 
                                  "id": 1,                                                 
                                  "name": "ePaisa",                                        
                                  "domain": "epaisa.com",                                  
                                  "status": 1,                                             
                                  "created_by": 0,                                         
                                  "updated_by": 0,                                         
                                  "created_at": "2017-04-07 06:15:43",                     
                                  "updated_at": "2017-04-07 06:15:43"                      
                              }                                                            
                          }                                                                
                      ],                                                                   
                      "total": "2"                                                         
                  }                                                                        
              }
  post:
    description: To create an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>name</i></b> - name of office.</p>
            <p><b><i>companyId</i></b> - compnay id that this office is belong to.</p>
            <p><b><i>lat</i></b> - latitude of office location <u>Optional</u></p>
            <p><b><i>lng</i></b> - longitude of office location <u>Optional</u></p>
            <p><b><i>cityId</i></b> - city of office</p>
            <p><b><i>stateId</i></b> - state of office</p>
            <p><b><i>countryId</i></b> - country of office</p>
    body:
      application/json:
        example: |
          {
              "companyId": 1,                                              
              "name": "Mumbai",                                            
              "lat": "19.072664",                                          
              "lng": "72.870992",                                          
              "pincode": "400051",                                         
              "cityId": 2913,                                              
              "stateId": 13,                                               
              "countryId": 103,                   
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "id": 8,
                      "companyId": 1,                                              
                      "name": "Mumbai",                                            
                      "lat": "19.072664",                                          
                      "lng": "72.870992",                                          
                      "pincode": "400051",                                         
                      "cityId": 2913,                                              
                      "stateId": 13,                                               
                      "countryId": 103,                                            
                      "status": 1,                                                 
                      "created_by": 0,                                             
                      "updated_by": 0,                                             
                      "created_at": "2017-04-07 06:15:43",                         
                      "updated_at": "2017-04-07 06:15:43",
                  },
              }
  put:
    description: To edit an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - unique identifier for the office.</p>
            <p><b><i>name</i></b> - name of office.</p>
            <p><b><i>companyId</i></b> - compnay id that this office is belong to.</p>
            <p><b><i>lat</i></b> - latitude of office location <u>Optional</u></p>
            <p><b><i>lng</i></b> - longitude of office location <u>Optional</u></p>
            <p><b><i>cityId</i></b> - city of office</p>
            <p><b><i>stateId</i></b> - state of office</p>
            <p><b><i>countryId</i></b> - country of office</p>
    body:
      application/json:
        example: |
          {            
              "id": 8,
              "name": "Mumbai Office",
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "id": 8,
                      "companyId": 1,                                              
                      "name": "Mumbai Office",                                            
                      "lat": "19.072664",                                          
                      "lng": "72.870992",                                          
                      "pincode": "400051",                                         
                      "cityId": 2913,                                              
                      "stateId": 13,                                               
                      "countryId": 103,                                            
                      "status": 1,                                                 
                      "created_by": 0,                                             
                      "updated_by": 0,                                             
                      "created_at": "2017-04-07 06:15:43",                         
                      "updated_at": "2017-04-07 06:15:43",
                  }
              }
  delete:
    description: To delete a product.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - product id is unique identifier for each product.</p>
    body:
      application/json:
        example: |
          {
            "id": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/employees:
  description: endpoints to work with employees
  get:
    description: To fetch a list of employees. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible departments will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - employee id fetch specific employee information. <u>Optional</u></p>
            <p><b><i>ids</i></b> - an array of employee id fetch a list of employees information. <u>Optional</u></p>
            <p><b><i>officeId</i></b> - get a list of employee for an office. <u>Optional</u></p>
            <p><b><i>officeIds</i></b> -  get a list of employee for different offices. <u>Optional</u></p>
            <p><b><i>type</i></b> -  get a list of specific type of employee. 
            TYPE_SALES_HEAD = 10
            TYPE_SALES_COORDINATOR = 11
            TYPE_ZONE_HEAD = 12
            TYPE_RELATIONSHIP_MANAGER = 13
            TYPE_RELATIONSHIP_OFFICER = 14
            TYPE_MERCHANT_SERVICE = 15
            <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {            
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "Employees": [
                          {
                              "id": 1,
                              "userId": 458,
                              "officeId": 2,
                              "label": null,
                              "color": "#ffffff",
                              "title": null,
                              "image": null,
                              "type": 15,
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-09 22:09:16",
                              "updated_at": "2017-04-09 22:09:16",
                              "pipedrive_user_id": null,
                              "office": {
                                  "id": 2,
                                  "companyId": 1,
                                  "name": "New Delhi",
                                  "lat": "28.558183",
                                  "lng": "77.155724",
                                  "pincode": "110057",
                                  "cityId": 1380,
                                  "stateId": 6,
                                  "countryId": 103,
                                  "status": 1,
                                  "created_by": 0,
                                  "updated_by": 0,
                                  "created_at": "2017-04-07 06:15:43",
                                  "updated_at": "2017-04-07 06:15:43",
                                  "city": {
                                      "cityId": 1380,
                                      "countryId": 103,
                                      "stateId": 6,
                                      "cityName": "New Delhi",
                                      "createdUserId": 0,
                                      "created_at": 0,
                                      "updatedUserId": 0,
                                      "updated_at": 0,
                                      "status": 0
                                  },
                                  "state": {
                                      "stateId": 6,
                                      "countryId": 103,
                                      "stateName": "Delhi",
                                      "createdUserId": 0,
                                      "created_at": 0,
                                      "updatedUserId": 0,
                                      "updated_at": 0,
                                      "status": 0
                                  },
                                  "country": {
                                      "countryId": 103,
                                      "countryName": "India",
                                      "countryDialCode": "91",
                                      "countryDomainExtension": "",
                                      "countryAlpha2Code": "IN",
                                      "countryAlpha3Code": "IND",
                                      "countryNumericCode": 356,
                                      "countryISOCode": "",
                                      "createdUserId": 1,
                                      "created_at": 0,
                                      "updatedUserId": 1,
                                      "updated_at": 0,
                                      "status": 1
                                  },
                                  "countryName": "India"
                              },
                              "user": {
                                  "id": 458,
                                  "roleId": 2,
                                  "rolePlan": null,
                                  "userRole": "Relationship Manager",
                                  "storeAddress": "",
                                  "storeAddress2": null,
                                  "storeStateName": "",
                                  "storeCityName": "",
                                  "storePincode": null,
                                  "username": "agon.xheladini@eigital.com",
                                  "merchantId": 471,
                                  "storeLocationId": 423,
                                  "auth_key": "",
                                  "auth_key_creationtime": 0,
                                  "userMobileNumber": "5769343181818558011",
                                  "userFirstName": "",
                                  "userMiddleName": "",
                                  "userLastName": "",
                                  "userImage": "",
                                  "cityId": 0,
                                  "stateId": 0,
                                  "pincode": "",
                                  "countryCode": "IN",
                                  "userAddress1": "",
                                  "userAddress2": "",
                                  "userIMEI": "",
                                  "userPanNumber": "",
                                  "userAppVersion": "0.00",
                                  "dateOfBirth": "",
                                  "status": 1,
                                  "created_at": 1467460359,
                                  "updated_at": 1480941883,
                                  "pubsubToken": "d41d8cd98f00b204e9800998ecf8427e"
                              }
                          },
                          {
                              "id": 2,
                              "userId": 2734,
                              "officeId": 1,
                              "label": "MRF",
                              "color": "#ffffff",
                              "title": "",
                              "image": null,
                              "type": 14,
                              "status": 1,
                              "created_by": 2734,
                              "updated_by": 2734,
                              "created_at": "2017-04-10 00:38:01",
                              "updated_at": "2017-04-10 00:38:01",
                              "pipedrive_user_id": null,
                              "office": {
                                  "id": 1,
                                  "companyId": 1,
                                  "name": "Mumbai",
                                  "lat": "19.072664",
                                  "lng": "72.870992",
                                  "pincode": "400051",
                                  "cityId": 2913,
                                  "stateId": 13,
                                  "countryId": 103,
                                  "status": 1,
                                  "created_by": 0,
                                  "updated_by": 0,
                                  "created_at": "2017-04-07 06:15:43",
                                  "updated_at": "2017-04-07 06:15:43",
                                  "city": {
                                      "cityId": 2913,
                                      "countryId": 103,
                                      "stateId": 13,
                                      "cityName": "Mumbai",
                                      "createdUserId": 0,
                                      "created_at": 0,
                                      "updatedUserId": 0,
                                      "updated_at": 0,
                                      "status": 0
                                  },
                                  "state": {
                                      "stateId": 13,
                                      "countryId": 103,
                                      "stateName": "Maharashtra",
                                      "createdUserId": 0,
                                      "created_at": 0,
                                      "updatedUserId": 0,
                                      "updated_at": 0,
                                      "status": 0
                                  },
                                  "country": {
                                      "countryId": 103,
                                      "countryName": "India",
                                      "countryDialCode": "91",
                                      "countryDomainExtension": "",
                                      "countryAlpha2Code": "IN",
                                      "countryAlpha3Code": "IND",
                                      "countryNumericCode": 356,
                                      "countryISOCode": "",
                                      "createdUserId": 1,
                                      "created_at": 0,
                                      "updatedUserId": 1,
                                      "updated_at": 0,
                                      "status": 1
                                  },
                                  "countryName": "India"
                              },
                              "user": {
                                  "id": 2734,
                                  "roleId": 1,
                                  "rolePlan": null,
                                  "userRole": "Relationship Officer",
                                  "storeAddress": "__",
                                  "storeAddress2": null,
                                  "storeStateName": "",
                                  "storeCityName": "",
                                  "storePincode": null,
                                  "username": "mrfarmani@gmail.com",
                                  "merchantId": 2784,
                                  "storeLocationId": 2298,
                                  "auth_key": "",
                                  "auth_key_creationtime": 0,
                                  "userMobileNumber": "989153023376",
                                  "userFirstName": "Mohammad",
                                  "userMiddleName": "Reza",
                                  "userLastName": "Farmani",
                                  "userImage": "",
                                  "cityId": 0,
                                  "stateId": 0,
                                  "pincode": "400051",
                                  "countryCode": "IN",
                                  "userAddress1": "",
                                  "userAddress2": "",
                                  "userIMEI": "",
                                  "userPanNumber": "",
                                  "userAppVersion": "2.00",
                                  "dateOfBirth": "16-04-1997",
                                  "status": 1,
                                  "created_at": 1491809881,
                                  "updated_at": 1491809881,
                                  "pubsubToken": "d41d8cd98f00b204e9800998ecf8427e"
                              }
                          }
                      ],
                      "total": "2"
                  }
              }
  put:
    description: To edit a barber.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - employee id is unique identifier for each employee.</p>
            <p><b><i>title</i></b> - title of employee. <u>Optional</u></p>
            <p><b><i>label</i></b> - Label of employee.</p>
            <p><b><i>type</i></b> - type of imployee. 
            <br />TYPE_SALES_HEAD = 10
            <br />TYPE_SALES_COORDINATOR = 11
            <br />TYPE_ZONE_HEAD = 12
            <br />TYPE_RELATIONSHIP_MANAGER = 13
            <br />TYPE_RELATIONSHIP_OFFICER = 14
            <br />TYPE_MERCHANT_SERVICE = 15            
            <u>Optional</u></p>
            <p><b><i>file</i></b> - image of employee. <u>Optional</u></p>
            <p><b><i>color</i></b> - HEX value of employee color "#ffffff". <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
              "id": 1,
              "officeId": 2
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "id": 1,
                      "userId": 458,
                      "officeId": 2,
                      "label": null,
                      "color": "#ffffff",
                      "title": null,
                      "image": null,
                      "type": 15,
                      "status": 1,
                      "created_by": 0,
                      "updated_by": 0,
                      "created_at": "2017-04-09 22:09:16",
                      "updated_at": "2017-04-09 22:09:16",
                      "pipedrive_user_id": null
                  }
              }
  delete:
    description: To delete an employee.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - employee id is unique identifier for each employee.</p>
    body:
      application/json:
        example: |
          {
            "id": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/employees/me:
  description: get current user employee information
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {            
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "employee": {
                          "id": 2,
                          "userId": 2734,
                          "officeId": 1,
                          "label": "MRF",
                          "color": "#ffffff",
                          "title": "",
                          "image": null,
                          "type": 14,
                          "status": 1,
                          "created_by": 2734,
                          "updated_by": 2734,
                          "created_at": "2017-04-10 00:38:01",
                          "updated_at": "2017-04-10 00:38:01",
                          "pipedrive_user_id": null
                      },
                      "office": {
                          "id": 1,
                          "companyId": 1,
                          "name": "Mumbai",
                          "lat": "19.072664",
                          "lng": "72.870992",
                          "pincode": "400051",
                          "cityId": 2913,
                          "stateId": 13,
                          "countryId": 103,
                          "status": 1,
                          "created_by": 0,
                          "updated_by": 0,
                          "created_at": "2017-04-07 06:15:43",
                          "updated_at": "2017-04-07 06:15:43",
                          "city": {
                              "cityId": 2913,
                              "countryId": 103,
                              "stateId": 13,
                              "cityName": "Mumbai",
                              "createdUserId": 0,
                              "created_at": 0,
                              "updatedUserId": 0,
                              "updated_at": 0,
                              "status": 0
                          },
                          "state": {
                              "stateId": 13,
                              "countryId": 103,
                              "stateName": "Maharashtra",
                              "createdUserId": 0,
                              "created_at": 0,
                              "updatedUserId": 0,
                              "updated_at": 0,
                              "status": 0
                          },
                          "country": {
                              "countryId": 103,
                              "countryName": "India",
                              "countryDialCode": "91",
                              "countryDomainExtension": "",
                              "countryAlpha2Code": "IN",
                              "countryAlpha3Code": "IND",
                              "countryNumericCode": 356,
                              "countryISOCode": "",
                              "createdUserId": 1,
                              "created_at": 0,
                              "updatedUserId": 1,
                              "updated_at": 0,
                              "status": 1
                          },
                          "countryName": "India"
                      },
                      "user": {
                          "id": 2734,
                          "roleId": 1,
                          "rolePlan": null,
                          "userRole": "Super Admin1",
                          "storeAddress": "__",
                          "storeAddress2": null,
                          "storeStateName": "",
                          "storeCityName": "",
                          "storePincode": null,
                          "username": "mrfarmani@gmail.com",
                          "merchantId": 2784,
                          "storeLocationId": 2298,
                          "auth_key": "",
                          "auth_key_creationtime": 0,
                          "userMobileNumber": "989153023376",
                          "userFirstName": "Mohammad",
                          "userMiddleName": "Reza",
                          "userLastName": "Farmani",
                          "userImage": "",
                          "cityId": 0,
                          "stateId": 0,
                          "pincode": "400051",
                          "countryCode": "IN",
                          "userAddress1": "",
                          "userAddress2": "",
                          "userIMEI": "",
                          "userPanNumber": "",
                          "userAppVersion": "2.00",
                          "dateOfBirth": "16-04-1997",
                          "status": 1,
                          "created_at": 1491809881,
                          "updated_at": 1491809881,
                          "loginAttempt": 0,
                          "pubsubToken": "d41d8cd98f00b204e9800998ecf8427e"
                      }
                  }
              }
/appointments:
  description: endpoints to work with appointments
  get:
    description: To fetch a list of appointment. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible departments will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - employee id fetch specific employee information. <u>Optional</u></p>
            <p><b><i>ids</i></b> - an array of employee id fetch a list of employees information. <u>Optional</u></p>
            <p><b><i>cityId</i></b> - get a list of appointment for a city. <u>Optional</u></p>
            <p><b><i>cityIds</i></b> -  get a list of appointment for different cities. <u>Optional</u></p>
            <p><b><i>stateId</i></b> - get a list of appointment for a state. <u>Optional</u></p>
            <p><b><i>stateIds</i></b> -  get a list of appointment for different states. <u>Optional</u></p>
            <p><b><i>countryId</i></b> - get a list of appointment for a country. <u>Optional</u></p>
            <p><b><i>countryIds</i></b> -  get a list of appointment for different countries. <u>Optional</u></p>
            <p><b><i>officeId</i></b> - get a list of appointment for an office. <u>Optional</u></p>
            <p><b><i>officeIds</i></b> -  get a list of appointment for different offices. <u>Optional</u></p>
            <p><b><i>employeeId</i></b> - get a list of appointment for an employee. <u>Optional</u></p>
            <p><b><i>employeeIds</i></b> -  get a list of appointment for different employees. <u>Optional</u></p>
            <p><b><i>date</i></b> - this parameter can be a string format of 'YYYY-MM-DD' or and array with two index 'from' and 'to' each of them should be in format of 'YYYY-MM-DD' the first one will look for exact date and the second one is look for all appointment have been made for between from and to date.<u>Optional</u></p>
            <p><b><i>startTime</i></b> - fetch all appointment which start after this start time. <u>Optional</u></p>
            <p><b><i>endTime</i></b> - fetch all appointment which end before this end time. <u>Optional</u></p>
            <p><b><i>status</i></b> - fetch all appointment with this special active status.
            <br />APPOINTMENT_STATUS_INITIATED = 10
            <br />APPOINTMENT_STATUS_PENDING = 21
            <br />APPOINTMENT_STATUS_LOST = 22
            <br />APPOINTMENT_STATUS_WON = 23
            <br />APPOINTMENT_STATUS_WON_APPROVED = 31
            <br />APPOINTMENT_STATUS_WON_FAILED = 32
            <br />APPOINTMENT_STATUS_WON_PENDING = 33;
            <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>topRight</i></b> - an object with lat/lng values indicate top right of search rectangle. <u>Optional</u></p>
            <p><b><i>bottomLeft</i></b> - an object with lat/lng values indicate bottom left of search rectangle. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {            
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Appointments": [
                    {
                      "id": 1,
                      "employeeId": 1,
                      "officeId": 2,
                      "organizationId": null,
                      "contactId": null,
                      "title": "Appointment with Maheshwari at ePaisa",
                      "organizationName": "LG",
                      "contactName": "Maheshwari Reddy",
                      "phoneNumber": "+91 11 4178 2000",
                      "email": null,
                      "countryId": null,
                      "stateId": null,
                      "cityId": null,
                      "addressLine1": "7/8 Shantipath",
                      "addressLine2": "Chanakyapuri New Delhi 110 021",
                      "date": "2017-04-12",
                      "startTime": "10:00:00",
                      "endTime": "11:00:00",
                      "lat": "19.072664",
                      "lng": "72.870992",
                      "closure": 0,
                      "status": 1,
                      "created_by": 2734,
                      "updated_by": 2734,
                      "created_at": "2017-04-13 22:22:39",
                      "updated_at": "2017-04-13 22:22:39",
                      "pipedrive_deal_id": null,
                      "rescheduleAppointments": [
                        {
                          "id": 1,
                          "appointmentId": 1,
                          "officeId": 1,
                          "employeeId": 2,
                          "reasonId": 8,
                          "remark": "Merchant wants to postpone the meeting as he has important work",
                          "date": "2017-04-15",
                          "startTime": "12:30:00",
                          "endTime": "13:00:00",
                          "status": 1,
                          "created_by": 2734,
                          "updated_by": 2734,
                          "created_at": "2017-04-13 23:44:01",
                          "updated_at": "2017-04-13 23:44:01",
                          "reason": {
                            "id": 8,
                            "description": "Conflicts in time.",
                            "type": 0,
                            "status": 1,
                            "created_by": 0,
                            "updated_by": 0,
                            "created_at": "2017-04-12 03:55:36",
                            "updated_at": "2017-04-12 03:55:36"
                          }
                        },
                        {
                          "id": 2,
                          "appointmentId": 1,
                          "officeId": 1,
                          "employeeId": 2,
                          "reasonId": 8,
                          "remark": "Merchant wants to postpone the meeting as he has important work",
                          "date": "2017-04-18",
                          "startTime": "12:30:00",
                          "endTime": "13:00:00",
                          "status": 1,
                          "created_by": 2734,
                          "updated_by": 2734,
                          "created_at": "2017-04-13 23:48:19",
                          "updated_at": "2017-04-13 23:48:19",
                          "reason": {
                            "id": 8,
                            "description": "Conflicts in time.",
                            "type": 0,
                            "status": 1,
                            "created_by": 0,
                            "updated_by": 0,
                            "created_at": "2017-04-12 03:55:36",
                            "updated_at": "2017-04-12 03:55:36"
                          }
                        },
                        {
                          "id": 3,
                          "appointmentId": 1,
                          "officeId": 1,
                          "employeeId": 2,
                          "reasonId": 8,
                          "remark": "Merchant wants to postpone the meeting as he has important work",
                          "date": "2017-04-19",
                          "startTime": "12:30:00",
                          "endTime": "13:00:00",
                          "status": 1,
                          "created_by": 2734,
                          "updated_by": 2734,
                          "created_at": "2017-04-13 23:58:09",
                          "updated_at": "2017-04-13 23:58:09",
                          "reason": {
                            "id": 8,
                            "description": "Conflicts in time.",
                            "type": 0,
                            "status": 1,
                            "created_by": 0,
                            "updated_by": 0,
                            "created_at": "2017-04-12 03:55:36",
                            "updated_at": "2017-04-12 03:55:36"
                          }
                        }
                      ],
                      "activeRescheduleAppointment": {
                        "id": 3,
                        "appointmentId": 1,
                        "officeId": 1,
                        "employeeId": 2,
                        "reasonId": 8,
                        "remark": "Merchant wants to postpone the meeting as he has important work",
                        "date": "2017-04-19",
                        "startTime": "12:30:00",
                        "endTime": "13:00:00",
                        "status": 1,
                        "created_by": 2734,
                        "updated_by": 2734,
                        "created_at": "2017-04-13 23:58:09",
                        "updated_at": "2017-04-13 23:58:09",
                        "reason": {
                          "id": 8,
                          "description": "Conflicts in time.",
                          "type": 0,
                          "status": 1,
                          "created_by": 0,
                          "updated_by": 0,
                          "created_at": "2017-04-12 03:55:36",
                          "updated_at": "2017-04-12 03:55:36"
                        }
                      },
                      "statuses": [
                        {
                          "id": 1,
                          "appointmentId": 1,
                          "planId": null,
                          "reasonId": null,
                          "value": 41,
                          "description": null,
                          "status": 1,
                          "created_by": 2734,
                          "updated_by": 2734,
                          "created_at": "2017-04-13 22:22:39",
                          "updated_at": "2017-04-13 22:22:39",
                          "reason": null,
                          "plan": null,
                          "products": [
                            {
                              "id": 6,
                              "name": "2 Inch Printer",
                              "description": "Connect your point of sale system to the wireless printer, and print beautiful custom receipts. It`s Small in size and lightweight device. Its about 220 to 330 gms and has a battery life of 500 cycles.",
                              "image": "https://ui.epaisa.com/www/app/img/epaisa_printer1.png",
                              "price": "6500.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                            },
                            {
                              "id": 10,
                              "name": "Extra Devices",
                              "description": null,
                              "image": null,
                              "price": "4950.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                            }
                          ]
                        },
                        {
                          "id": 2,
                          "appointmentId": 1,
                          "planId": null,
                          "reasonId": null,
                          "value": 24,
                          "description": null,
                          "status": 2,
                          "created_by": 2734,
                          "updated_by": 2734,
                          "created_at": "2017-04-13 23:58:09",
                          "updated_at": "2017-04-13 23:58:09",
                          "reason": null,
                          "plan": null,
                          "products": []
                        }
                      ],
                      "activeStatus": {
                        "id": 1,
                        "appointmentId": 1,
                        "planId": null,
                        "reasonId": null,
                        "value": 41,
                        "description": null,
                        "status": 1,
                        "created_by": 2734,
                        "updated_by": 2734,
                        "created_at": "2017-04-13 22:22:39",
                        "updated_at": "2017-04-13 22:22:39",
                        "reason": null,
                        "plan": null,
                        "products": [
                          {
                            "id": 6,
                            "name": "2 Inch Printer",
                            "description": "Connect your point of sale system to the wireless printer, and print beautiful custom receipts. It`s Small in size and lightweight device. Its about 220 to 330 gms and has a battery life of 500 cycles.",
                            "image": "https://ui.epaisa.com/www/app/img/epaisa_printer1.png",
                            "price": "6500.00",
                            "status": 1,
                            "created_by": 0,
                            "updated_by": 0,
                            "created_at": "2017-04-18 23:21:34",
                            "updated_at": "2017-04-18 23:21:34"
                          },
                          {
                            "id": 10,
                            "name": "Extra Devices",
                            "description": null,
                            "image": null,
                            "price": "4950.00",
                            "status": 1,
                            "created_by": 0,
                            "updated_by": 0,
                            "created_at": "2017-04-18 23:21:34",
                            "updated_at": "2017-04-18 23:21:34"
                          }
                        ]
                      },
                      "office": {
                        "id": 2,
                        "companyId": 1,
                        "name": "New Delhi",
                        "lat": "28.558183",
                        "lng": "77.155724",
                        "pincode": "110057",
                        "cityId": 1380,
                        "stateId": 6,
                        "countryId": 103,
                        "status": 1,
                        "created_by": 0,
                        "updated_by": 0,
                        "created_at": "2017-04-07 06:15:43",
                        "updated_at": "2017-04-07 06:15:43",
                        "city": {
                          "cityId": 1380,
                          "countryId": 103,
                          "stateId": 6,
                          "cityName": "New Delhi",
                          "createdUserId": 0,
                          "created_at": 0,
                          "updatedUserId": 0,
                          "updated_at": 0,
                          "status": 0
                        },
                        "state": {
                          "stateId": 6,
                          "countryId": 103,
                          "stateName": "Delhi",
                          "createdUserId": 0,
                          "created_at": 0,
                          "updatedUserId": 0,
                          "updated_at": 0,
                          "status": 0
                        },
                        "countryName": "India"
                      },
                      "city": null,
                      "state": null,
                      "country": null,
                      "employee": {
                        "id": 1,
                        "userId": 458,
                        "officeId": 2,
                        "label": null,
                        "color": "#ffffff",
                        "title": null,
                        "image": null,
                        "type": 15,
                        "status": 1,
                        "created_by": 0,
                        "updated_by": 0,
                        "created_at": "2017-04-09 22:09:16",
                        "updated_at": "2017-04-09 22:09:16",
                        "pipedrive_user_id": null,
                        "user": {
                          "id": 458,
                          "roleId": 106,
                          "rolePlan": 3,
                          "userRole": "Merchant (Suvidha)",
                          "storeAddress": "",
                          "storeAddress2": null,
                          "storeStateName": "",
                          "storeCityName": "",
                          "storePincode": null,
                          "username": "agon.xheladini@eigital.com",
                          "merchantId": 471,
                          "storeLocationId": 423,
                          "auth_key": "",
                          "auth_key_creationtime": 0,
                          "userMobileNumber": "5769343181818558011",
                          "userFirstName": "",
                          "userMiddleName": "",
                          "userLastName": "",
                          "userImage": "",
                          "cityId": 0,
                          "stateId": 0,
                          "pincode": "",
                          "countryCode": "IN",
                          "userAddress1": "",
                          "userAddress2": "",
                          "userIMEI": "",
                          "userPanNumber": "",
                          "userAppVersion": "0.00",
                          "dateOfBirth": "",
                          "status": 1,
                          "created_at": 1467460359,
                          "updated_at": 1480941883,
                          "loginAttempt": 0,
                          "pubsubToken": "d41d8cd98f00b204e9800998ecf8427e"
                        }
                      }
                    }
                  ],
                  "total": "1"
                }
              }
  post:
    description: To create an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>title</i></b> - title of appointment.</p>
            <p><b><i>date</i></b> - date of appointment in this format only 'YYYY-MM-DD'.</p>
            <p><b><i>startTime</i></b> - start time of appointment in this format only HH:MM</p>
            <p><b><i>endTime</i></b> - start time of appointment in this format only HH:MM</p>
            <p><b><i>employeeId</i></b> - unique identifier for the employee.</p>
            <p><b><i>officeId</i></b> - unique identifier for the office.</p>
            <p><b><i>contactName</i></b> - name of a person who is in charge in the destination organization.</p>
            <p><b><i>organizationName</i></b> - name of the organization.</p>
            <p><b><i>phoneNumber</i></b> - phone number of the organization.</p>
            <p><b><i>countryId</i></b> - country of the organization.</p>
            <p><b><i>stateId</i></b> - state of the organization.</p>
            <p><b><i>cityId</i></b> - city of the organization.</p>
            <p><b><i>addressLine1</i></b> - address line 1 of the organization.</p>
            <p><b><i>addressLine2</i></b> - address line 2 of the organization <u>Optional</u></p>
            <p><b><i>lat</i></b> - latitude of the company geo location <u>Optional</u></p>
            <p><b><i>lng</i></b> - longitude of the company geo location <u>Optional</u></p>
            <p><b><i>note</i></b> - a descriptive note for the appointment <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
              "title": "Appointment with Maheshwari at ePaisa",
              "date": "2017-04-12",
              "startTime": "10:00",
              "endTime": "11:00",
              "employeeId": 1,
              "officeId": 2,
              "contactName": "Maheshwari Reddy",
              "phoneNumber": "+911141782000",
              "addressLine1": "7\/8 Shantipath",
              "addressLine2": "Chanakyapuri New Delhi 110 021"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "title": "Appointment with Maheshwari at ePaisa",
                      "date": "2017-04-12",
                      "startTime": "10:00:00",
                      "endTime": "11:00:00",
                      "employeeId": 1,
                      "officeId": 2,
                      "organizationName": "LG",
                      "contactName": "Maheshwari Reddy",
                      "phoneNumber": "+91 11 4178 2000",
                      "addressLine1": "7\/8 Shantipath",
                      "addressLine2": "Chanakyapuri New Delhi 110 021",
                      "created_by": 2734,
                      "updated_by": 2734,
                      "created_at": "2017-04-13 22:22:39",
                      "updated_at": "2017-04-13 22:22:39",
                      "id": 1,
                      "organizationId": null,
                      "contactId": null,
                      "email": null,
                      "countryId": null,
                      "stateId": null,
                      "cityId": null,
                      "lat": null,
                      "lng": null,
                      "closure": 0,
                      "status": 1,
                      "pipedrive_deal_id": null,
                      "statuses": [
                          {
                              "id": 1,
                              "appointmentId": 1,
                              "planId": null,
                              "productId": null,
                              "reasonId": null,
                              "value": 10,
                              "description": null,
                              "status": 1,
                              "created_by": 2734,
                              "updated_by": 2734,
                              "created_at": "2017-04-13 22:22:39",
                              "updated_at": "2017-04-13 22:22:39"
                          }
                      ],
                      "notes": [],
                      "office": {
                          "id": 2,
                          "companyId": 1,
                          "name": "New Delhi",
                          "lat": "28.558183",
                          "lng": "77.155724",
                          "pincode": "110057",
                          "cityId": 1380,
                          "stateId": 6,
                          "countryId": 103,
                          "status": 1,
                          "created_by": 0,
                          "updated_by": 0,
                          "created_at": "2017-04-07 06:15:43",
                          "updated_at": "2017-04-07 06:15:43",
                          "city": {
                              "cityId": 1380,
                              "countryId": 103,
                              "stateId": 6,
                              "cityName": "New Delhi",
                              "createdUserId": 0,
                              "created_at": 0,
                              "updatedUserId": 0,
                              "updated_at": 0,
                              "status": 0
                          },
                          "state": {
                              "stateId": 6,
                              "countryId": 103,
                              "stateName": "Delhi",
                              "createdUserId": 0,
                              "created_at": 0,
                              "updatedUserId": 0,
                              "updated_at": 0,
                              "status": 0
                          },
                          "country": {
                              "countryId": 103,
                              "countryName": "India",
                              "countryDialCode": "91",
                              "countryDomainExtension": "",
                              "countryAlpha2Code": "IN",
                              "countryAlpha3Code": "IND",
                              "countryNumericCode": 356,
                              "countryISOCode": "",
                              "createdUserId": 1,
                              "created_at": 0,
                              "updatedUserId": 1,
                              "updated_at": 0,
                              "status": 1
                          },
                          "countryName": "India"
                      },
                      "employee": {
                          "id": 1,
                          "userId": 458,
                          "officeId": 2,
                          "label": null,
                          "color": "#ffffff",
                          "title": null,
                          "image": null,
                          "type": 15,
                          "status": 1,
                          "created_by": 0,
                          "updated_by": 0,
                          "created_at": "2017-04-09 22:09:16",
                          "updated_at": "2017-04-09 22:09:16",
                          "pipedrive_user_id": null
                      }
                  }
              }
  put:
    description: To edit an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - id of the appointment you want to edit.</p>
            <p><b><i>title</i></b> - title of appointment.</p>
            <p><b><i>date</i></b> - date of appointment in this format only 'YYYY-MM-DD'.</p>
            <p><b><i>startTime</i></b> - start time of appointment in this format only HH:MM</p>
            <p><b><i>endTime</i></b> - start time of appointment in this format only HH:MM</p>
            <p><b><i>employeeId</i></b> - unique identifier for the employee.</p>
            <p><b><i>officeId</i></b> - unique identifier for the office.</p>
            <p><b><i>contactName</i></b> - name of a person who is in charge in the destination organization.</p>
            <p><b><i>organizationName</i></b> - name of the organization.</p>
            <p><b><i>phoneNumber</i></b> - phone number of the organization.</p>
            <p><b><i>countryId</i></b> - country of the organization.</p>
            <p><b><i>stateId</i></b> - state of the organization.</p>
            <p><b><i>cityId</i></b> - city of the organization.</p>
            <p><b><i>addressLine1</i></b> - address line 1 of the organization.</p>
            <p><b><i>addressLine2</i></b> - address line 2 of the organization <u>Optional</u></p>
            <p><b><i>lat</i></b> - latitude of the company geo location <u>Optional</u></p>
            <p><b><i>lng</i></b> - longitude of the company geo location <u>Optional</u></p>
            <p><b><i>note</i></b> - a descriptive note for the appointment <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "id" : 1,
            "title": "Appointment with Maheshwari at ePaisa"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "title": "Appointment with Maheshwari at ePaisa",
                      "date": "2017-04-12",
                      "startTime": "10:00:00",
                      "endTime": "11:00:00",
                      "employeeId": 1,
                      "officeId": 2,
                      "organizationName": "LG",
                      "contactName": "Maheshwari Reddy",
                      "phoneNumber": "+91 11 4178 2000",
                      "addressLine1": "7\/8 Shantipath",
                      "addressLine2": "Chanakyapuri New Delhi 110 021",
                      "created_by": 2734,
                      "updated_by": 2734,
                      "created_at": "2017-04-13 22:22:39",
                      "updated_at": "2017-04-13 22:22:39",
                      "id": 1,
                      "organizationId": null,
                      "contactId": null,
                      "email": null,
                      "countryId": null,
                      "stateId": null,
                      "cityId": null,
                      "lat": null,
                      "lng": null,
                      "closure": 0,
                      "status": 1,
                      "pipedrive_deal_id": null,
                      "statuses": [
                          {
                              "id": 1,
                              "appointmentId": 1,
                              "planId": null,
                              "productId": null,
                              "reasonId": null,
                              "value": 10,
                              "description": null,
                              "status": 1,
                              "created_by": 2734,
                              "updated_by": 2734,
                              "created_at": "2017-04-13 22:22:39",
                              "updated_at": "2017-04-13 22:22:39"
                          }
                      ],
                      "notes": [],
                      "office": {
                          "id": 2,
                          "companyId": 1,
                          "name": "New Delhi",
                          "lat": "28.558183",
                          "lng": "77.155724",
                          "pincode": "110057",
                          "cityId": 1380,
                          "stateId": 6,
                          "countryId": 103,
                          "status": 1,
                          "created_by": 0,
                          "updated_by": 0,
                          "created_at": "2017-04-07 06:15:43",
                          "updated_at": "2017-04-07 06:15:43",
                          "city": {
                              "cityId": 1380,
                              "countryId": 103,
                              "stateId": 6,
                              "cityName": "New Delhi",
                              "createdUserId": 0,
                              "created_at": 0,
                              "updatedUserId": 0,
                              "updated_at": 0,
                              "status": 0
                          },
                          "state": {
                              "stateId": 6,
                              "countryId": 103,
                              "stateName": "Delhi",
                              "createdUserId": 0,
                              "created_at": 0,
                              "updatedUserId": 0,
                              "updated_at": 0,
                              "status": 0
                          },
                          "country": {
                              "countryId": 103,
                              "countryName": "India",
                              "countryDialCode": "91",
                              "countryDomainExtension": "",
                              "countryAlpha2Code": "IN",
                              "countryAlpha3Code": "IND",
                              "countryNumericCode": 356,
                              "countryISOCode": "",
                              "createdUserId": 1,
                              "created_at": 0,
                              "updatedUserId": 1,
                              "updated_at": 0,
                              "status": 1
                          },
                          "countryName": "India"
                      },
                      "employee": {
                          "id": 1,
                          "userId": 458,
                          "officeId": 2,
                          "label": null,
                          "color": "#ffffff",
                          "title": null,
                          "image": null,
                          "type": 15,
                          "status": 1,
                          "created_by": 0,
                          "updated_by": 0,
                          "created_at": "2017-04-09 22:09:16",
                          "updated_at": "2017-04-09 22:09:16",
                          "pipedrive_user_id": null
                      }
                  }
              }
  delete:
    description: To delete an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - employee id is unique identifier for each appointment.</p>
    body:
      application/json:
        example: |
          {
            "id": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/appointments/reschedule:
  description: endpoints to work with appointments reschedule
  post:
    description: To create an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentId</i></b> - unique identifier for the appointment.</p>
            <p><b><i>employeeId</i></b> - unique identifier for the employee.</p>
            <p><b><i>officeId</i></b> - unique identifier for the office.</p>
            <p><b><i>date</i></b> - date of appointment in this format only 'YYYY-MM-DD'.</p>
            <p><b><i>startTime</i></b> - start time of appointment in this format only HH:MM</p>
            <p><b><i>endTime</i></b> - start time of appointment in this format only HH:MM</p>
            <p><b><i>reason</i></b> - reason for scheduling.
            <br />REASON_MERCHANT_TIME_CONFLICT = 10
            <br />REASON_MERCHANT_NOT_AVAILABLE = 11
            <br />REASON_MERCHANT_BUSY = 12
            <br />REASON_EMPLOYEE_STUCK_IN_MEETING = 13</p>
            <p><b><i>remark</i></b> - a description about rescheduling.</p>
    body:
      application/json:
        example: |
          {
              "appointmentId": 1,
              "date": "2017-04-19",
              "startTime": "12:30",
              "endTime": "13:00",
              "employeeId": 2,
              "officeId": 1,
              "reasonId": 8,
              "remark": "Merchant wants to postpone the meeting as he has important work"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "appointmentId": 1,
                      "date": "2017-04-19",
                      "startTime": "12:30:00",
                      "endTime": "13:00:00",
                      "employeeId": 2,
                      "officeId": 1,
                      "reasonId": 8,
                      "remark": "Merchant wants to postpone the meeting as he has important work",
                      "created_by": 2734,
                      "updated_by": 2734,
                      "created_at": "2017-04-13 23:58:09",
                      "updated_at": "2017-04-13 23:58:09",
                      "id": 3,
                      "status": 1
                  }
              }
  put:
    description: To edit an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - id of the appointment reschedule you want to edit.</p>
            <p><b><i>appointmentId</i></b> - unique identifier for the appointment.</p>
            <p><b><i>employeeId</i></b> - unique identifier for the employee.</p>
            <p><b><i>officeId</i></b> - unique identifier for the office.</p>
            <p><b><i>date</i></b> - date of appointment in this format only 'YYYY-MM-DD'.</p>
            <p><b><i>startTime</i></b> - start time of appointment in this format only HH:MM</p>
            <p><b><i>endTime</i></b> - start time of appointment in this format only HH:MM</p>
            <p><b><i>reason</i></b> - reason for scheduling.
            <br />REASON_MERCHANT_TIME_CONFLICT = 10
            <br />REASON_MERCHANT_NOT_AVAILABLE = 11
            <br />REASON_MERCHANT_BUSY = 12
            <br />REASON_EMPLOYEE_STUCK_IN_MEETING = 13</p>
            <p><b><i>remark</i></b> - a description about rescheduling.</p>
    body:
      application/json:
        example: |
          {
            "id" : 1,
            "reason": 12
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "date": "2017-05-12",
                      "startTime": "10:00:00",
                      "endTime": "11:00:00",
                      "employeeId": 1,
                      "officeId": 2,
                      "appointmentId": 12,
                      "remark": "merchant was so busy.",
                      "reason": 12,
                      "created_by": 2734,
                      "updated_by": 2734,
                      "created_at": "2017-04-11 04:18:02",
                      "updated_at": "2017-04-11 04:18:02",
                      "id": 1,
                      "status": 1
                  }
              }
  delete:
    description: To delete an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - employee id is unique identifier for each appointment reschedule.</p>
    body:
      application/json:
        example: |
          {
            "id": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/appointments/status:
  description: Appointment status endpoit provide you create/edit/delete the functionality you need to work with appointment status apis.
  post:
    description: To create a new appointment status.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentId</i></b> - appointmentId is unique identifier for each appointment.</p>
            <p><b><i>description</i></b> - a description for appointement status may be the reason of this status or whatever can be. <u>Optional</u></p>
            <p><b><i>value</i></b> - value can be 
            <br />APPOINTMENT_STATUS_INITIATED = 10
            <br />APPOINTMENT_STATUS_PENDING = 21
            <br />APPOINTMENT_STATUS_LOST = 22
            <br />APPOINTMENT_STATUS_WON = 23
            <br />APPOINTMENT_STATUS_RESCHEDULE = 24
            <br />APPOINTMENT_STATUS_WON_APPROVED = 31
            <br />APPOINTMENT_STATUS_WON_FAILED = 32
            <br />APPOINTMENT_STATUS_WON_PENDING = 33
            </p>
            <p><b><i>planId</i></b> - if won you can include a planId. <u>Optional</u></p>
            <p><b><i>productId</i></b> - if won you can incluse a productId. <u>Optional</u></p>
            <p><b><i>reasonId</i></b> - if lost you can incluse a reasonId. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "appointmentId": 3,
            "value": 21
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "id": 5,
                      "appointmentId": 3,
                      "value": 22,
                      "description": null,
                      "status": 1,
                      "created_by": 2734,
                      "updated_by": 2734,
                      "created_at": "2017-04-10 01:04:05",
                      "updated_at": "2017-04-10 01:04:05"
                  }
              }
  put:
    description: To edit an appointment status.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - id is a unique id for each appointment status.</p></p>
            <p><b><i>description</i></b> - a description for appointement status may be the reason of this status or whatever can be. <u>Optional</u></p>
            <p><b><i>value</i></b> - value can be 
            <br />APPOINTMENT_STATUS_INITIATED = 10
            <br />APPOINTMENT_STATUS_PENDING = 21
            <br />APPOINTMENT_STATUS_LOST = 22
            <br />APPOINTMENT_STATUS_WON = 23
            <br />APPOINTMENT_STATUS_RESCHEDULE = 24
            <br />APPOINTMENT_STATUS_WON_APPROVED = 31
            <br />APPOINTMENT_STATUS_WON_FAILED = 32
            <br />APPOINTMENT_STATUS_WON_PENDING = 33
            </p>
    body:
      application/json:
        example: |
          {
            "id": 5,
            "value": 22
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "appointmentId": 1,
                  "appointmentStatusValue": 1,
                  "merchantId": 472,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1479755189,
                  "updated_at": 1479755189,
                  "appointmentStatusId": 1
                }
              }
  delete:
    description: To delete a appointment status.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - id is unique identifier for each appointment status.</p>
    body:
      application/json:
        example: |
          {
            "id": 5
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/appointments/note:
  description: Appointment note endpoit provide you create/edit/delete the functionality you need to work with appointment note apis.
  post:
    description: To create a new appointment note.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentId</i></b> - appointmentId is unique identifier for each appointment.</p>
            <p><b><i>body</i></b> - body of appointment note</p>
    body:
      application/json:
        example: |
          {
              "appointmentId": 3,
              "body": "Hey you see this, right?"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "appointmentId": 3,
                      "body": "Hey you see this, right?",
                      "created_by": 2734,
                      "updated_by": 2734,
                      "created_at": "2017-04-10 01:22:42",
                      "updated_at": "2017-04-10 01:22:42",
                      "id": 5,
                      "status": 1
                  }
              }
  put:
    description: To edit an appointment status.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - id is a unique id for each appointment note.</p></p>
            <p><b><i>body</i></b> - body of appointment note</p>
    body:
      application/json:
        example: |
          {
              "id": 5,
              "body": "Hey you see this, right?"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "appointmentId": 3,
                      "body": "Hey you see this, right?",
                      "created_by": 2734,
                      "updated_by": 2734,
                      "created_at": "2017-04-10 01:22:42",
                      "updated_at": "2017-04-10 01:22:42",
                      "id": 5,
                      "status": 1
                  }
              }
  delete:
    description: To delete an appointment note.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - id is unique identifier for each appointment note.</p>
    body:
      application/json:
        example: |
          {
            "id": 5
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/appointments/reason:
  description: endpoints to work with appointment reasons
  get:
    description: To fetch a list of reason. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible departments will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - employee id fetch specific employee information. <u>Optional</u></p>
            <p><b><i>ids</i></b> - an array of employee id fetch a list of employees information. <u>Optional</u></p>
            <p><b><i>type</i></b> - an array of reason type value [0], [1], [0,1] 0 is for reschedule and 1 is for lost. 
            <br />TYPE_RESCHEDULE = 0
            <br />TYPE_LOST = 1
            <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {            
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "Reasons": [
                          {
                              "id": 1,
                              "description": "Transaction rates are too high.",
                              "type": 1,
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-12 00:33:59",
                              "updated_at": "2017-04-12 00:33:59"
                          },
                          {
                              "id": 2,
                              "description": "Customer doesn\u2019t want to pay setup fee.",
                              "type": 1,
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-12 00:33:59",
                              "updated_at": "2017-04-12 00:33:59"
                          },
                          {
                              "id": 3,
                              "description": "Customer wants devices free of cost.",
                              "type": 1,
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-12 00:33:59",
                              "updated_at": "2017-04-12 00:33:59"
                          },
                          {
                              "id": 4,
                              "description": "Customer doesn\u2019t want to pay monthly rent.",
                              "type": 1,
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-12 00:33:59",
                              "updated_at": "2017-04-12 00:33:59"
                          },
                          {
                              "id": 5,
                              "description": "Customer doesn\u2019t have current A\/C.",
                              "type": 1,
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-12 00:33:59",
                              "updated_at": "2017-04-12 00:33:59"
                          },
                          {
                              "id": 6,
                              "description": "Customer wants ECS facility.",
                              "type": 1,
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-12 00:33:59",
                              "updated_at": "2017-04-12 00:33:59"
                          },
                          {
                              "id": 7,
                              "description": "Customer wants to pay quarterly.",
                              "type": 1,
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-12 00:33:59",
                              "updated_at": "2017-04-12 00:33:59"
                          },
                          {
                              "id": 8,
                              "description": "Conflicts in time.",
                              "type": 0,
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-12 00:33:59",
                              "updated_at": "2017-04-12 00:33:59"
                          },
                          {
                              "id": 9,
                              "description": "Merchant is not available.",
                              "type": 0,
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-12 00:33:59",
                              "updated_at": "2017-04-12 00:33:59"
                          },
                          {
                              "id": 10,
                              "description": "Merchant is busy.",
                              "type": 0,
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-12 00:33:59",
                              "updated_at": "2017-04-12 00:33:59"
                          },
                          {
                              "id": 11,
                              "description": "Sales representative struck in another meeting.",
                              "type": 0,
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-12 00:33:59",
                              "updated_at": "2017-04-12 00:33:59"
                          }
                      ],
                      "total": "11"
                  }
              }
  post:
    description: To create a reason.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>type</i></b> - type of reason.
            <br />TYPE_RESCHEDULE = 0
            <br />TYPE_LOST = 1
            </p>
            <p><b><i>description</i></b> - a short explanation about the reason.</p>
    body:
      application/json:
        example: |
          {
              "type": 1,
              "description": "Sales representative struck in another meeting."
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "id": 11,
                      "description": "Sales representative struck in another meeting.",
                      "type": 0,
                      "status": 1,
                      "created_by": 0,
                      "updated_by": 0,
                      "created_at": "2017-04-12 00:33:59",
                      "updated_at": "2017-04-12 00:33:59"
                  }
              }
  put:
    description: To edit an reason.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - unique identifier for the reason.</p>
            <p><b><i>type</i></b> - type of reason.
            <br />TYPE_RESCHEDULE = 0
            <br />TYPE_LOST = 1
            </p>
            <p><b><i>description</i></b> - a short explanation about the reason.</p>
    body:
      application/json:
        example: |
          {
            "id" : 11,
            "type": 1,
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "id": 11,
                      "description": "Sales representative struck in another meeting.",
                      "type": 0,
                      "status": 1,
                      "created_by": 0,
                      "updated_by": 0,
                      "created_at": "2017-04-12 00:33:59",
                      "updated_at": "2017-04-12 00:33:59"
                  }
              }
  delete:
    description: To delete a location.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - employee id is unique identifier for each appointment.</p>
    body:
      application/json:
        example: |
          {
            "id": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/expenses:
  description: endpoints to work with expenses
  get:
    description: To fetch a list of expenses. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible departments will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - employee id fetch specific expense information. <u>Optional</u></p>
            <p><b><i>ids</i></b> - an array of employee id fetch a list of expenses information. <u>Optional</u></p>
            <p><b><i>employeeId</i></b> - employee id fetch specific expenses information. <u>Optional</u></p>
            <p><b><i>employeeIds</i></b> - an array of employee id fetch a list of expenses information. <u>Optional</u></p>
            <p><b><i>officeId</i></b> - office id fetch specific expenses information. <u>Optional</u></p>
            <p><b><i>officeIds</i></b> - an array of office id fetch a list of expenses information. <u>Optional</u></p>
            <p><b><i>appointmentId</i></b> - appointment id fetch specific expenses information. <u>Optional</u></p>
            <p><b><i>appointmentIds</i></b> - an array of appointment id fetch a list of expenses information. <u>Optional</u></p>
            <p><b><i>type</i></b> - an array with possible type of expenses like [0] or [1] or [0, 1]
            <br />TYPE_CAR = 0
            <br />TYPE_PUBLIC_TRANSPORT = 1
            <u>Optional</u></p>
            <p><b><i>receiptType</i></b> - an array with possible type of receipt. this value will change based on the type value like [10] or [11] or [20] or [10, 20]. 
            <br />TYPE_RECEIPT_CAR_FUEL = 10
            <br />TYPE_RECEIPT_CAR_JOURNEY_TICKET = 11
            <br />TYPE_RECEIPT_PUBLIC_TRANSPORT_JOURNEY_TICKET = 20
            <u>Optional</u></p>
            <p><b><i>date</i></b> - this parameter is an array with two index 'from' and 'to' each of them should be in format of 'YYYY-MM-DD HH:MM:SS' and is look for all epenses happened between from and to date.<u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {            
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
              }
  post:
    description: To create an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>employeeId</i></b> - unique identifier for the employee.</p>
            <p><b><i>appointmentId</i></b> - id of the appointment that this expense expend for it. <u>Optional</u></p>
            <p><b><i>officeId</i></b> - office id of employee who expend this expense. <u>Optional</u></p>
            <p><b><i>employeeId</i></b> - longitude of the company geo location <u>Optional</u></p>
            <p><b><i>distance</i></b> - longitude of the company geo location <u>Optional</u></p>
            <p><b><i>type</i></b> - longitude of the company geo location <u>Optional</u></p>
            <p><b><i>receiptType</i></b> - longitude of the company geo location <u>Optional</u></p>
            <p><b><i>file</i></b> - longitude of the company geo location <u>Optional</u></p>
            <p><b><i>price</i></b> - longitude of the company geo location <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
              "employeeId": 1,
              "lat": 19.072664,
              "lng": 28.558183
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "employeeId": 1,
                      "lat": "19.072664",
                      "lng": "28.558183",
                      "created_by": 2734,
                      "updated_by": 2734,
                      "created_at": "2017-04-10 04:06:46",
                      "updated_at": "2017-04-10 04:06:46",
                      "id": 1,
                      "status": 1
                  }
              }
  put:
    description: To edit an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>employeeId</i></b> - unique identifier for the employee.</p>
            <p><b><i>lat</i></b> - latitude of the company geo location <u>Optional</u></p>
            <p><b><i>lng</i></b> - longitude of the company geo location <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "id" : 1,
            "lat": 19.072664,
            "lng": 28.558183
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "employeeId": 1,
                      "lat": "19.072664",
                      "lng": "28.558183",
                      "created_by": 2734,
                      "updated_by": 2734,
                      "created_at": "2017-04-10 04:06:46",
                      "updated_at": "2017-04-10 04:06:46",
                      "id": 1,
                      "status": 1
                  }
              }
  delete:
    description: To delete a location.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - employee id is unique identifier for each appointment.</p>
    body:
      application/json:
        example: |
          {
            "id": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/locations:
  description: endpoints to work with locations
  get:
    description: To fetch a list of locations. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible departments will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - employee id fetch specific employee information. <u>Optional</u></p>
            <p><b><i>ids</i></b> - an array of employee id fetch a list of employees information. <u>Optional</u></p>
            <p><b><i>employeeId</i></b> - employee id fetch specific location information. <u>Optional</u></p>
            <p><b><i>employeeIds</i></b> - an array of employee id fetch a list of location information. <u>Optional</u></p>
            <p><b><i>date</i></b> - this parameter is an array with two index 'from' and 'to' each of them should be in format of 'YYYY-MM-DD HH:MM:SS' and is look for all appointment have been made for between from and to date.<u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>topRight</i></b> - an object with lat/lng values indicate top right of search rectangle. <u>Optional</u></p>
            <p><b><i>bottomLeft</i></b> - an object with lat/lng values indicate bottom left of search rectangle. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "topRight": {
              "lat": 45,
              "lng": 30
            },
            "bottomLeft": {
              "lat": 19,
              "lng": 28
            }           
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
              }
  post:
    description: To create an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>employeeId</i></b> - unique identifier for the employee.</p>
            <p><b><i>lat</i></b> - latitude of the company geo location.</p>
            <p><b><i>lng</i></b> - longitude of the company geo location.</p>
            <p><b><i>distance</i></b> - distance from previous appointment in Km.</p>
    body:
      application/json:
        example: |
          {
              "appointmentId": 1,
              "officeId": 1,
              "employeeId": 1,
              "lat": 19.072664,
              "lng": 28.558183,
              "distance": 14.32
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "appointmentId": 1,
                      "officeId": 1,
                      "employeeId": 1,
                      "lat": "19.072664",
                      "lng": "28.558183",
                      "distance": "14.32",
                      "created_by": 2734,
                      "updated_by": 2734,
                      "created_at": "2017-04-10 04:06:46",
                      "updated_at": "2017-04-10 04:06:46",
                      "id": 1,
                      "status": 1
                  }
              }
  put:
    description: To edit an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>employeeId</i></b> - unique identifier for the employee.</p>
            <p><b><i>lat</i></b> - latitude of the company geo location <u>Optional</u></p>
            <p><b><i>lng</i></b> - longitude of the company geo location <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "id" : 1,
            "lat": 19.072664,
            "lng": 28.558183
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "appointmentId": 1,
                      "officeId": 1,
                      "employeeId": 1,
                      "lat": "19.072664",
                      "lng": "28.558183",
                      "distance": "14.32",
                      "created_by": 2734,
                      "updated_by": 2734,
                      "created_at": "2017-04-10 04:06:46",
                      "updated_at": "2017-04-10 04:06:46",
                      "id": 1,
                      "status": 1
                  }
              }
  delete:
    description: To delete a location.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - employee id is unique identifier for each appointment.</p>
    body:
      application/json:
        example: |
          {
            "id": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/plans:
  description: endpoints to work with plans
  get:
    description: To fetch a list of expenses. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible departments will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - id fetch specific plan information. <u>Optional</u></p>
            <p><b><i>ids</i></b> - an array of plan id fetch a list of plan information. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {            
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                    "Plans": [
                        {
                            "id": 4,
                            "name": "Suvidha",
                            "price": "299.00",
                            "setupFee": "0.00",
                            "duration": 1,
                            "status": 1,
                            "created_by": 0,
                            "updated_by": 0,
                            "created_at": "2017-04-18 23:21:34",
                            "updated_at": "2017-04-18 23:21:34"
                        },
                        {
                            "id": 5,
                            "name": "Unnati",
                            "price": "499.00",
                            "setupFee": "0.00",
                            "duration": 1,
                            "status": 1,
                            "created_by": 0,
                            "updated_by": 0,
                            "created_at": "2017-04-18 23:21:34",
                            "updated_at": "2017-04-18 23:21:34"
                        },
                        {
                            "id": 6,
                            "name": "Munafa",
                            "price": "999.00",
                            "setupFee": "0.00",
                            "duration": 1,
                            "status": 1,
                            "created_by": 0,
                            "updated_by": 0,
                            "created_at": "2017-04-18 23:21:34",
                            "updated_at": "2017-04-18 23:21:34"
                        }
                    ],
                    "total": "3"
                }
              }
  post:
    description: To create an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>name</i></b> - name of plan.</p>
            <p><b><i>price</i></b> - price of the plan.</p>
            <p><b><i>setupFee</i></b> - setup fee of the plan.</p>
            <p><b><i>duration</i></b> - price duration. 
            <br />DURATION_MONTHLY = 1
            <br />DURATION_YEARLY = 2
            <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
              "name": "Suvidha",
              "price": "299.00",
              "setupFee": "0.00",
              "duration": 1,
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "id": 4,
                      "name": "Suvidha",
                      "price": "299.00",
                      "setupFee": "0.00",
                      "duration": 1,
                      "status": 1,
                      "created_by": 0,
                      "updated_by": 0,
                      "created_at": "2017-04-18 23:21:34",
                      "updated_at": "2017-04-18 23:21:34"
                  }
              }
  put:
    description: To edit an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - unique identifier for the plan.</p>
            <p><b><i>name</i></b> - name of plan. <u>Optional</u></p>
            <p><b><i>price</i></b> - price of the plan. <u>Optional</u></p>
            <p><b><i>setupFee</i></b> - setup fee of the plan. <u>Optional</u></p>
            <p><b><i>duration</i></b> - price duration. 
            <br />DURATION_MONTHLY = 1
            <br />DURATION_YEARLY = 2
            <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
              "id": 4,
              "name": "Suvidha",
              "price": "299.00",
              "setupFee": "0.00",
              "duration": 1,
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "id": 4,
                      "name": "Suvidha",
                      "price": "299.00",
                      "setupFee": "0.00",
                      "duration": 1,
                      "status": 1,
                      "created_by": 0,
                      "updated_by": 0,
                      "created_at": "2017-04-18 23:21:34",
                      "updated_at": "2017-04-18 23:21:34"
                  }
              }
  delete:
    description: To delete a plan.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - id is unique identifier for each plan.</p>
    body:
      application/json:
        example: |
          {
            "id": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/products:
  description: endpoints to work with products
  get:
    description: To fetch a list of expenses. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible departments will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - product id fetch specific product information. <u>Optional</u></p>
            <p><b><i>ids</i></b> - an array of product id fetch a list of products information. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {            
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "Products": [
                          {
                              "id": 6,
                              "name": "2 Inch Printer",
                              "description": "Connect your point of sale system to the wireless printer, and print beautiful custom receipts. It`s Small in size and lightweight device. Its about 220 to 330 gms and has a battery life of 500 cycles.",
                              "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/epaisa_printer1.png",
                              "price": "6500.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                          },
                          {
                              "id": 7,
                              "name": "3 Inch Printer",
                              "description": "Connect your point of sale system to the wireless printer, and print beautiful custom receipts, having paper width - 80mm and printing width \u2013 72mm. The Bluetooth printers are lightweight weighing about 220 to 330 gms and has a long lasting li-ion battery.",
                              "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/epaisa_printer2.png",
                              "price": "9200.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                          },
                          {
                              "id": 8,
                              "name": "Scanner",
                              "description": "Connect ePaisa POS to a wireless barcode scanner. Barcodes can be scanned and printed using your own or our integrated barcode scanner. Providing powerful scanning performance, our barcode scanner weighs approximately 250 gms, with a long scan distance of 400 m and a scan rate of 200 times\/sec",
                              "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/hardware_barcode_reader.png",
                              "price": "3000.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                          },
                          {
                              "id": 9,
                              "name": "Cash drawer",
                              "description": "The cash drawer has separate compartments for coins and bills of different denominations. It has a Plug and Play interface integrated with our POS allowing the user more control over its operation",
                              "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/hardware_cashdrawer.png",
                              "price": "6000.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                          },
                          {
                              "id": 10,
                              "name": "Extra Devices",
                              "description": null,
                              "image": null,
                              "price": "4950.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                          }
                      ],
                      "total": "5"
                  }
              }
  post:
    description: To create an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>name</i></b> - name of product.</p>
            <p><b><i>description</i></b> - a description about product. <u>Optional</u></p>
            <p><b><i>file</i></b> - picture of product. <u>Optional</u></p>
            <p><b><i>price</i></b> - price of product.</p>
    body:
      application/json:
        example: |
          {
              "name": "Scanner",
              "description": "Connect ePaisa POS to a wireless barcode scanner. Barcodes can be scanned and printed using your own or our integrated barcode scanner. Providing powerful scanning performance, our barcode scanner weighs approximately 250 gms, with a long scan distance of 400 m and a scan rate of 200 times\/sec",
              "price": "3000.00",
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "id": 8,
                      "name": "Scanner",
                      "description": "Connect ePaisa POS to a wireless barcode scanner. Barcodes can be scanned and printed using your own or our integrated barcode scanner. Providing powerful scanning performance, our barcode scanner weighs approximately 250 gms, with a long scan distance of 400 m and a scan rate of 200 times\/sec",
                      "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/hardware_barcode_reader.png",
                      "price": "3000.00",
                      "status": 1,
                      "created_by": 0,
                      "updated_by": 0,
                      "created_at": "2017-04-18 23:21:34",
                      "updated_at": "2017-04-18 23:21:34"
                  },
              }
  put:
    description: To edit an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - unique identifier for the product.</p>
            <p><b><i>name</i></b> - name of product. <u>Optional</u></p>
            <p><b><i>description</i></b> - a description about product. <u>Optional</u></p>
            <p><b><i>file</i></b> - picture of product. <u>Optional</u></p>
            <p><b><i>price</i></b> - price of product. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {            
              "id": 8,
              "name": "Scanner",
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "id": 8,
                      "name": "Scanner",
                      "description": "Connect ePaisa POS to a wireless barcode scanner. Barcodes can be scanned and printed using your own or our integrated barcode scanner. Providing powerful scanning performance, our barcode scanner weighs approximately 250 gms, with a long scan distance of 400 m and a scan rate of 200 times\/sec",
                      "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/hardware_barcode_reader.png",
                      "price": "3000.00",
                      "status": 1,
                      "created_by": 0,
                      "updated_by": 0,
                      "created_at": "2017-04-18 23:21:34",
                      "updated_at": "2017-04-18 23:21:34"
                  }
              }
  delete:
    description: To delete a product.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - product id is unique identifier for each product.</p>
    body:
      application/json:
        example: |
          {
            "id": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/organizations:
  description: endpoints to work with organizations
  get:
    description: To fetch a list of organizations. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible departments will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - id fetch specific organization information. <u>Optional</u></p>
            <p><b><i>ids</i></b> - an array of employee id fetch a list of organizations information. <u>Optional</u></p>
            <p><b><i>countryId</i></b> - id fetch specific organization information. <u>Optional</u></p>
            <p><b><i>countryIds</i></b> - an array of employee id fetch a list of organizations information. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {            
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "Products": [
                          {
                              "id": 6,
                              "name": "2 Inch Printer",
                              "description": "Connect your point of sale system to the wireless printer, and print beautiful custom receipts. It`s Small in size and lightweight device. Its about 220 to 330 gms and has a battery life of 500 cycles.",
                              "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/epaisa_printer1.png",
                              "price": "6500.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                          },
                          {
                              "id": 7,
                              "name": "3 Inch Printer",
                              "description": "Connect your point of sale system to the wireless printer, and print beautiful custom receipts, having paper width - 80mm and printing width \u2013 72mm. The Bluetooth printers are lightweight weighing about 220 to 330 gms and has a long lasting li-ion battery.",
                              "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/epaisa_printer2.png",
                              "price": "9200.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                          },
                          {
                              "id": 8,
                              "name": "Scanner",
                              "description": "Connect ePaisa POS to a wireless barcode scanner. Barcodes can be scanned and printed using your own or our integrated barcode scanner. Providing powerful scanning performance, our barcode scanner weighs approximately 250 gms, with a long scan distance of 400 m and a scan rate of 200 times\/sec",
                              "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/hardware_barcode_reader.png",
                              "price": "3000.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                          },
                          {
                              "id": 9,
                              "name": "Cash drawer",
                              "description": "The cash drawer has separate compartments for coins and bills of different denominations. It has a Plug and Play interface integrated with our POS allowing the user more control over its operation",
                              "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/hardware_cashdrawer.png",
                              "price": "6000.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                          },
                          {
                              "id": 10,
                              "name": "Extra Devices",
                              "description": null,
                              "image": null,
                              "price": "4950.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                          }
                      ],
                      "total": "5"
                  }
              }
  post:
    description: To create an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>name</i></b> - name of product.</p>
            <p><b><i>description</i></b> - a description about product. <u>Optional</u></p>
            <p><b><i>file</i></b> - picture of product. <u>Optional</u></p>
            <p><b><i>price</i></b> - price of product.</p>
    body:
      application/json:
        example: |
          {
              "name": "Scanner",
              "description": "Connect ePaisa POS to a wireless barcode scanner. Barcodes can be scanned and printed using your own or our integrated barcode scanner. Providing powerful scanning performance, our barcode scanner weighs approximately 250 gms, with a long scan distance of 400 m and a scan rate of 200 times\/sec",
              "price": "3000.00",
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "id": 8,
                      "name": "Scanner",
                      "description": "Connect ePaisa POS to a wireless barcode scanner. Barcodes can be scanned and printed using your own or our integrated barcode scanner. Providing powerful scanning performance, our barcode scanner weighs approximately 250 gms, with a long scan distance of 400 m and a scan rate of 200 times\/sec",
                      "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/hardware_barcode_reader.png",
                      "price": "3000.00",
                      "status": 1,
                      "created_by": 0,
                      "updated_by": 0,
                      "created_at": "2017-04-18 23:21:34",
                      "updated_at": "2017-04-18 23:21:34"
                  },
              }
  put:
    description: To edit an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - unique identifier for the product.</p>
            <p><b><i>name</i></b> - name of product. <u>Optional</u></p>
            <p><b><i>description</i></b> - a description about product. <u>Optional</u></p>
            <p><b><i>file</i></b> - picture of product. <u>Optional</u></p>
            <p><b><i>price</i></b> - price of product. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {            
              "id": 8,
              "name": "Scanner",
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "id": 8,
                      "name": "Scanner",
                      "description": "Connect ePaisa POS to a wireless barcode scanner. Barcodes can be scanned and printed using your own or our integrated barcode scanner. Providing powerful scanning performance, our barcode scanner weighs approximately 250 gms, with a long scan distance of 400 m and a scan rate of 200 times\/sec",
                      "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/hardware_barcode_reader.png",
                      "price": "3000.00",
                      "status": 1,
                      "created_by": 0,
                      "updated_by": 0,
                      "created_at": "2017-04-18 23:21:34",
                      "updated_at": "2017-04-18 23:21:34"
                  }
              }
  delete:
    description: To delete a product.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - product id is unique identifier for each product.</p>
    body:
      application/json:
        example: |
          {
            "id": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/contacts:
  description: endpoints to work with contacts
  get:
    description: To fetch a list of expenses. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible departments will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - employee id fetch specific expense information. <u>Optional</u></p>
            <p><b><i>ids</i></b> - an array of employee id fetch a list of expenses information. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {            
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "Products": [
                          {
                              "id": 6,
                              "name": "2 Inch Printer",
                              "description": "Connect your point of sale system to the wireless printer, and print beautiful custom receipts. It`s Small in size and lightweight device. Its about 220 to 330 gms and has a battery life of 500 cycles.",
                              "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/epaisa_printer1.png",
                              "price": "6500.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                          },
                          {
                              "id": 7,
                              "name": "3 Inch Printer",
                              "description": "Connect your point of sale system to the wireless printer, and print beautiful custom receipts, having paper width - 80mm and printing width \u2013 72mm. The Bluetooth printers are lightweight weighing about 220 to 330 gms and has a long lasting li-ion battery.",
                              "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/epaisa_printer2.png",
                              "price": "9200.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                          },
                          {
                              "id": 8,
                              "name": "Scanner",
                              "description": "Connect ePaisa POS to a wireless barcode scanner. Barcodes can be scanned and printed using your own or our integrated barcode scanner. Providing powerful scanning performance, our barcode scanner weighs approximately 250 gms, with a long scan distance of 400 m and a scan rate of 200 times\/sec",
                              "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/hardware_barcode_reader.png",
                              "price": "3000.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                          },
                          {
                              "id": 9,
                              "name": "Cash drawer",
                              "description": "The cash drawer has separate compartments for coins and bills of different denominations. It has a Plug and Play interface integrated with our POS allowing the user more control over its operation",
                              "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/hardware_cashdrawer.png",
                              "price": "6000.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                          },
                          {
                              "id": 10,
                              "name": "Extra Devices",
                              "description": null,
                              "image": null,
                              "price": "4950.00",
                              "status": 1,
                              "created_by": 0,
                              "updated_by": 0,
                              "created_at": "2017-04-18 23:21:34",
                              "updated_at": "2017-04-18 23:21:34"
                          }
                      ],
                      "total": "5"
                  }
              }
  post:
    description: To create an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>name</i></b> - name of product.</p>
            <p><b><i>description</i></b> - a description about product. <u>Optional</u></p>
            <p><b><i>file</i></b> - picture of product. <u>Optional</u></p>
            <p><b><i>price</i></b> - price of product.</p>
    body:
      application/json:
        example: |
          {
              "name": "Scanner",
              "description": "Connect ePaisa POS to a wireless barcode scanner. Barcodes can be scanned and printed using your own or our integrated barcode scanner. Providing powerful scanning performance, our barcode scanner weighs approximately 250 gms, with a long scan distance of 400 m and a scan rate of 200 times\/sec",
              "price": "3000.00",
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "id": 8,
                      "name": "Scanner",
                      "description": "Connect ePaisa POS to a wireless barcode scanner. Barcodes can be scanned and printed using your own or our integrated barcode scanner. Providing powerful scanning performance, our barcode scanner weighs approximately 250 gms, with a long scan distance of 400 m and a scan rate of 200 times\/sec",
                      "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/hardware_barcode_reader.png",
                      "price": "3000.00",
                      "status": 1,
                      "created_by": 0,
                      "updated_by": 0,
                      "created_at": "2017-04-18 23:21:34",
                      "updated_at": "2017-04-18 23:21:34"
                  },
              }
  put:
    description: To edit an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - unique identifier for the product.</p>
            <p><b><i>name</i></b> - name of product. <u>Optional</u></p>
            <p><b><i>description</i></b> - a description about product. <u>Optional</u></p>
            <p><b><i>file</i></b> - picture of product. <u>Optional</u></p>
            <p><b><i>price</i></b> - price of product. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {            
              "id": 8,
              "name": "Scanner",
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "id": 8,
                      "name": "Scanner",
                      "description": "Connect ePaisa POS to a wireless barcode scanner. Barcodes can be scanned and printed using your own or our integrated barcode scanner. Providing powerful scanning performance, our barcode scanner weighs approximately 250 gms, with a long scan distance of 400 m and a scan rate of 200 times\/sec",
                      "image": "https:\/\/ui.epaisa.com\/www\/app\/img\/hardware_barcode_reader.png",
                      "price": "3000.00",
                      "status": 1,
                      "created_by": 0,
                      "updated_by": 0,
                      "created_at": "2017-04-18 23:21:34",
                      "updated_at": "2017-04-18 23:21:34"
                  }
              }
  delete:
    description: To delete a product.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - product id is unique identifier for each product.</p>
    body:
      application/json:
        example: |
          {
            "id": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/user/role:
  description: to list custom roles created by the merchant
  get:
    description: to list custom roles created by the merchant
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.  
  post:
    description: to create a new custom role to be used by the merchant. This custom role will only be visible to merchant will not be public.
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user. 
      param2:
        required: true
        displayName: RoleName
        description: Name for the custom role
  put:
    description: to update a custom role
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user. 
      param2:
        required: true
        displayName: RoleId
        description: Id of the custom role
      param3:
        required: true
        displayName: RoleName
        description: New Name for the custom role
  delete:
    description: to soft delete a given custom role
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user. 
      param2:
        required: true
        displayName: RoleId
        description: Id of the custom role
/activities:
  description: activities endpoit provide you view/delete the functionality you need to work with activities.
  get:
    description: To fetch a list of activities. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible departments will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - employee id fetch specific employee information. <u>Optional</u></p>
            <p><b><i>ids</i></b> - an array of employee id fetch a list of employees information. <u>Optional</u></p>
            <p><b><i>employeeId</i></b> - employee id fetch specific location information. <u>Optional</u></p>
            <p><b><i>employeeIds</i></b> - an array of employee id fetch a list of location information. <u>Optional</u></p>
            <p><b><i>date</i></b> - this parameter is an array with two index 'from' and 'to' each of them should be in format of 'YYYY-MM-DD HH:MM:SS' and is look for all appointment have been made for between from and to date.<u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {        
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
              }
  delete:
    description: To delete an activity.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - id is unique identifier for each activity.</p>
    body:
      application/json:
        example: |
          {
            "id": 5
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
