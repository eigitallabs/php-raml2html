#%RAML 0.8
title: ePaisa Salon App
version: 2.0
baseUri: http://nine.epaisa.com
securitySchemes:
  - customSecurityScheme:
      type:
        x-custome
      description: This <i>Token</i> is generated by login call and is working for one houre.
/salon/department:
  description: Departments endpoit provide you whole the functionality you need to work with department apis.
  get:
    description: To fetch a list of departments. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible departments will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>departmentId</i></b> - departmentId fetch specific department information. <u>Optional</u></p>
            <p><b><i>departmentsId</i></b> - departmentsId fetch a list of department information. <u>Optional</u></p>
            <p><b><i>departmentName</i></b> - departmentName fetch all department their name started with this paramter's value information. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "departmentsId": [1,2,3,4,5,6]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Departments": [
                    {
                      "departmentId": 1,
                      "departmentName": "Accident and emergency (A&E)",
                      "departmentDescription": "Also called Casualty Department, where you're likely to be taken if you have arrived in an ambulance or emergency situation.",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481013677,
                      "updated_at": 1481013677,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    },
                    {
                      "departmentId": 2,
                      "departmentName": "Physiotherapy",
                      "departmentDescription": "Physiotherapists work through physical therapies such as exercise, massage, and manipulation of bones, joints and muscle tissues.",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481014148,
                      "updated_at": 1481014148,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    },
                    {
                      "departmentId": 3,
                      "departmentName": "Microbiology",
                      "departmentDescription": "The microbiology department provides an extensive clinical service, including mycology, parasitology, mycobacteriology, a high security pathology unit, and a healthcare associated infection investigation unit, as well as routine bacteriology and an expanding molecular diagnostic repertoire.",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481014176,
                      "updated_at": 1481014176,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    },
                    {
                      "departmentId": 4,
                      "departmentName": "Neurology",
                      "departmentDescription": "A medical specialty dealing with disorders of the nervous system. Specifically, it deals with the diagnosis and treatment of all categories of disease involving the central, peripheral, and autonomic nervous systems, including their coverings, blood vessels, and all effector tissue, such as muscle. Includes the brain, spinal cord, and spinal cord injuries (SCI).",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481014176,
                      "updated_at": 1481014176,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    },
                    {
                      "departmentId": 5,
                      "departmentName": "Obstetrics/Gynecology",
                      "departmentDescription": "Specialist nurses, midwives and imaging technicians provide maternity services such as: antenatal and postnatal care, maternal and foetal surveillance, and prenatal diagnosis.",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481014176,
                      "updated_at": 1481014176,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    },
                    {
                      "departmentId": 6,
                      "departmentName": "Oncology",
                      "departmentDescription": "A branch of medicine that deals with cancer and tumors. A medical professional who practices oncology is an oncologist. The Oncology department provides treatments, including radiotherapy and chemotherapy, for cancerous tumors and blood disorders.",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481014801,
                      "updated_at": 1481014801,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    }
                  ],
                  "total": "6"
                }
              }
  post:
    description: To create a new department.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>departmentName</i></b> - departmentName is a title for each department like Emeregency.</p>
            <p><b><i>departmentDescription</i></b> - a short description <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "departmentName": "Accident and emergency (A&E)",
            "departmentDescription": "Also called Casualty Department, where you're likely to be taken if you have arrived in an ambulance or emergency situation."
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "departmentName": "Accident and emergency (A&E)",
                  "departmentDescription": "Also called Casualty Department, where you're likely to be taken if you have arrived in an ambulance or emergency situation.",
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1481013677,
                  "updated_at": 1481013677,
                  "departmentId": 1
                }
              }
  put:
    description: To edit a department.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>departmentId</i></b> - roomId is unique identifier for each department.</p>
            <p><b><i>departmentName</i></b> - departmentName is a title for each department like Emeregency.</p>
            <p><b><i>departmentDescription</i></b> - a short description <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "departmentId": 1,
            "departmentName": "Accident and emergency (A&E)",
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "departmentName": "Accident and emergency (A&E)",
                  "departmentDescription": "Also called Casualty Department, where you're likely to be taken if you have arrived in an ambulance or emergency situation.",
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1481013677,
                  "updated_at": 1481013677,
                  "departmentId": 1
                }
              }
  delete:
    description: To delete a department.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>departmentId</i></b> - roomId is unique identifier for each department.</p>
    body:
      application/json:
        example: |
          {
            "departmentId": 1
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }

/salon/room:
  description: Rooms endpoit provide you whole the functionality you need to work with room apis.
  get:
    description: To fetch a list of rooms. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible rooms will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>roomId</i></b> - roomId fetch specific room information. <u>Optional</u></p>
            <p><b><i>roomsId</i></b> - fetch a list of specific rooms information. <u>Optional</u></p>
            <p><b><i>roomName</i></b> - roomName fetch all rooms their name started with this paramter's value information. <u>Optional</u></p>
            <p><b><i>isForBarber</i></b> - fetch only rooms for barbers. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: '{"roomsId": [1,3]}'
    responses:
        200:
          body:
            application/json:
              example: |
                {
                  "success": 1,
                  "response": {
                    "Rooms": [
                      {
                        "roomId": 1,
                        "roomName": "Emergency",
                        "roomNumber": "1",
                        "isForBarber": 1,
                        "status": 1,
                        "created_at": 1479463340,
                        "updated_at": 1479463765,
                        "createdUserId": 459,
                        "updatedUserId": 459,
                        "merchantId": 472
                      },
                      {
                        "roomId": 3,
                        "roomName": "Emergency Heart",
                        "roomNumber": "1",
                        "isForBarber": 0,
                        "status": 1,
                        "created_at": 1479464162,
                        "updated_at": 1479464211,
                        "createdUserId": 459,
                        "updatedUserId": 459,
                        "merchantId": 472
                      }
                    ],
                    "total": "2"
                  }
                }
  post:
    description: To create a new room.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>roomName</i></b> - roomName is a title for each room like Emeregency.</p>
            <p><b><i>roomNumber</i></b> - roomNumber is for the situations we have more than one room for specific purpos for example if you have 3 emergency room you have roomNumber 1, 2 and 3 with the same roomName. <u>Optional</u></p>
            <p><b><i>isForBarber</i></b> - fetch only rooms for barbers. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "roomName": "Emergency",
            "roomNumber": "1",
            "isForBarber": 0,
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "roomName": "Emergency",
                  "roomNumber": "1",
                  "isForBarber": 0,
                  "createdUserId": 459,
                  "updatedUserId": 459,
                  "created_at": 1479463340,
                  "updated_at": 1479463340,
                  "roomId": 1,
                  "merchantId": 472
                }
              }
  put:
    description: To edit a room.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>roomId</i></b> - roomId is unique identifier for each room.</p>
            <p><b><i>roomName</i></b> - roomName is a title for each room like Emeregency.</p> <u>Optional</u></p>
            <p><b><i>roomNumber</i></b> - roomNumber is for the situations we have more than one room for specific purpos for example if you have 3 emergency room you have roomNumber 1, 2 and 3 with the same roomName. <u>Optional</u></p>
            <p><b><i>isForBarber</i></b> - fetch only rooms for barbers. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "roomId": 1,
            "isForBarber": 1,
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "roomId": 1,
                  "roomName": "Emergency",
                  "roomNumber": "1",
                  "isForBarber": 1,
                  "status": 1,
                  "created_at": 1479463340,
                  "updated_at": 1479463765,
                  "createdUserId": 459,
                  "updatedUserId": 459,
                  "merchantId": 472
                }
              }
  delete:
    description: To delete a room.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>roomId</i></b> - roomId is unique identifier for each room.</p>
    body:
      application/json:
        example: |
          {
            "roomId": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }

/salon/client:
  description: Patients endpoit provide you whole the functionality you need to work with client apis.
  get:
    description: To fetch a list of clients. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible products will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>clientId</i></b> - clientId fetch specific client information. <u>Optional</u></p>
            <p><b><i>clientsId</i></b> - to fetch a list of specific client information. <u>Optional</u></p>
            <p><b><i>clientHairColor</i></b> - clientBloodType fetch all clients with specific blood type. <u>Optional</u></p>
            <p><b><i>clientEyeColor</i></b> - clientBloodType fetch all clients with specific blood type. <u>Optional</u></p>
            <p><b><i>clientBirthday</i></b> - fetch all clients with specific birthday. <u>Optional</u></p>
            <p><b><i>clientGender</i></b> - fetch all clients with specific gender 0 is for women and 1 is for men. <u>Optional</u></p>
            <p><b><i>phoneNumber</i></b> - fetch all clients with specified phone number. <u>Optional</u></p>
            <p><b><i>name</i></b> - fetch all clients with specified name or family. <u>Optional</u></p>
            <p><b><i>email</i></b> - fetch all clients with specified email address. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch clients update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "clientId":1
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Clients": [
                    {
                      "clientId": 1,
                      "clientColor": "#ffffff",
                      "clientLabel": "",
                      "customerId": 13,
                      "clientBloodType": "B+",
                      "clientBirthday": "Dec 7th 1988",
                      "clientGender": 0,
                      "status": 1,
                      "created_at": 1479482582,
                      "updated_at": 1479483079,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "merchantId": 472,
                      "storeLocationId": 0,
                      "appointments": [],
                      "information": {
                        "firstName": "FL7lWmd4IrI,",
                        "lastName": "p5xzKzTubP0,",
                        "email": "5xMYFiXp_gDw_xLA7SC9OESmzZK-LstYbDgZ3v4Nzio,",
                        "phoneNumber": "546546",
                        "address1": "ZNmzTfdby84yWShlLCe1Uw,,",
                        "address2": "RBubUB9ddQWixhht5WGdnw,,",
                        "cityId": null,
                        "stateId": null,
                        "countryCode": null,
                        "pincode": null
                      }
                    },
                    {
                      "clientId": 2,
                      "clientColor": "#ffffff",
                      "clientLabel": "",
                      "customerId": 1,
                      "clientBloodType": "AB+",
                      "clientBirthday": "Dec 7th 1989",
                      "clientGender": 1,
                      "status": 1,
                      "created_at": 1479483059,
                      "updated_at": 1479483236,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "merchantId": 472,
                      "storeLocationId": 0,
                      "appointments": [
                        {
                          "appointmentId": 5,
                          "appointmentDate": "23-11-2016",
                          "appointmentStartTime": 1479718800,
                          "appointmentEndTime": 1479722400,
                          "barberId": 2,
                          "clientId": 2,
                          "roomId": 3,
                          "status": 1,
                          "created_at": 1480525261,
                          "updated_at": 1480525261,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472,
                          "storeLocationId": 424
                        },
                        {
                          "appointmentId": 6,
                          "appointmentDate": "25-11-2016",
                          "appointmentStartTime": 1479718800,
                          "appointmentEndTime": 1479722400,
                          "barberId": 5,
                          "clientId": 2,
                          "roomId": 1,
                          "status": 1,
                          "created_at": 1480651969,
                          "updated_at": 1480652438,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472,
                          "storeLocationId": 424
                        },
                        {
                          "appointmentId": 7,
                          "appointmentDate": "26-11-2016",
                          "appointmentStartTime": 1479718800,
                          "appointmentEndTime": 1479722400,
                          "barberId": 2,
                          "clientId": 2,
                          "roomId": 1,
                          "status": 1,
                          "created_at": 1480652147,
                          "updated_at": 1480652147,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472,
                          "storeLocationId": 424
                        },
                        {
                          "appointmentId": 8,
                          "appointmentDate": "26-12-2016",
                          "appointmentStartTime": 1479718800,
                          "appointmentEndTime": 1479722400,
                          "barberId": 2,
                          "clientId": 2,
                          "roomId": 1,
                          "status": 1,
                          "created_at": 1480652198,
                          "updated_at": 1480652198,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472,
                          "storeLocationId": 424
                        },
                        {
                          "appointmentId": 9,
                          "appointmentDate": "28-12-2016",
                          "appointmentStartTime": 1479718800,
                          "appointmentEndTime": 1479722400,
                          "barberId": 2,
                          "clientId": 2,
                          "roomId": 1,
                          "status": 1,
                          "created_at": 1480653214,
                          "updated_at": 1480653214,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472,
                          "storeLocationId": 424
                        }
                      ],
                      "information": {
                        "firstName": "FdyTIo0coNQ,",
                        "lastName": "y7EDW-yWxsw,",
                        "email": "CMzOn1V8HdO8y1DtVjqIrQ,,",
                        "phoneNumber": "A5xPRpHW7rpKYdWhghBjwg,,",
                        "address1": "NapT_JHucsk,",
                        "address2": "YyiODPHGDKg,",
                        "cityId": null,
                        "stateId": null,
                        "countryCode": null,
                        "pincode": null
                      }
                    }
                  ],
                  "total": "2"
                }
              }
  post:
    description: To create a new client.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>customerId</i></b> - customer id for current client.</p>
            <p><b><i>clientBloodType</i></b> - clientBloodType blood type for current client.</p>
            <p><b><i>clientGender</i></b> - Gender for current client 0 for women and 1 for men.</p>
            <p><b><i>clientBirthday</i></b> - birthday date for current client.</p>
    body:
      application/json:
        example: |
          {
            "customerId": 13,
            "clientBloodType": "AB+",
            "clientGender": 1,
            "clientBirthday": "Dec 7th 1989"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "customerId": 13,
                  "clientBloodType": "AB+",
                  "clientGender": 1,
                  "clientBirthday": "Dec 7th 1989",
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1479482582,
                  "updated_at": 1479482582,
                  "clientId": 1
                }
              }
  put:
    description: To edit a client.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>clientId</i></b> - customer id for current client.</p>
            <p><b><i>clientBloodType</i></b> - clientBloodType blood type for current client.</p>
            <p><b><i>clientGender</i></b> - Gender for current client 0 for women and 1 for men.</p>
            <p><b><i>clientBirthday</i></b> - birthday date for current client.</p>
    body:
      application/json:
        example: |
          {
            "clientId": 1,
            "clientBloodType": "B+",
            "clientGender": 0,
            "clientBirthday": "Dec 7th 1988"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "clientId": 1,
                  "customerId": 13,
                  "clientBloodType": "B+",
                  "clientBirthday": "Dec 7th 1988",
                  "clientGender": 0,
                  "status": 1,
                  "created_at": 1479482582,
                  "updated_at": 1479483079,
                  "createdUserId": 459,
                  "updatedUserId": 459,
                  "merchantId": 472
                }
              }
  delete:
    description: To delete a client.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>clientId</i></b> - clientId is unique identifier for each client.</p>
    body:
      application/json:
        example: |
          {
            "clientId": 2
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }

/salon/client/message:
  description: Patients message endpoit provide you whole the functionality you need to work with client message apis.
  post:
    description: To send a message to a client.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>clientId</i></b> - client id you want to send this message to.</p>
            <p><b><i>clients</i></b> - array of client id you want to send this message to all of them.</p>
            <p><b><i>type</i></b> - 'sms' or 'email'.</p>
            <p><b><i>message</i></b> - body of message.</p>
    body:
      application/json:
        example: |
          {
            "clientId": 1,
            "type": "sms",
            "message": "Hello, Tomorrow is your resevation date for initial consultation please come to hospital between 13:00 to 13:30"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/salon/barber:
  description: Barber endpoit provide you whole the functionality you need to work with barber apis.
  get:
    description: To fetch a list of barbers. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible rooms will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - barberId fetch specific barber information. <u>Optional</u></p>
            <p><b><i>barbersId</i></b> - to fetch a list of barbers information. <u>Optional</u></p>
            <p><b><i>barberName</i></b> - Name of barber. <u>Optional</u></p>
            <p><b><i>barberJob</i></b> - Job of barber, Physician or Reception. <u>Optional</u></p>
            <p><b><i>barberTitle</i></b> - Title of barber. "Dr. " <u>Optional</u></p>
            <p><b><i>day</i></b> - avaiable in specific day of week. <u>Optional</u></p>
            <p><b><i>status</i></b> - 1 for active 2 for inactive. <u>Optional</u></p>
            <p><b><i>start</i></b> - avaiable in specific time in a specific day of week. <u>Optional</u></p>
            <p><b><i>end</i></b> - avaiable in specific time in a specific day of week. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "updated_at": 1468062355,
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
                "success": 1,
                "response": {
                  "Barbers": [
                    {
                      "barberId": 1,
                      "barberName": "",
                      "barberLabel": "MS",
                      "email": "someemail@address.com",
                      "roleId": 43,
                      "phoneNumber": 98651321646,
                      "barberJob": "Pedicure",
                      "barberTitle": "Mr",
                      "barberColor": "#ffffff",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 0,
                      "created_at": 1479712067,
                      "updated_at": 1479712699,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "workingHours": [
                        {
                          "barberWorkingHourId": 18,
                          "barberId": 1,
                          "weekDay": "Monday",
                          "startTime": "09:00:00",
                          "endTime": "12:00:00",
                          "status": 1,
                          "merchantId": 472,
                          "created_at": 1479974276,
                          "updated_at": 1479974276,
                          "createdUserId": 459,
                          "updatedUserId": 459
                        },
                        {
                          "barberWorkingHourId": 19,
                          "barberId": 1,
                          "weekDay": "Friday",
                          "startTime": "09:00:00",
                          "endTime": "12:00:00",
                          "status": 1,
                          "merchantId": 472,
                          "created_at": 1479974276,
                          "updated_at": 1479975217,
                          "createdUserId": 459,
                          "updatedUserId": 459
                        },
                        {
                          "barberWorkingHourId": 20,
                          "barberId": 1,
                          "weekDay": "Tuesday",
                          "startTime": "09:00:00",
                          "endTime": "12:00:00",
                          "status": 1,
                          "merchantId": 472,
                          "created_at": 1479974276,
                          "updated_at": 1479974276,
                          "createdUserId": 459,
                          "updatedUserId": 459
                        },
                        {
                          "barberWorkingHourId": 21,
                          "barberId": 1,
                          "weekDay": "Friday",
                          "startTime": "09:00:00",
                          "endTime": "12:00:00",
                          "status": 1,
                          "merchantId": 472,
                          "created_at": 1479974276,
                          "updated_at": 1479974276,
                          "createdUserId": 459,
                          "updatedUserId": 459
                        }
                      ]
                    },
                    {
                      "barberId": 2,
                      "barberName": "",
                      "email": "someemail@address.com",
                      "roleId": 43,
                      "phoneNumber": 98651321646,
                      "barberLabel": "LV",
                      "barberJob": "Hair Styler",
                      "barberTitle": "Mis",
                      "barberColor": "#ffffff",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 0,
                      "created_at": 1479712463,
                      "updated_at": 1479712463,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "workingHours": [
                        {
                          "barberWorkingHourId": 26,
                          "barberId": 2,
                          "weekDay": "Monday",
                          "startTime": "13:00:00",
                          "endTime": "17:00:00",
                          "status": 1,
                          "merchantId": 472,
                          "created_at": 1479974276,
                          "updated_at": 1479974276,
                          "createdUserId": 459,
                          "updatedUserId": 459
                        }
                      ]
                    },
                    {
                      "barberId": 3,
                      "barberName": "Helen Rodrigez",
                      "email": "someemail@address.com",
                      "roleId": 43,
                      "phoneNumber": 98651321646,
                      "barberJob": "Pedicure",
                      "barberTitle": "Miss.",
                      "barberColor": "#ffffff",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 0,
                      "created_at": 1480588544,
                      "updated_at": 1480588544,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "workingHours": []
                    },
                    {
                      "barberId": 4,
                      "email": "someemail@address.com",
                      "roleId": 43,
                      "phoneNumber": 98651321646,
                      "barberName": "Sara Martin",
                      "barberJob": "Hair Styler",
                      "barberTitle": "Ms.",
                      "barberColor": "#ffffff",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 0,
                      "created_at": 1480588587,
                      "updated_at": 1480588587,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "workingHours": []
                    },
                    {
                      "barberId": 5,
                      "email": "someemail@address.com",
                      "roleId": 43,
                      "phoneNumber": 98651321646,
                      "barberName": "Leon Brown",
                      "barberJob": "Hair Styler",
                      "barberTitle": "Mr.",
                      "barberColor": "#ffffff",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 0,
                      "created_at": 1480588690,
                      "updated_at": 1480588690,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "workingHours": []
                    }
                  ],
                  "total": "5"
                }
              }
  post:
    description: To create a new barber.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberName</i></b> - Name of barber.</p>
            <p><b><i>barberLabel</i></b> - Label of barber.</p>
            <p><b><i>barberJob</i></b> - Job of barber, Physician or Reception.</p>
            <p><b><i>departmentId</i></b> - unique identifier for the department.</p>
            <p><b><i>barberTitle</i></b> - Title of barber. "Dr. "</p>
            <p><b><i>barberColor</i></b> - HEX value of barberColor "#ffffff".</p>
            <p><b><i>userId</i></b> - unique identifier for the user.</p>
            <p><b><i>file</i></b> - file base 64 encode.</p>
            <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
            <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
    body:
      application/json:
        example: |
          {
            "userId": 123,
            "barberName": "Helen Rodrigez",
            "barberJob": "Pedicure",   
            "commissionType": "Fix",
            "commissionFee": 1000,         
            "file": "iVBORw0KGgoAAAANSUhEUgAAADQAAABQCAIAAADZf8HwAAAAA3NCSVQICAjb4U\/gAAAAGXRFWHRTb2Z0d2FyZQBnbm9tZS1zY3JlZW5zaG907wO\/PgAAAGtJREFUaIHtzjEBwCAAwDBA2R4M4F\/MHOzow45EQeazz\/irdTvwRa6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+SqF7wIAXd1UjysAAAAAElFTkSuQmCC",
            "barberTitle": "Miss."
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "barberId": 21,
                      "userId": 1441,
                      "departmentId": 113,
                      "barberLabel": "NA",
                      "barberName": "Nandini Anil Bhagat",
                      "barberJob": "DDS",
                      "barberTitle": "Mrs",
                      "barberColor": "#e336cc",   
                      "commissionType": "Fix",
                      "commissionFee": 1000, 
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1486449564,
                      "updated_at": 1486648269,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "barberImage": "v2\/salonapp\/barbers\/459__20170209072107.png"
                  }
              }
  put:
    description: To edit a barber.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - barberId is unique identifier for each barber.</p>
            <p><b><i>barberName</i></b> - Name of barber. <u>Optional</u></p>
            <p><b><i>barberLabel</i></b> - Label of barber.</p>
            <p><b><i>barberJob</i></b> - Job of barber, Physician or Reception. <u>Optional</u></p>
            <p><b><i>barberTitle</i></b> - Title of barber. "Dr. " <u>Optional</u></p>
            <p><b><i>barberColor</i></b> - HEX value of barberColor "#ffffff". <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "barberId":1,
            "barberJob":"Orthopedist"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {            
                  "userId": 123,
                  "barberId": 1,
                  "barberJob": "Orthopedist",
                  "barberTitle": "Dr.",
                  "barberColor": "#ffffff",   
                  "commissionType": "Fix",
                  "commissionFee": 1000, 
                  "status": 1,
                  "created_at": 1479712067,
                  "updated_at": 1479712279,
                  "createdUserId": 459,
                  "updatedUserId": 459,
                  "merchantId": 472
                }
              }
  delete:
    description: To delete a barber.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - barberId is unique identifier for each barber.</p>
    body:
      application/json:
        example: |
          {
            "barberId": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/salon/barber/file:
  description: Service endpoit provide you whole the functionality you need to work with service apis.
  get:
    description: To fetch image content.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberImage</i></b> image to load.</p>
    body:
      application/json:
        example: |
          {
              "barberImage": "v2\/salonapp\/services\/459__20170209061447.png"
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
                "success": 1,
                "response": {
                    "filename": "v2\/salonapp\/services\/459__20170209061447.png",
                    "data": "iVBORw0KGgoAAAANSUhEUgAAADQAAABQCAIAAADZf8HwAAAAA3NCSVQICAjb4U\/gAAAAGXRFWHRTb2Z0d2FyZQBnbm9tZS1zY3JlZW5zaG907wO\/PgAAAGtJREFUaIHtzjEBwCAAwDBA2R4M4F\/MHOzow45EQeazz\/irdTvwRa6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+SqF7wIAXd1UjysAAAAAElFTkSuQmCC"
                }
              }
/salon/barber/working-hours:
  description: Barber Working Hour endpoit provide you whole the functionality you need.
  post:
    description: To create and edit a barber working hour row.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - unique identifier for the doctor.</p>
            <p><b><i>workingHours</i></b> - array of "day", "start" and "end" to create plus "doctorWorkingHourId" for edit only.</p>
    body:
      application/json:
        example: |
          {
            "barberId": 1,
            "workingHours": [
              {
                "day": "Monday",
                "start": "9:00",
                "end": "12:00"
              },
              {
                "day": "Monday",
                "start": "14:00",
                "end": "18:00"
              },
              {
                "day": "Tuesday",
                "start": "9:00",
                "end": "12:00"
              },
              {
                "day": "Friday",
                "start": "9:00",
                "end": "12:00"
              },
              {
                "barberWorkingHourId": 19,
                "day": "Friday",
                "start": "9:00",
                "end": "12:00"
              }
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "barberId": 1598,
                    "merchantId": 472,
                    "weekDay": "Monday",
                    "startTime": "9:00",
                    "endTime": "12:00",
                    "created_at": 1481612359,
                    "updated_at": 1481612359,
                    "barberWorkingHourId": 25708
                  },
                  {
                    "barberId": 1598,
                    "merchantId": 472,
                    "weekDay": "Monday",
                    "startTime": "14:00",
                    "endTime": "18:00",
                    "created_at": 1481612359,
                    "updated_at": 1481612359,
                    "barberWorkingHourId": 25709
                  },
                  {
                    "barberId": 1598,
                    "merchantId": 472,
                    "weekDay": "Tuesday",
                    "startTime": "9:00",
                    "endTime": "12:00",
                    "created_at": 1481612359,
                    "updated_at": 1481612359,
                    "barberWorkingHourId": 25710
                  },
                  {
                    "barberId": 1598,
                    "merchantId": 472,
                    "weekDay": "Friday",
                    "startTime": "9:00",
                    "endTime": "12:00",
                    "created_at": 1481612359,
                    "updated_at": 1481612359,
                    "barberWorkingHourId": 25711
                  },
                  {
                    "barberWorkingHourId": 25707,
                    "doctorId": 1598,
                    "weekDay": "Friday",
                    "startTime": "9:00",
                    "endTime": "12:00",
                    "status": 1,
                    "merchantId": 472,
                    "created_at": 1481612271,
                    "updated_at": 1481612359,
                    "createdUserId": 0,
                    "updatedUserId": 0
                  }
                ]
              }
  delete:
    description: To delete a doctor working hour.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberWorkingHourId</i></b> - unique identifier for the doctor working hour.</p>
    body:
      application/json:
        example: |
          {
            "barberWorkingHourId": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/salon/barber/service:
  description: Barber Service endpoit provide you whole the functionality you need to work with barber service apis.
  post:
    description: To create a new barber service row.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - unique identifier for the barber.</p>
            <p><b><i>serviceId</i></b> - unique identifier for the service.</p>
            <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
            <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
            an array of above information is also acceptable.
    body:
      application/json:
        example: |
          {
            "barberId": 1,
            "serviceId": 2,
            "commissionType": "Fix",
            "commissionFee": 1000
          } | 
            [
              {
                "barberId": 1,
                "serviceId": 2,
                "commissionType": "Fix",
                "commissionFee": 1000
              },
              {
                "barberId": 2,
                "serviceId": 2,
                "commissionType": "Fix",
                "commissionFee": 1000
              }
            ]
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "barberId": 1,
                  "serviceId": 2,
                  "merchantId": 472,
                  "commissionType": "Fix",
                  "commissionFee": 1000,
                  "created_at": 0,
                  "updated_at": 1481035306,
                  "createdUserId": 0,
                  "updatedUserId": 459
                }
              }
  put:
    description: To edit a barber service.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - unique identifier for the barber.</p>
            <p><b><i>serviceId</i></b> - unique identifier for the service.</p>
            <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
            <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
    body:
      application/json:
        example: |
          {
            "barberId": 1,
            "serviceId": 2,
            "commissionType": "Fix",
            "commissionFee": 1000
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "barberId": 1,
                  "serviceId": 2,
                  "merchantId": 472,
                  "commissionType": "Fix",
                  "commissionFee": 1000,
                  "created_at": 0,
                  "updated_at": 1481035306,
                  "createdUserId": 0,
                  "updatedUserId": 459
                }
              }
  delete:
    description: To delete a doctor.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - unique identifier for the barber.</p>
            <p><b><i>serviceId</i></b> - unique identifier for the service.</p>
    body:
      application/json:
        example: |
          {
            "barberId": 3,
            "serviceId": 2
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/salon/barber/notification:
  description: Barber notification endpoit provide the functionality to send notification for a reception.
  post:
    description: To send a notification to a reception.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>receptionId</i></b> - Name of barber.</p>
            <p><b><i>message</i></b> - the messages you want to send to a reception.</p>
    body:
      application/json:
        example: |
          {
            "barberId": 1,
            "message": "Requesting the next client."
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
                "success": 1,
                "response": []
              }

/salon/appointment:
  description: Appointment endpoit provide you whole the functionality you need to work with appointment apis.
  get:
    description: To fetch a list of clients. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible products will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client (device).
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentStatusValue</i></b> - fetch list of appointment at a specific status 0 for open, 1 for cancel by doctor, 2 for cancel by patient, 3 for patient check-in, 4 for patient check-out and 5 for waiting. <u>Optional</u></p>
            <p><b><i>appointmentId</i></b> - appointmentId fetch specific appointment information. <u>Optional</u></p>
            <p><b><i>apointmentsId</i></b> - fetch a list of specific appointment. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - fetch a all appointment for specific barber. <u>Optional</u></p>
            <p><b><i>barbersId</i></b> - fetch a all appointment for some barbers. <u>Optional</u></p>
            <p><b><i>roomId</i></b> - ffetch a all appointment for specific room. <u>Optional</u></p>
            <p><b><i>roomsId</i></b> - fetch a all appointment for some rooms. <u>Optional</u></p>
            <p><b><i>clientId</i></b> - fetch a all appointment for specific client. <u>Optional</u></p>
            <p><b><i>clientsId</i></b> - fetch a all appointment for some clients. <u>Optional</u></p>
            <p><b><i>clientId</i></b> - clientId fetch alll appointments for specific client. <u>Optional</u></p>
            <p><b><i>roomId</i></b> - clientId fetch alll appointments for specific room. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - clientId fetch alll appointments for specific barber. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch clients update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "appointmentStatusValue": 2
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Appointments": [
                    {
                      "appointmentId": 32013,
                      "customerId": 41646,
                      "clientId": 39849,
                      "appointmentDate": "21-Sep-17",
                      "appointmentStartTime": 1481265750,
                      "appointmentEndTime": 1481266661,
                      "consultationType": "debitis voluptas aliquam",
                      "barberId": 2104,
                      "roomId": 136,
                      "status": 1,
                      "created_at": 1481265750,
                      "updated_at": 1481265750,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "appointmentStatuses": [
                        {
                          "appointmentStatusId": 128394,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 0,
                          "status": 2,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "appointmentStatusId": 128395,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 1,
                          "status": 2,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "appointmentStatusId": 128396,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 2,
                          "status": 2,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "appointmentStatusId": 128397,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 3,
                          "status": 2,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "appointmentStatusId": 128398,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 4,
                          "status": 2,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "appointmentStatusId": 128399,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 5,
                          "status": 1,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        }
                      ],
                      "service": {
                        "serviceId": 135,
                        "serviceLabel": "NU",
                        "serviceImage": null,
                        "storeLocationId": 424,
                        "serviceName": "Nutrition and dietetics",
                        "serviceNumberOfSession": 2,
                        "serviceDescription": "Ut sint recusandae minus et voluptatum. Sed voluptates nesciunt velit labore pariatur. Quae laboriosam eligendi et non et iste magnam.",
                        "servicePrice": 98,
                        "serviceTypeOfPrice": 1,
                        "serviceDuration": "00:15:00",
                        "serviceColor": "#bf6518",
                        "merchantId": 472,
                        "status": 1,
                        "created_at": 1481265441,
                        "updated_at": 1481265441,
                        "createdUserId": 459,
                        "updatedUserId": 459
                      },
                      "customer": {
                        "customerId": 41646,
                        "firstName": "Gayatri",
                        "lastName": "Oza",
                        "email": "roma06@yahoo.com",
                        "phoneNumber": "1319333102688",
                        "password_hash": null,
                        "otp": null,
                        "dob": "1964-09-23",
                        "address1": "59, Chandpole, Gandhinagar - 372567",
                        "address2": null,
                        "created_at": 1481265704,
                        "updated_at": 1481265704,
                        "createdUserId": 459,
                        "updatedUserId": 459,
                        "status": 1,
                        "cityId": null,
                        "stateId": null,
                        "pincode": null,
                        "countryCode": null
                      },
                      "client": {
                        "clientId": 39849,
                        "clientColor": "#401ae9",
                        "clientLabel": "GO",
                        "customerId": 41646,
                        "clientBirthday": "1964-09-23",
                        "clientGender": 0,
                        "status": 1,
                        "created_at": 1481265704,
                        "updated_at": 1481265704,
                        "createdUserId": 459,
                        "updatedUserId": 459,
                        "merchantId": 472,
                        "storeLocationId": 424
                      },
                      "barber": {
                        "barberId": 2104,
                        "userId": 0,
                        "barberLabel": "BI",
                        "barberName": "Binita Tara",
                        "barberJob": "DDS",
                        "barberTitle": "DC",
                        "barberColor": "#7828ec",
                        "status": 1,
                        "merchantId": 472,
                        "storeLocationId": 424,
                        "created_at": 1481265515,
                        "updated_at": 1481265515,
                        "createdUserId": 459,
                        "updatedUserId": 459,
                        "departmentId": 37
                      },
                      "room": {
                        "roomId": 136,
                        "roomName": "nursery",
                        "roomNumber": "2",
                        "isForDoctor": 0,
                        "status": 1,
                        "created_at": 1481265442,
                        "updated_at": 1481265442,
                        "createdUserId": 459,
                        "updatedUserId": 459,
                        "merchantId": 472,
                        "storeLocationId": 424
                      }
                    }
                  ],
                  "total": "1"
                }
              }
  post:
    description: To create a new appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>services</i></b> - an array of unique identifier for the service this appointment is going to.</p>
            <p><b><i>roomId</i></b> - unique identifier for the room this appointment is going to take place.</p>
            <p><b><i>barberId</i></b> - unique identifier for the barber.</p>
            <p><b><i>clientId</i></b> - unique identifier for the client.</p>
            <p><b><i>appointmentDate</i></b> - date of appointment with "d-M-y" format pattern as described in the ICU manual.</p>
            <p><b><i>appointmentStartTime</i></b> - start of appointment timestamp.</p>
            <p><b><i>appointmentEndTime</i></b> - end of appointment timestamp.</p>
    body:
      application/json:
        example: |
          {
            "services": [2, 5],
            "roomId": 1,
            "barberId": 1,
            "clientId": 1,
            "appointmentDate": "21-11-2016",
            "appointmentStartTime": 1479718800,
            "appointmentEndTime": 1479722400
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "roomId": 1,
                  "barberId": 2,
                  "clientId": 2,
                  "appointmentDate": "26-11-2016",
                  "appointmentStartTime": 1479718800,
                  "appointmentEndTime": 1479722400,
                  "merchantId": 472,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "storeLocationId": 424,
                  "created_at": 1480652147,
                  "updated_at": 1480652147,
                  "appointmentId": 7
                }
              }
  put:
    description: To edit an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentId</i></b> - appointment id is unique identifier for appointment you want to edit.</p>
            <p><b><i>roomId</i></b> - unique identifier for the room this appointment is going to take place. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - unique identifier for the barber. <u>Optional</u></p>
            <p><b><i>clientId</i></b> - unique identifier for the client. <u>Optional</u></p>
            <p><b><i>appointmentDate</i></b> - date of appointment with "d-M-y" format pattern as described in the ICU manual. <u>Optional</u></p>
            <p><b><i>appointmentStartTime</i></b> - start of appointment timestamp. <u>Optional</u></p>
            <p><b><i>appointmentEndTime</i></b> - end of appointment timestamp. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "appointmentId": 1,
            "barberId": 2
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "appointmentId": 6,
                  "appointmentDate": "25-11-2016",
                  "appointmentStartTime": 1479718800,
                  "appointmentEndTime": 1479722400,
                  "barberId": 5,
                  "clientId": 2,
                  "roomId": 1,
                  "status": 1,
                  "created_at": 1480651969,
                  "updated_at": 1480652438,
                  "createdUserId": 459,
                  "updatedUserId": 459,
                  "merchantId": 472,
                  "storeLocationId": 424
                }
              }
  delete:
    description: To delete an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentId</i></b> - appointment id is unique identifier for appointment you want to edit.</p>
    body:
      application/json:
        example: |
          {
            "appointmentId": 5
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }

/salon/appointment/status:
  description: Appointment status endpoit provide you create/edit/delete the functionality you need to work with appointment status apis.
  post:
    description: To create a new appointment status.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentId</i></b> - appointmentId is unique identifier for each appointment.</p>
            <p><b><i>appointmentStatusValue</i></b> - value can be 0 for open, 1 for canceled by client, 2 canceled by barber, 3 check in, 4 check out.</p>
    body:
      application/json:
        example: |
          {
            "appointmentId": 5,
            "appointmentStatusValue": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "appointmentId": 5,
                  "appointmentStatusValue": 3,
                  "merchantId": 472,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1480652851,
                  "updated_at": 1480652851,
                  "appointmentStatusId": 4
                }
              }
  put:
    description: To edit an appointment status.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentStatusId</i></b> - appointmentStatusId is a unique id for each appointment status.</p></p>
            <p><b><i>appointmentStatusValue</i></b> - new status value for appointment status</p>
    body:
      application/json:
        example: |
          {
            "appointmentStatusId": 1,
            "appointmentStatusValue": 1
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "appointmentId": 1,
                  "appointmentStatusValue": 1,
                  "merchantId": 472,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1479755189,
                  "updated_at": 1479755189,
                  "appointmentStatusId": 1
                }
              }
  delete:
    description: To delete a room.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentStatusId</i></b> - appointmentStatusId is unique identifier for each appointment status.</p>
    body:
      application/json:
        example: |
          {
            "appointmentStatusId": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }

/salon/service:
  description: Service endpoit provide you whole the functionality you need to work with service apis.
  get:
    description: To fetch a list of services. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible products will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceId</i></b> - serviceId fetch specific service information. <u>Optional</u></p>
            <p><b><i>servicesId</i></b> - to fetch a list of services information. <u>Optional</u></p>
            <p><b><i>productCategortyId</i></b> - fetch a list of services belong to a productCategory. <u>Optional</u></p>
            <p><b><i>productCategoriesId</i></b> - fetch a list of services belong to some product categories. <u>Optional</u></p>
            <p><b><i>servicesId</i></b> - to fetch a list of services information. <u>Optional</u></p>
            <p><b><i>serviceName</i></b> - serviceName fetch all services with the name start with serviceName. <u>Optional</u></p>
            <p><b><i>serviceLabel</i></b> - serviceLabel fetch all services with the label equal to serviceLabel. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch services update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "updated_at": 1468062355
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
                "success": 1,
                "response": {
                  "Services": [
                    {
                      "serviceId": 1,
                      "serviceLabel": "SW",
                      "serviceImage": null,
                      "storeLocationId": 424,
                      "serviceName": "Shave and wash214",
                      "serviceNumberOfSession": 1,
                      "serviceDescription": "Come to Premium Barbershop and experience our brand of the classic NYC barber.",
                      "servicePrice": 10,
                      "serviceTypeOfPrice": 0,
                      "serviceDuration": "01:15:00",
                      "serviceColor": "#FFEEDD",
                      "merchantId": 472,
                      "status": 1,
                      "created_at": 1481117029,
                      "updated_at": 1481117029,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "commissionType": "%",
                      "commissionFee": 0,
                      "productCategoryId": 34,
                      "productCategory": {
                        "productCategoryId": 34,
                        "parentProductCategoryId": null,
                        "productCategoryName": "Electronic",
                        "status": 1,
                        "createdUserId": 468,
                        "updatedUserId": 468,
                        "created_at": 1469428718,
                        "updated_at": 1469428718,
                        "merchantId": 0,
                        "productCategoryColor": "#FFFFFF"
                      }
                    }
                  ],
                  "total": "1"
                }
              }
  post:
    description: To create a new service.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceName</i></b> - name of the service.</p>
            <p><b><i>serviceNumberOfSession</i></b> - how many session this service needs. <u>Optional</u></p>
            <p><b><i>productCategoriId</i></b> - id of the product category. <u>Optional</u></p>
            <p><b><i>serviceLabel</i></b> - label of service.</p>
            <p><b><i>servicePrice</i></b> - price of service.</p>
            <p><b><i>serviceTypeOfPrice</i></b> - 0 for fixed and 1 for hourly price.</p>
            <p><b><i>serviceDuration</i></b> - how long it will take.</p>
            <p><b><i>serviceColor</i></b> - color of service "#ffffff".</p>
            <p><b><i>serviceDescription</i></b> - service description. <u>Optional</u></p>
            <p><b><i>file</i></b> - base 64 encoded value of the image file. <u>Optional</u></p>  
            <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
            <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
    body:
      application/json:
        example: |
          {
            "file": "iVBORw0KGgoAAAANSUhEUgAAADQAAABQCAIAAADZf8HwAAAAA3NCSVQICAjb4U\/gAAAAGXRFWHRTb2Z0d2FyZQBnbm9tZS1zY3JlZW5zaG907wO\/PgAAAGtJREFUaIHtzjEBwCAAwDBA2R4M4F\/MHOzow45EQeazz\/irdTvwRa6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+SqF7wIAXd1UjysAAAAAElFTkSuQmCC",
            "serviceColor": "#FFFFFF",
            "commissionType": "Fix",
            "commissionFee": 1000,
            "productCategoryId": 43,
            "serviceName": "Shave",
            "serviceLabel": "SH",
            "serviceNumberOfSession": 1,
            "servicePrice": 10,
            "serviceTypeOfPrice": 0,
            "serviceDuration": "1:15",
            "serviceDescription": "Come to Premium Barbershop and experience our brand of the classic NYC barber."
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "serviceColor": "#FFFFFF",
                      "commissionType": "Fix",
                      "commissionFee": 1000,
                      "productCategoryId": 43,
                      "serviceName": "Shave",
                      "serviceLabel": "SH",
                      "serviceNumberOfSession": 1,
                      "servicePrice": 10,
                      "serviceTypeOfPrice": 0,
                      "serviceDuration": "1:15",
                      "serviceDescription": "Come to Premium Barbershop and experience our brand of the classic NYC barber.",
                      "merchantId": 466,
                      "updatedUserId": 459,
                      "createdUserId": 459,
                      "storeLocationId": 424,
                      "status": 1,
                      "serviceImage": "v2\/salonapp\/services\/459__20170209061447.png",
                      "created_at": 1486644289,
                      "updated_at": 1486644289,
                      "serviceId": 1255
                  }
              }

  put:
    description: To edit a service.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceId</i></b> - id of the service.</p>
            <p><b><i>serviceName</i></b> - name of the service.</p>
            <p><b><i>serviceNumberOfSession</i></b> - how many session this service needs. <u>Optional</u></p>
            <p><b><i>productCategoriId</i></b> - id of the product category. <u>Optional</u></p>
            <p><b><i>serviceLabel</i></b> - label of service.</p>
            <p><b><i>servicePrice</i></b> - price of service.</p>
            <p><b><i>serviceTypeOfPrice</i></b> - 0 for fixed and 1 for hourly price.</p>
            <p><b><i>serviceDuration</i></b> - how long it will take.</p>
            <p><b><i>serviceColor</i></b> - color of service "#ffffff".</p>
            <p><b><i>serviceDescription</i></b> - service description. <u>Optional</u></p>
            <p><b><i>file</i></b> - base 64 encoded value of the image file. <u>Optional</u></p>   
            <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
            <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p> 
    body:
      application/json:
        example: |
          {
            "serviceId": 2,
            "serviceNumberOfSession": 2
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "serviceName": "Initial Consultation",
                  "serviceNumberOfSession": 2,
                  "productCategoryId": 43,
                  "serviceLabel": "SH",
                  "servicePrice": 10,
                  "serviceTypeOfPrice": 0,
                  "serviceDuration": "1:15",
                  "serviceColor": "#ffffff",
                  "serviceDescription": "Patient for the first time need to be check with a barber for inital consultation.",
                  "merchantId": 472,
                  "commissionType": "Fix",
                  "commissionFee": 1000,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "storeLocationId": 424,
                  "created_at": 1480078941,
                  "updated_at": 1480078941,
                  "serviceId": 2
                }
              }
  delete:
    description: To delete a service.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceId</i></b> - id of the service.</p>
    body:
      application/json:
        example: |
          {
            "serviceId": 1
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }

/salon/service/file:
  description: Service endpoit provide you whole the functionality you need to work with service apis.
  get:
    description: To fetch image content.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceImage</i></b> image to load.</p>
    body:
      application/json:
        example: |
          {
              "serviceImage": "v2\/salonapp\/services\/459__20170209061447.png"
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
                "success": 1,
                "response": {
                    "filename": "v2\/salonapp\/services\/459__20170209061447.png",
                    "data": "iVBORw0KGgoAAAANSUhEUgAAADQAAABQCAIAAADZf8HwAAAAA3NCSVQICAjb4U\/gAAAAGXRFWHRTb2Z0d2FyZQBnbm9tZS1zY3JlZW5zaG907wO\/PgAAAGtJREFUaIHtzjEBwCAAwDBA2R4M4F\/MHOzow45EQeazz\/irdTvwRa6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+SqF7wIAXd1UjysAAAAAElFTkSuQmCC"
                }
              }