#%RAML 1.0
title: ePaisa Sales App
version: 2.0
baseUri: https://nine.epaisa.com
#baseUri: https://mocksvc.mulesoft.com/mocks/8bc4601f-57d0-4296-8cf3-f1564845f119
securitySchemes:
    customSecurityScheme:
      type: x-custome
      description: This <i>Token</i> is generated by login call and is working for one houre.
/payment/initiate:
  post:
    description: To initiate the payment flow and generating a payment record on the database
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: data (json)
        description: json array of payment details and order product is an example
    body:
      application/json:
        example: |
          {
            "paymentCurrencyId": 25,
            "paymentAmount": 100,
            "paymentTipAmount": 0,
            "paymentSubTotal": 0,
            "paymentTotalDiscount": 0,
            "paymentCustomerId": "",
            "location": "19.0636695,72.8338119,",
            "created_at": "",
            "customerId": 1,
            "order": {
              "products": [
                {
                  "productId": "someId",
                  "variants": [
                    {
                      "variantId": "someId",
                      "unitPrice": "someValueEnterByMerchant",
                      "discount": "valueInPercentage",
                      "quantity": "OrderedQuantity",
                      "calculatedDiscount": "dicountValue(unitPrice - unitPrice * discount / 100)",
                      "calculatedPrice": "final SellingPrice After Applying Taxes and Discount(unitPrice * qty - discount + tax)",
                      "basePrice": "(unitPrice - DiscountValue / quantity) * 100 / totalInclusiveTaxRate",
                      "tax": [
                        {
                          "id": "66",
                          "name": "VAT",
                          "value": "12.60",
                          "taxType": "Inclusive",
                          "calculatedTaxValue": "12.50"
                        },
                        {
                          "id": 67,
                          "name": "Stax",
                          "value": 10.6,
                          "taxType": "Exclusive",
                          "calculatedTaxValue": 2.5
                        }
                      ]
                    }
                  ]
                }
              ],
              "customItems": [
                {
                  "name": "value",
                  "unitPrice": "sampleValue",
                  "quantity": "3",
                  "calculatedPrice": "120.00",
                  "discount": "12.00",
                  "calculatedDiscount": "dicountValue(unitPrice - unitPrice * discount / 100)",
                  "basePrice": "(unitPrice - DiscountValue / quantity) * 100 / totalInclusiveTaxRate",
                  "Tax": [
                    {
                      "id": "66",
                      "name": "VAT",
                      "value": "12.60",
                      "calculatedTaxValue": "12.50"
                    }
                  ]
                }
              ],
              "customer": {},
              "subTotal": "calculated value",
              "totalPrice": "calculated value",
              "totalTax": "total of all the calculated tax",
              "totalDiscount": "calculated total discount, sum of both product discounts and general discount",
              "generalDiscount": "general discount applied to cart",
              "roundOffAmount": "amount thats rounded if enabled",
              "serviceCharges": "service Charges",
              "deliveryCharges": "delivery Charges",
              "calculatedTax": [
                {
                  "id": "66",
                  "name": "VAT",
                  "value": "12.60",
                  "calculatedTaxValue": "1112.50"
                }
              ]
            }
          }
    responses:
      200:
        body:
          application/json:
            example: |
                    {"success":0,"errorCode":"2.2.3","message":"Validation Error","messageDetails":{"errorMessage":"Previous payment is waiting","lastPaymentId":26}}
/payment/process:
  post:
    description: To process a transaction on generated payment. 
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: Payment Id
        description: Generated payment id by /payment/initiate call
      param3:
        required: true
        displayName: Transaction Type Id
        description: Id value of the transaction type. To get available list please call /payments/transactionlist endpoint
      param4:
        required: true
        displayName: Transaction Currency Id
        description: Currency id for the transaction. To obtain the list of currencies please call /masterdata/currencies endpoint
      param5:
        required: true
        displayName: Transaction Amount
        description: Total Amount for the transaction. Decimal part should be 2 digits. ie 10.24
      param6:
        required: false
        displayName: Mobile Number
        description: Mobile number of the client. Mandatory on wallet calls only. 
      param7:
        required: false
        displayName: Additional parameters
        description: json string of additional parameters required by different payment types.          
    responses:
      200:
        body:
          application/json:
            example: {}
/payment/authenticate:
  post:
    description: To process a transaction on generated payment. 
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: Payment Id
        description: Generated payment id by /payment/initiate call
      param3:
        required: true
        displayName: Transaction Type Id
        description: Id value of the transaction type. To get available list please call /payments/transactionlist endpoint
      param4:
        required: true
        displayName: Transaction Id
        description: Id of the transaction
      param5:
        required: true
        displayName: OTP
        description: OTP for that transaction         
    responses:
      200:
        body:
          application/json:
            example: |
/payment/update:
  post:
    description: To process a transaction on generated payment. 
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: Payment Id
        description: Generated payment id by /payment/initiate call
      param3:
        required: true
        displayName: Transaction Type Id
        description: Id value of the transaction type. To get available list please call /payments/transactionlist endpoint
      param4:
        required: true
        displayName: Transaction Id
        description: Id of the transaction
      param5:
        required: true
        displayName: Json Object
        description: Json object for additional parameters for ex | {"Customer":"vinit","pan":""} 
          <p>for card transactions</p>
          <p><b>deviceId </b> Mandatory Device id for the reader
          <p><b>tid      </b> 
          <p><b>mid      </b> 
          <p><b>apprCode </b> 
          <p><b>emvtag   </b> 
          <p><b>cardtype </b> 
          <p><b>RRN      </b> 
          <p><b>cardLabel</b> 
          <p><b>TVR      </b> 
          <p><b>TSI      </b> 
          <p><b>TC       </b> 
          <p><b>AID      </b> 
          <p><b>tdate    </b> 
          <p><b>ttime    </b> 
          <p><b>Signature</b> 
          <p><b>ErrorCode</b> 
          <p><b>MaskedPAN</b>
    responses:
      200:
        body:
          application/json:
            example: |              
/payment/finalize:
  post:
    description: for finalizing the payment
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Token generated on login call
      param2:
        required: true
        displayName: Payment Id
        description: payment id generated on /payment/initiate call
    responses:
      200:
        body:
          application/json:
            example: {}
/payment/list:
  post:
    description: for listing the payments as history
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Token generated on login call
      param2:
        required: false
        displayName: Json Object
        description: Json object to send additional criterias. Below is the available keys
            <p><b>fromDate</b> Unix timestamp of start date to filter the list.</p>
            <p><b>toDate</b> Unix timestamp of end date to filter the list.</p>
            <p><b>merchantId</b> if user has payment_list_bymerchant permission, you can send merchantId to retrieve specific merchant's payments.</p>
            <p><b>userId</b>  if user has payment_list_byuser permission, you can send userId to retrieve specific user's payments. Otherwise it will send current user's payments. Send 0 to fetch all users of the merchant if you have correct permissions.</p>
            <p><b>sourceId</b> if this id is given, only transactions that have given source id will be listed. This is used on masterwallet and other sources separation.</p>
            <p><b>userId</b> optional parameter for listing only given user's payments</p>
            <p><b>paymentId</b> optional parameter for fetching specific payment</p>            
            <p><b>paymentStatusId</b> optional parameter for fetching payments with given status</p>            
            <p><b>offset</b> offset for pagination</p>
            <p><b>limit</b> limit for pagination</p>
            <p><b>amountFrom</b> optional parameter to fetch transactions that has amount bigger than this value</p>
            <p><b>amountTo</b> optional parameter to fetch transactions that has amount smaller than this value</p>
            <p><b>transactionId</b> optional parameter to fetch only one transaction</p> 
            <p><b>transactionTypeId</b> optional parameter to fetch only certain types of transactions</p>                
            <p><b>include</b> array of items to include on the list. Possible items are
              <ul>
                <li>transactions - include transaction data</li>
                <li>history - include payment history data</li>
                <li>transactions_history - include transactions history data</li>
                <li>orders - include order and product data</li>
              </ul>
            </p>  
    responses:
      200:
        body:
          application/json:
            example: | 
              {"success":1,"response":[{"_id":{"$id":"56e6a1c8af195c7422000032"},"paymentId":43,"paymentStatusId":2,"paymentCurrencyId":1,"paymentAmount":"10.00","paymentTipAmount":"0.00","paymentSubTotal":"10.00","paymentTotalDiscount":"0.00","paymentCustomerId":0,"created_at":1457955272,"updated_at":1457956079,"transactions":[{"_id":{"$id":"56e6a205af195c682200002a"},"transactionId":17,"transactionTypeId":2,"transactionStatusId":2,"transactionCurrencyId":1,"transactionAmount":"10.00","created_at":1457955333,"updated_at":1457955333},{"_id":{"$id":"56e6a306af195c682200002c"},"transactionId":18,"transactionTypeId":2,"transactionStatusId":2,"transactionCurrencyId":1,"transactionAmount":"10.00","created_at":1457955590,"updated_at":1457955590},{"_id":{"$id":"56e6a3fcaf195c682200002e"},"transactionId":19,"transactionTypeId":2,"transactionStatusId":2,"transactionCurrencyId":1,"transactionAmount":"10.00","created_at":1457955836,"updated_at":1457955836},{"_id":{"$id":"56e6a4efaf195c6822000030"},"transactionId":20,"transactionTypeId":2,"transactionStatusId":2,"transactionCurrencyId":1,"transactionAmount":"10.00","created_at":1457956079,"updated_at":1457956079},{"_id":{"$id":"56e6a51baf195c6822000032"},"transactionId":21,"transactionTypeId":2,"transactionStatusId":2,"transactionCurrencyId":1,"transactionAmount":"10.00","created_at":1457956123,"updated_at":1457956123},{"_id":{"$id":"56e6a659af195c6822000034"},"transactionId":22,"transactionTypeId":2,"transactionStatusId":2,"transactionCurrencyId":1,"transactionAmount":"10.00","created_at":1457956441,"updated_at":1457956441},{"_id":{"$id":"56e6a96baf195c6822000036"},"transactionId":23,"transactionTypeId":2,"transactionStatusId":1,"transactionCurrencyId":1,"transactionAmount":"10.00","created_at":1457957227,"updated_at":1457957344}]}]}
/payment/details:
  post:
    description: Payment details api will fetch complete payment with transaction details and purchase products list
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Token generated on login call
      param2:
        required: false
        displayName: merchantId
        description: merchantId of user
      param3:
        required: false
        displayName: userId
        description: userId of user 
      param4:
        required: false
        displayName: paymentId
        description: payment Id of payment   
    responses:
      200:
        body:
          application/json:
            example: | 
             {
                "success": 1,
                "response": {
                  "payments": {
                    "paymentId": 3505,
                    "paymentCurrencyId": 25,
                    "paymentAmount": "11.00",
                    "paymentTipAmount": "0.00",
                    "paymentSubTotal": "11.00",
                    "paymentTotalDiscount": "0.00",
                    "status": "Approved",
                    "details": {
                      "sourceId": "2",
                      "orderId": "581c6d32cfcdbc071d6fe44e"
                    },
                    "order": {
                      "customItems": [],
                      "products": [
                        {
                          "productId": "580a0a76cfcdbc75c971dcb7",
                          "variants": [
                            {
                              "variantId": "580a0a76cfcdbc75c971dcb8",
                              "unitPrice": "10.0",
                              "discount": "0.0",
                              "quantity": "1",
                              "calculatedDiscount": "0.0",
                              "calculatedPrice": "10.0",
                              "tax": []
                            }
                          ],
                          "productDisplayName": "milk"
                        }
                      ],
                      "subTotal": 10,
                      "totalPrice": 11,
                      "totalDiscount": 0,
                      "totalTax": 0,
                      "generalDiscount": 0,
                      "roundOffAmount": 0,
                      "serviceCharges": 10,
                      "deliveryCharges": 0,
                      "CalculatedTax": [],
                      "updated_at": 1478257970,
                      "created_at": 1478257970,
                      "merchantId": 1518,
                      "status": 1,
                      "orderId": "581c6d32cfcdbc071d6fe44e"
                    }
                  },
                  "transactions": [
                    {
                      "transactionId": 3279,
                      "transactionTypeId": 2,
                      "transactionTypeName": "Cash",
                      "transactionStatusId": 2,
                      "transactionStatus": "Approved",
                      "transactionAmount": "11.00",
                      "transactionDetails": []
                    }
                  ]
                }
              }                        
/payment/void:
  post:
    description: to void the payment and void all transactions
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Token generated on login call
      param2:
        required: true
        displayName: paymentId
        description: paymentId to void
/payment/cancel:
  post:
    description: to cancel the payment and void all transactions
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Token generated on login call
      param2:
        required: true
        displayName: paymentId
        description: paymentId to cancel
/receipt:
  post:
    description: To send receipt of payment via sms or email. 
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: JSON STRING
        description: Json object for additional parameters for ex 
    body:
      application/json:
        example: |
          {
            "paymentId":25,
            "email":'asd&gmail.com',
            "mobile":'678678678678678',
          }            
    responses:
      200:
        body:
          application/json:
            example: |
             {
             }
  get:
    description: To view receipt of payment. 
    queryParameters:
      param1:
        required: true
        displayName: cheksum
        description: payment chksum 
      param2:
        required: true
        displayName: Payment Id
        description: Generated payment id by /payment/initiate call
      param3:
        required: true
        displayName: Receipt Type
        description: type of receipt
    body:
      application/json:
        example: |
          {
            "paymentId":25,
            "email":'asd&gmail.com',
            "mobile":'678678678678678',
          }            
    responses:
      200:
        body:
          application/json:
            example: |
             {
             }