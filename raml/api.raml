#%RAML 0.8
title: ePaisa APP 2.0 API Documentation
version: 2.0
baseUri: https://nine.epaisa.com
securitySchemes:
  - customSecurityScheme:
      type:
        x-custome
      description: This <i>Token</i> is generated by login call and is working for one houre.
/reports/items:
  description: Reports endpoit provide you whole the functionality you need to work with reports apis.
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>merchantId</i></b> - departmentId fetch specific department information. <u>Optional</u></p>
            <p><b><i>userId</i></b> - departmentsId fetch a list of department information. <u>Optional</u></p>
            <p><b><i>fromDate</i></b> - start date range d-m-y default is begining of the today. <u>Optional</u></p>
            <p><b><i>toDate</i></b> - end date range d-m-y default is end of the today. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {"fromDate":"12-12-2016"}
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Items": {
                    "customItems": [
                      {
                        "id": "",
                        "name": "Item 1",
                        "quantity": 1,
                        "sales": 11.25
                      },
                      {
                        "id": "",
                        "name": "Item 1",
                        "quantity": 1,
                        "sales": 64.405
                      },
                      {
                        "id": "",
                        "name": "Item 1",
                        "quantity": 1,
                        "sales": 220
                      },
                      {
                        "id": "",
                        "name": "Item 2",
                        "quantity": 1,
                        "sales": 5.88
                      }
                    ],
                    "products": [
                      {
                        "id": "57cead0bcfcdbc4ff8488e3c",
                        "name": "bshsj",
                        "quantity": 1,
                        "sales": 2180
                      },
                      {
                        "id": "57dbdbbacfcdbc78050d974d",
                        "name": "burger",
                        "quantity": 1,
                        "sales": 300
                      },
                      {
                        "id": "57d01b8dcfcdbc3f4d779288",
                        "name": "kids wear",
                        "quantity": 3,
                        "sales": 3000
                      }
                    ]
                  }
                }
              }
/reports/categories:
  description: Reports endpoit provide you whole the functionality you need to work with reports apis.
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>merchantId</i></b> - departmentId fetch specific department information. <u>Optional</u></p>
            <p><b><i>userId</i></b> - departmentsId fetch a list of department information. <u>Optional</u></p>
            <p><b><i>fromDate</i></b> - start date range d-m-y default is begining of the today. <u>Optional</u></p>
            <p><b><i>toDate</i></b> - end date range d-m-y default is end of the today. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {}
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Categories": {
                    "Food": {
                      "quantity": 1,
                      "sales": 580.99
                    },
                    "Uncategorized": {
                      "quantity": 3,
                      "sales": 3000
                    },
                    "Mensware": {
                      "quantity": 3,
                      "sales": 3000
                    }
                  }
                }
              }
/reports/summary:
  description: Reports endpoit provide you whole the functionality you need to work with reports apis.
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>merchantId</i></b> - departmentId fetch specific department information. <u>Optional</u></p>
            <p><b><i>userId</i></b> - departmentsId fetch a list of department information. <u>Optional</u></p>
            <p><b><i>fromDate</i></b> - start date range d-m-y default is begining of the today. <u>Optional</u></p>
            <p><b><i>toDate</i></b> - end date range d-m-y default is end of the today. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {"fromDate":"12-12-2016"}
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                    "Summary": {
                        "fromDate": "February 13, 2017, 12:00 am",
                        "toDate": "February 13, 2017, 11:59 pm",
                        "sales": 0,
                        "numberOfSales": 0,
                        "averageSale": 0,
                        "gross": 0,
                        "hours": {
                            "12 AM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "1 AM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "2 AM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "3 AM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "4 AM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "5 AM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "6 AM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "7 AM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "8 AM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "9 AM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "10 AM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "11 AM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "12 PM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "1 PM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "2 PM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "3 PM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "4 PM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "5 PM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "6 PM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "7 PM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "8 PM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "9 PM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "10 PM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            },
                            "11 PM": {
                                "numberOfSales": 0,
                                "averageSale": 0,
                                "sales": 0,
                                "gross": 0
                            }
                        }
                    }
                }
              }
/reports/compare:
  description: Reports endpoit provide you whole the functionality you need to work with reports apis.
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>merchantId</i></b> - departmentId fetch specific department information. <u>Optional</u></p>
            <p><b><i>userId</i></b> - departmentsId fetch a list of department information. <u>Optional</u></p>
            <p><b><i>first</i></b> - an object contain fromDate and toDate one side of comparison.</p>
            <p><b><i>second</i></b> - an object contain fromDate and toDate the other side of comparison.</p>
            <p><b><i>fromDate</i></b> - start date of comparison date range.</p>
            <p><b><i>toDate</i></b> - end date of comparison date range.</p>
    body:
      application/json:
        example: |
          {
              "first": {
                  "fromDate": "01-02-2017",
                  "toDate": "28-02-2017"
              },
              "second": {
                  "fromDate": "01-03-2017",
                  "toDate": "31-03-2017"
              }
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "first": {
                          "fromDate": "February 1, 2017, 12:00 am",
                          "toDate": "February 28, 2017, 11:59 pm",
                          "sales": 579980.08,
                          "numberOfSales": 38,
                          "averageSale": 15287.85,
                          "gross": 580938.33,
                          "netSales": 579777.18,
                          "refund": 0,
                          "tax": 203.638,
                          "discount": 1161.15,
                          "total": 579980.82
                      },
                      "second": {
                          "fromDate": "March 1, 2017, 12:00 am",
                          "toDate": "March 31, 2017, 11:59 pm",
                          "sales": 23533.7,
                          "numberOfSales": 70,
                          "averageSale": 409.53,
                          "gross": 28667.23,
                          "netSales": 23982.57,
                          "refund": 0,
                          "tax": 1039.0503626104,
                          "discount": 4684.66,
                          "total": 25021.62
                      }
                  }
              }
/care/department:
              description: Departments endpoit provide you whole the functionality you need to work with department apis.
              get:
                description: To fetch a list of departments. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible departments will returned.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: false
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>departmentId</i></b> - departmentId fetch specific department information. <u>Optional</u></p>
                        <p><b><i>departmentsId</i></b> - departmentsId fetch a list of department information. <u>Optional</u></p>
                        <p><b><i>departmentName</i></b> - departmentName fetch all department their name started with this paramter's value information. <u>Optional</u></p>
                        <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
                        <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
                        <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
                body:
                  application/json:
                    example: |
                      {
                        "departmentsId": [1,2,3,4,5,6]
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "Departments": [
                                {
                                  "departmentId": 1,
                                  "departmentName": "Accident and emergency (A&E)",
                                  "departmentDescription": "Also called Casualty Department, where you're likely to be taken if you have arrived in an ambulance or emergency situation.",
                                  "status": 1,
                                  "merchantId": 472,
                                  "storeLocationId": 424,
                                  "created_at": 1481013677,
                                  "updated_at": 1481013677,
                                  "createdUserId": 459,
                                  "updatedUserId": 459
                                },
                                {
                                  "departmentId": 2,
                                  "departmentName": "Physiotherapy",
                                  "departmentDescription": "Physiotherapists work through physical therapies such as exercise, massage, and manipulation of bones, joints and muscle tissues.",
                                  "status": 1,
                                  "merchantId": 472,
                                  "storeLocationId": 424,
                                  "created_at": 1481014148,
                                  "updated_at": 1481014148,
                                  "createdUserId": 459,
                                  "updatedUserId": 459
                                },
                                {
                                  "departmentId": 3,
                                  "departmentName": "Microbiology",
                                  "departmentDescription": "The microbiology department provides an extensive clinical service, including mycology, parasitology, mycobacteriology, a high security pathology unit, and a healthcare associated infection investigation unit, as well as routine bacteriology and an expanding molecular diagnostic repertoire.",
                                  "status": 1,
                                  "merchantId": 472,
                                  "storeLocationId": 424,
                                  "created_at": 1481014176,
                                  "updated_at": 1481014176,
                                  "createdUserId": 459,
                                  "updatedUserId": 459
                                },
                                {
                                  "departmentId": 4,
                                  "departmentName": "Neurology",
                                  "departmentDescription": "A medical specialty dealing with disorders of the nervous system. Specifically, it deals with the diagnosis and treatment of all categories of disease involving the central, peripheral, and autonomic nervous systems, including their coverings, blood vessels, and all effector tissue, such as muscle. Includes the brain, spinal cord, and spinal cord injuries (SCI).",
                                  "status": 1,
                                  "merchantId": 472,
                                  "storeLocationId": 424,
                                  "created_at": 1481014176,
                                  "updated_at": 1481014176,
                                  "createdUserId": 459,
                                  "updatedUserId": 459
                                },
                                {
                                  "departmentId": 5,
                                  "departmentName": "Obstetrics/Gynecology",
                                  "departmentDescription": "Specialist nurses, midwives and imaging technicians provide maternity services such as: antenatal and postnatal care, maternal and foetal surveillance, and prenatal diagnosis.",
                                  "status": 1,
                                  "merchantId": 472,
                                  "storeLocationId": 424,
                                  "created_at": 1481014176,
                                  "updated_at": 1481014176,
                                  "createdUserId": 459,
                                  "updatedUserId": 459
                                },
                                {
                                  "departmentId": 6,
                                  "departmentName": "Oncology",
                                  "departmentDescription": "A branch of medicine that deals with cancer and tumors. A medical professional who practices oncology is an oncologist. The Oncology department provides treatments, including radiotherapy and chemotherapy, for cancerous tumors and blood disorders.",
                                  "status": 1,
                                  "merchantId": 472,
                                  "storeLocationId": 424,
                                  "created_at": 1481014801,
                                  "updated_at": 1481014801,
                                  "createdUserId": 459,
                                  "updatedUserId": 459
                                }
                              ],
                              "total": "6"
                            }
                          }
              post:
                description: To create a new department.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>departmentName</i></b> - departmentName is a title for each department like Emeregency.</p>
                        <p><b><i>departmentDescription</i></b> - a short description <u>Optional</u></p>
                body:
                  application/json:
                    example: |
                      {
                        "departmentName": "Accident and emergency (A&E)",
                        "departmentDescription": "Also called Casualty Department, where you're likely to be taken if you have arrived in an ambulance or emergency situation."
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "departmentName": "Accident and emergency (A&E)",
                              "departmentDescription": "Also called Casualty Department, where you're likely to be taken if you have arrived in an ambulance or emergency situation.",
                              "updatedUserId": 459,
                              "createdUserId": 459,
                              "created_at": 1481013677,
                              "updated_at": 1481013677,
                              "departmentId": 1
                            }
                          }
              put:
                description: To edit a department.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>departmentId</i></b> - roomId is unique identifier for each department.</p>
                        <p><b><i>departmentName</i></b> - departmentName is a title for each department like Emeregency.</p>
                        <p><b><i>departmentDescription</i></b> - a short description <u>Optional</u></p>
                body:
                  application/json:
                    example: |
                      {
                        "departmentId": 1,
                        "departmentName": "Accident and emergency (A&E)",
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "departmentName": "Accident and emergency (A&E)",
                              "departmentDescription": "Also called Casualty Department, where you're likely to be taken if you have arrived in an ambulance or emergency situation.",
                              "updatedUserId": 459,
                              "createdUserId": 459,
                              "created_at": 1481013677,
                              "updated_at": 1481013677,
                              "departmentId": 1
                            }
                          }
              delete:
                description: To delete a department.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>departmentId</i></b> - roomId is unique identifier for each department.</p>
                body:
                  application/json:
                    example: |
                      {
                        "departmentId": 1
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": []
                          }
/care/room:
              description: Rooms endpoit provide you whole the functionality you need to work with room apis.
              get:
                description: To fetch a list of rooms. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible rooms will returned.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: false
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>roomId</i></b> - roomId fetch specific room information. <u>Optional</u></p>
                        <p><b><i>roomsId</i></b> - fetch a list of specific rooms information. <u>Optional</u></p>
                        <p><b><i>roomName</i></b> - roomName fetch all rooms their name started with this paramter's value information. <u>Optional</u></p>
                        <p><b><i>isForDoctor</i></b> - fetch only rooms for doctors. <u>Optional</u></p>
                        <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
                        <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
                        <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
                body:
                  application/json:
                    example: |
                      {
                        "roomsId": [1,3]
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "Rooms": [
                                {
                                  "roomId": 1,
                                  "roomName": "Emergency",
                                  "roomNumber": "1",
                                  "isForDoctor": 1,
                                  "status": 1,
                                  "created_at": 1479463340,
                                  "updated_at": 1479463765,
                                  "createdUserId": 459,
                                  "updatedUserId": 459,
                                  "merchantId": 472
                                },
                                {
                                  "roomId": 3,
                                  "roomName": "Emergency Heart",
                                  "roomNumber": "1",
                                  "isForDoctor": 0,
                                  "status": 1,
                                  "created_at": 1479464162,
                                  "updated_at": 1479464211,
                                  "createdUserId": 459,
                                  "updatedUserId": 459,
                                  "merchantId": 472
                                }
                              ],
                              "total": "2"
                            }
                          }
              post:
                description: To create a new room.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>roomName</i></b> - roomName is a title for each room like Emeregency.</p>
                        <p><b><i>roomNumber</i></b> - roomNumber is for the situations we have more than one room for specific purpos for example if you have 3 emergency room you have roomNumber 1, 2 and 3 with the same roomName. <u>Optional</u></p>
                        <p><b><i>isForDoctor</i></b> - fetch only rooms for doctors. <u>Optional</u></p>
                body:
                  application/json:
                    example: |
                      {
                        "roomName": "Emergency",
                        "roomNumber": "1",
                        "isForDoctor": 0,
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "roomName": "Emergency",
                              "roomNumber": "1",
                              "isForDoctor": 0,
                              "createdUserId": 459,
                              "updatedUserId": 459,
                              "created_at": 1479463340,
                              "updated_at": 1479463340,
                              "roomId": 1,
                              "merchantId": 472
                            }
                          }
              put:
                description: To edit a room.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>roomId</i></b> - roomId is unique identifier for each room.</p>
                        <p><b><i>roomName</i></b> - roomName is a title for each room like Emeregency.</p> <u>Optional</u></p>
                        <p><b><i>roomNumber</i></b> - roomNumber is for the situations we have more than one room for specific purpos for example if you have 3 emergency room you have roomNumber 1, 2 and 3 with the same roomName. <u>Optional</u></p>
                        <p><b><i>isForDoctor</i></b> - fetch only rooms for doctors. <u>Optional</u></p>
                body:
                  application/json:
                    example: |
                      {
                        "roomId": 1,
                        "isForDoctor": 1,
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "roomId": 1,
                              "roomName": "Emergency",
                              "roomNumber": "1",
                              "isForDoctor": 1,
                              "status": 1,
                              "created_at": 1479463340,
                              "updated_at": 1479463765,
                              "createdUserId": 459,
                              "updatedUserId": 459,
                              "merchantId": 472
                            }
                          }
              delete:
                description: To delete a room.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>roomId</i></b> - roomId is unique identifier for each room.</p>
                body:
                  application/json:
                    example: |
                      {
                        "roomId": 3
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": []
                          }
/care/patient:
              description: Patients endpoit provide you whole the functionality you need to work with patient apis.
              get:
                description: To fetch a list of patients. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible products will returned.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: false
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>patientId</i></b> - patientId fetch specific patient information. <u>Optional</u></p>
                        <p><b><i>patientsId</i></b> - fetch a list of specific patients information. <u>Optional</u></p>
                        <p><b><i>patientBloodType</i></b> - patientBloodType fetch all patients with specific blood type. <u>Optional</u></p>
                        <p><b><i>patientBirthday</i></b> - fetch all patients with specific birthday. <u>Optional</u></p>
                        <p><b><i>patientGender</i></b> - fetch all patients with specific gender 0 is for women and 1 is for men. <u>Optional</u></p>
                        <p><b><i>updated_at</i></b> - last modified date is the last time client fetch patients update. <u>Optional</u></p>
                        <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
                        <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
                body:
                  application/json:
                    example: |
                      {
                        "patientsId":[1,2]
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "Patients": [
                                {
                                  "patientId": 36973,
                                  "patientColor": "#f23470",
                                  "patientLabel": "IR",
                                  "customerId": 38770,
                                  "patientBloodType": "B-",
                                  "patientBirthday": "1977-02-08",
                                  "patientGender": 0,
                                  "status": 1,
                                  "created_at": 1481265551,
                                  "updated_at": 1481265551,
                                  "createdUserId": 459,
                                  "updatedUserId": 459,
                                  "merchantId": 472,
                                  "storeLocationId": 424,
                                  "conditions": [
                                    {
                                      "patientConditionId": 195218,
                                      "patientId": 36973,
                                      "patientConditionsDiagnosedDate": 1481249249,
                                      "conditionTitle": "Blood Pressure",
                                      "conditionValue": "13/9",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195219,
                                      "patientId": 36973,
                                      "patientConditionsDiagnosedDate": 1481172139,
                                      "conditionTitle": "Blood Pressure",
                                      "conditionValue": "12/8",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195220,
                                      "patientId": 36973,
                                      "patientConditionsDiagnosedDate": 1481198371,
                                      "conditionTitle": "Blood Pressure",
                                      "conditionValue": "16/9",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195221,
                                      "patientId": 36973,
                                      "patientConditionsDiagnosedDate": 1481168834,
                                      "conditionTitle": "Blood Pressure",
                                      "conditionValue": "15/10",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195222,
                                      "patientId": 36973,
                                      "patientConditionsDiagnosedDate": 1481214111,
                                      "conditionTitle": "Heart Rate",
                                      "conditionValue": "110",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195223,
                                      "patientId": 36973,
                                      "patientConditionsDiagnosedDate": 1481217973,
                                      "conditionTitle": "Heart Rate",
                                      "conditionValue": "88",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195224,
                                      "patientId": 36973,
                                      "patientConditionsDiagnosedDate": 1481201695,
                                      "conditionTitle": "Heart Rate",
                                      "conditionValue": "67",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195225,
                                      "patientId": 36973,
                                      "patientConditionsDiagnosedDate": 1481206803,
                                      "conditionTitle": "Heart Rate",
                                      "conditionValue": "120",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195226,
                                      "patientId": 36973,
                                      "patientConditionsDiagnosedDate": 1481235707,
                                      "conditionTitle": "Heart Rate",
                                      "conditionValue": "100",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    }
                                  ],
                                  "appointments": [
                                    {
                                      "appointmentId": 34924,
                                      "serviceId": 141,
                                      "appointmentDate": "14-Apr-17",
                                      "appointmentStartTime": 1481265890,
                                      "appointmentEndTime": 1481267344,
                                      "consultationType": "quo et laborum",
                                      "doctorId": 1802,
                                      "patientId": 36973,
                                      "roomId": 112,
                                      "status": 1,
                                      "created_at": 1481265890,
                                      "updated_at": 1481265890,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472,
                                      "storeLocationId": 424
                                    },
                                    {
                                      "appointmentId": 36246,
                                      "serviceId": 125,
                                      "appointmentDate": "14-Feb-17",
                                      "appointmentStartTime": 1481265965,
                                      "appointmentEndTime": 1481268558,
                                      "consultationType": "est harum expedita",
                                      "doctorId": 2376,
                                      "patientId": 36973,
                                      "roomId": 142,
                                      "status": 1,
                                      "created_at": 1481265965,
                                      "updated_at": 1481265965,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472,
                                      "storeLocationId": 424
                                    },
                                    {
                                      "appointmentId": 36535,
                                      "serviceId": 125,
                                      "appointmentDate": "13-Dec-16",
                                      "appointmentStartTime": 1481265978,
                                      "appointmentEndTime": 1481268895,
                                      "consultationType": "sunt esse officia",
                                      "doctorId": 2088,
                                      "patientId": 36973,
                                      "roomId": 140,
                                      "status": 1,
                                      "created_at": 1481265978,
                                      "updated_at": 1481265978,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472,
                                      "storeLocationId": 424
                                    }
                                  ],
                                  "information": {
                                    "firstName": "Isha",
                                    "lastName": "Ram",
                                    "email": "rahim.bedi@kashyap.in",
                                    "phoneNumber": "1891308313805",
                                    "address1": "83, Prerna Apartments, AbhishekGarh Surat - 279342",
                                    "address2": null,
                                    "cityId": null,
                                    "stateId": null,
                                    "countryCode": null,
                                    "pincode": null
                                  }
                                },
                                {
                                  "patientId": 36975,
                                  "patientColor": "#ba4195",
                                  "patientLabel": "LS",
                                  "customerId": 38772,
                                  "patientBloodType": "A+",
                                  "patientBirthday": "1949-03-19",
                                  "patientGender": 1,
                                  "status": 1,
                                  "created_at": 1481265551,
                                  "updated_at": 1481265551,
                                  "createdUserId": 459,
                                  "updatedUserId": 459,
                                  "merchantId": 472,
                                  "storeLocationId": 424,
                                  "conditions": [
                                    {
                                      "patientConditionId": 195236,
                                      "patientId": 36975,
                                      "patientConditionsDiagnosedDate": 1481223281,
                                      "conditionTitle": "Blood Pressure",
                                      "conditionValue": "13/9",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195237,
                                      "patientId": 36975,
                                      "patientConditionsDiagnosedDate": 1481170216,
                                      "conditionTitle": "Blood Pressure",
                                      "conditionValue": "12/8",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195238,
                                      "patientId": 36975,
                                      "patientConditionsDiagnosedDate": 1481232768,
                                      "conditionTitle": "Blood Pressure",
                                      "conditionValue": "16/9",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195239,
                                      "patientId": 36975,
                                      "patientConditionsDiagnosedDate": 1481240685,
                                      "conditionTitle": "Blood Pressure",
                                      "conditionValue": "15/10",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195240,
                                      "patientId": 36975,
                                      "patientConditionsDiagnosedDate": 1481174148,
                                      "conditionTitle": "Heart Rate",
                                      "conditionValue": "110",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195241,
                                      "patientId": 36975,
                                      "patientConditionsDiagnosedDate": 1481246553,
                                      "conditionTitle": "Heart Rate",
                                      "conditionValue": "88",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195242,
                                      "patientId": 36975,
                                      "patientConditionsDiagnosedDate": 1481178377,
                                      "conditionTitle": "Heart Rate",
                                      "conditionValue": "67",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195243,
                                      "patientId": 36975,
                                      "patientConditionsDiagnosedDate": 1481230830,
                                      "conditionTitle": "Heart Rate",
                                      "conditionValue": "120",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195244,
                                      "patientId": 36975,
                                      "patientConditionsDiagnosedDate": 1481177012,
                                      "conditionTitle": "Heart Rate",
                                      "conditionValue": "100",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    }
                                  ],
                                  "appointments": [
                                    {
                                      "appointmentId": 34185,
                                      "serviceId": 141,
                                      "appointmentDate": "21-Nov-17",
                                      "appointmentStartTime": 1481265861,
                                      "appointmentEndTime": 1481268543,
                                      "consultationType": "omnis aut optio",
                                      "doctorId": 2008,
                                      "patientId": 36975,
                                      "roomId": 134,
                                      "status": 1,
                                      "created_at": 1481265861,
                                      "updated_at": 1481265861,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472,
                                      "storeLocationId": 424
                                    }
                                  ],
                                  "information": {
                                    "firstName": "Labeen",
                                    "lastName": "Shankar",
                                    "email": "bansal.kirti@bhatia.in",
                                    "phoneNumber": "5403636664458",
                                    "address1": "35, Aundh, Surat - 448523",
                                    "address2": null,
                                    "cityId": null,
                                    "stateId": null,
                                    "countryCode": null,
                                    "pincode": null
                                  }
                                },
                                {
                                  "patientId": 36977,
                                  "patientColor": "#c8d671",
                                  "patientLabel": "DD",
                                  "customerId": 38774,
                                  "patientBloodType": "A-",
                                  "patientBirthday": "1987-07-30",
                                  "patientGender": 1,
                                  "status": 1,
                                  "created_at": 1481265551,
                                  "updated_at": 1481265551,
                                  "createdUserId": 459,
                                  "updatedUserId": 459,
                                  "merchantId": 472,
                                  "storeLocationId": 424,
                                  "conditions": [
                                    {
                                      "patientConditionId": 195254,
                                      "patientId": 36977,
                                      "patientConditionsDiagnosedDate": 1481203907,
                                      "conditionTitle": "Blood Pressure",
                                      "conditionValue": "13/9",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195255,
                                      "patientId": 36977,
                                      "patientConditionsDiagnosedDate": 1481171297,
                                      "conditionTitle": "Blood Pressure",
                                      "conditionValue": "12/8",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195256,
                                      "patientId": 36977,
                                      "patientConditionsDiagnosedDate": 1481233951,
                                      "conditionTitle": "Blood Pressure",
                                      "conditionValue": "16/9",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195257,
                                      "patientId": 36977,
                                      "patientConditionsDiagnosedDate": 1481248693,
                                      "conditionTitle": "Blood Pressure",
                                      "conditionValue": "15/10",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195258,
                                      "patientId": 36977,
                                      "patientConditionsDiagnosedDate": 1481221495,
                                      "conditionTitle": "Heart Rate",
                                      "conditionValue": "110",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195259,
                                      "patientId": 36977,
                                      "patientConditionsDiagnosedDate": 1481247973,
                                      "conditionTitle": "Heart Rate",
                                      "conditionValue": "88",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195260,
                                      "patientId": 36977,
                                      "patientConditionsDiagnosedDate": 1481214760,
                                      "conditionTitle": "Heart Rate",
                                      "conditionValue": "67",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195261,
                                      "patientId": 36977,
                                      "patientConditionsDiagnosedDate": 1481247599,
                                      "conditionTitle": "Heart Rate",
                                      "conditionValue": "120",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "patientConditionId": 195262,
                                      "patientId": 36977,
                                      "patientConditionsDiagnosedDate": 1481217906,
                                      "conditionTitle": "Heart Rate",
                                      "conditionValue": "100",
                                      "status": 1,
                                      "created_at": 1481265551,
                                      "updated_at": 1481265551,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    }
                                  ],
                                  "appointments": [
                                    {
                                      "appointmentId": 34279,
                                      "serviceId": 139,
                                      "appointmentDate": "16-Jan-17",
                                      "appointmentStartTime": 1481265865,
                                      "appointmentEndTime": 1481268980,
                                      "consultationType": "fugit necessitatibus nam",
                                      "doctorId": 1856,
                                      "patientId": 36977,
                                      "roomId": 152,
                                      "status": 1,
                                      "created_at": 1481265865,
                                      "updated_at": 1481265865,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472,
                                      "storeLocationId": 424
                                    }
                                  ],
                                  "information": {
                                    "firstName": "Deepesh",
                                    "lastName": "Deshpande",
                                    "email": "yadu.kapadia@gmail.com",
                                    "phoneNumber": "2303409548663",
                                    "address1": "95, Srinivasan Villas, Goregaon Gurgaon - 321082",
                                    "address2": null,
                                    "cityId": null,
                                    "stateId": null,
                                    "countryCode": null,
                                    "pincode": null
                                  }
                                }
                              ],
                              "total": "1804"
                            }
                          }
              post:
                description: To create a new patient.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>customerId</i></b> - customer id for current patient.</p>
                        <p><b><i>patientBloodType</i></b> - patientBloodType blood type for current patient.</p>
                        <p><b><i>patientGender</i></b> - Gender for current patient 0 for women and 1 for men.</p>
                        <p><b><i>patientBirthday</i></b> - birthday date for current patient.</p>
                body:
                  application/json:
                    example: |
                      {
                        "customerId": 13,
                        "patientBloodType": "AB+",
                        "patientGender": 1,
                        "patientBirthday": "Dec 7th 1989"
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "customerId": 13,
                              "patientBloodType": "AB+",
                              "patientGender": 1,
                              "patientBirthday": "Dec 7th 1989",
                              "updatedUserId": 459,
                              "createdUserId": 459,
                              "created_at": 1479482582,
                              "updated_at": 1479482582,
                              "patientId": 1
                            }
                          }
              put:
                description: To edit a patient.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>patientId</i></b> - customer id for current patient.</p>
                        <p><b><i>patientBloodType</i></b> - patientBloodType blood type for current patient.</p>
                        <p><b><i>patientGender</i></b> - Gender for current patient 0 for women and 1 for men.</p>
                        <p><b><i>patientBirthday</i></b> - birthday date for current patient.</p>
                body:
                  application/json:
                    example: |
                      {
                        "patientId": 1,
                        "patientBloodType": "B+",
                        "patientGender": 0,
                        "patientBirthday": "Dec 7th 1988"
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "patientId": 1,
                              "customerId": 13,
                              "patientBloodType": "B+",
                              "patientBirthday": "Dec 7th 1988",
                              "patientGender": 0,
                              "status": 1,
                              "created_at": 1479482582,
                              "updated_at": 1479483079,
                              "createdUserId": 459,
                              "updatedUserId": 459,
                              "merchantId": 472
                            }
                          }
              delete:
                description: To delete a patient.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>patientId</i></b> - patientId is unique identifier for each patient.</p>
                body:
                  application/json:
                    example: |
                      {
                        "patientId": 2
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": []
                          }
/care/patient/message:
              description: Patients message endpoit provide you whole the functionality you need to work with patient message apis.
              post:
                description: To send a message to a patient.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>patientId</i></b> - patient id you want to send this message to.</p>
                        <p><b><i>patients</i></b> - array of patient id you want to send this message to all of them.</p>
                        <p><b><i>type</i></b> - 'sms' or 'email'.</p>
                        <p><b><i>message</i></b> - body of message.</p>
                body:
                  application/json:
                    example: |
                      {
                        "patientId": 1,
                        "type": "sms",
                        "message": "Hello, Tomorrow is your resevation date for initial consultation please come to hospital between 13:00 to 13:30"
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": []
                          }
/care/patient/condition:
              description: Patients endpoit provide you create/edit/delete the functionality you need to work with patient conditions apis.
              post:
                description: To create a new patient condition.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>patientId</i></b> - roomName is a title for each room like Emeregency.</p>
                        <p><b><i>patientConditionsDiagnosedDate</i></b> - diagnosed date timestamp value. <u>Optional</u></p>
                        <p><b><i>conditionTitle</i></b> - title. <u>Optional</u></p>
                        <p><b><i>conditionValue</i></b> - value. <u>Optional</u></p>
                body:
                  application/json:
                    example: |
                      {
                        "patientId": 1,
                        "patientConditionsDiagnosedDate": 1479463948,
                        "conditionTitle": "Blood Pressure",
                        "conditionValue": "13/9",
                      } |
                        [
                          {
                            "patientId": 1,
                            "patientConditionsDiagnosedDate": 1479463948,
                            "conditionTitle": "Blood Pressure",
                            "conditionValue": "13/9",
                          },
                          {
                            "patientId": 1,
                            "patientConditionsDiagnosedDate": 1479463948,
                            "conditionTitle": "Blood Pressure",
                            "conditionValue": "13/9",
                          },
                          {
                            "patientId": 1,
                            "patientConditionsDiagnosedDate": 1479463948,
                            "conditionTitle": "Blood Pressure",
                            "conditionValue": "13/9",
                          },
                          {
                            "patientId": 1,
                            "patientConditionsDiagnosedDate": 1479463948,
                            "conditionTitle": "Blood Pressure",
                            "conditionValue": "13/9",
                          }
                        ]
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "patientId": 1,
                              "patientConditionsDiagnosedDate": 1479463948,
                              "conditionTitle": "Blood Pressure",
                              "conditionValue": "13/9",
                              "merchantId": 472,
                              "updatedUserId": 459,
                              "createdUserId": 459,
                              "created_at": 1479533280,
                              "updated_at": 1479533280,
                              "patientConditionId": 3
                            }
                          }
              put:
                description: To edit a patient condition.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>patientConditionId</i></b> - roomName is a title for each room like Emeregency.</p> <u>Optional</u></p>
                        <p><b><i>patientConditionsDiagnosedDate</i></b> - diagnosed date. <u>Optional</u></p>
                        <p><b><i>conditionTitle</i></b> - title. <u>Optional</u></p>
                        <p><b><i>conditionValue</i></b> - value. <u>Optional</u></p>
                body:
                  application/json:
                    example: |
                      {
                        "patientConditionId": 1,
                        "patientConditionsDiagnosedDate": 1479463948,
                        "conditionTitle": "Blood Pressure",
                        "conditionValue": "12/8",
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "patientId": 1,
                              "patientConditionsDiagnosedDate": 1479463948,
                              "conditionTitle": "Blood Pressure",
                              "conditionValue": "12/8",
                              "merchantId": 472,
                              "updatedUserId": 459,
                              "createdUserId": 459,
                              "created_at": 1479533280,
                              "updated_at": 1479533280,
                              "patientConditionId": 1
                            }
                          }
              delete:
                description: To delete a patient condition.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>patientConditionId</i></b> - patientConditionId is unique identifier for each patient condition.</p>
                body:
                  application/json:
                    example: |
                      {
                        "patientConditionId": 3
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": []
                          }
/care/doctor:
              description: Doctor endpoit provide you whole the functionality you need to work with doctor apis.
              get:
                description: To fetch a list of doctors. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible rooms will returned.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: false
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>doctorId</i></b> - doctorId fetch specific doctor information. <u>Optional</u></p>
                        <p><b><i>doctorsId</i></b> - to fetch a list of specific doctor information. <u>Optional</u></p>
                        <p><b><i>doctorName</i></b> - Name of doctor. <u>Optional</u></p>
                        <p><b><i>doctorJob</i></b> - Job of doctor, Physician or Reception. <u>Optional</u></p>
                        <p><b><i>doctorTitle</i></b> - Title of doctor. "Dr. " <u>Optional</u></p>
                        <p><b><i>day</i></b> - avaiable in specific day of week. <u>Optional</u></p>
                        <p><b><i>status</i></b> - 1 for active 2 for inactive. <u>Optional</u></p>
                        <p><b><i>start</i></b> - avaiable in specific time in a specific day of week. <u>Optional</u></p>
                        <p><b><i>end</i></b> - avaiable in specific time in a specific day of week. <u>Optional</u></p>
                        <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
                        <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
                        <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
                body:
                  application/json:
                    example: |
                      {
                        "updated_at": 1468062355,
                        "day":"Monday"
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "Doctors": [
                                {
                                  "doctorId": 1,
                                  "doctorName": "",
                                  "doctorJob": "Orthopedist",
                                  "doctorTitle": "Dr.",
                                  "doctorColor": "#ffffff",
                                  "status": 1, // Active
                                  "created_at": 1479712067,
                                  "updated_at": 1479712699,
                                  "createdUserId": 459,
                                  "updatedUserId": 459,
                                  "merchantId": 472,
                                  "workingHours": [
                                    {
                                      "doctorWorkingHourId": 18,
                                      "doctorId": 1,
                                      "weekDay": "Monday",
                                      "startTime": "09:00:00",
                                      "endTime": "12:00:00",
                                      "status": 1,
                                      "merchantId": 472,
                                      "created_at": 1479974276,
                                      "updated_at": 1479974276,
                                      "createdUserId": 459,
                                      "updatedUserId": 459
                                    },
                                    {
                                      "doctorWorkingHourId": 19,
                                      "doctorId": 1,
                                      "weekDay": "Friday",
                                      "startTime": "09:00:00",
                                      "endTime": "12:00:00",
                                      "status": 1,
                                      "merchantId": 472,
                                      "created_at": 1479974276,
                                      "updated_at": 1479975217,
                                      "createdUserId": 459,
                                      "updatedUserId": 459
                                    },
                                    {
                                      "doctorWorkingHourId": 20,
                                      "doctorId": 1,
                                      "weekDay": "Tuesday",
                                      "startTime": "09:00:00",
                                      "endTime": "12:00:00",
                                      "status": 1,
                                      "merchantId": 472,
                                      "created_at": 1479974276,
                                      "updated_at": 1479974276,
                                      "createdUserId": 459,
                                      "updatedUserId": 459
                                    },
                                    {
                                      "doctorWorkingHourId": 21,
                                      "doctorId": 1,
                                      "weekDay": "Friday",
                                      "startTime": "09:00:00",
                                      "endTime": "12:00:00",
                                      "status": 1,
                                      "merchantId": 472,
                                      "created_at": 1479974276,
                                      "updated_at": 1479974276,
                                      "createdUserId": 459,
                                      "updatedUserId": 459
                                    }
                                  ]
                                },
                                {
                                  "doctorId": 2,
                                  "doctorName": "",
                                  "doctorJob": "Surgery",
                                  "doctorTitle": "Dr.",
                                  "doctorColor": "#ffffff",
                                  "status": 2, // inActive
                                  "created_at": 1479712463,
                                  "updated_at": 1479712463,
                                  "createdUserId": 459,
                                  "updatedUserId": 459,
                                  "merchantId": 472,
                                  "workingHours": [
                                    {
                                      "doctorWorkingHourId": 26,
                                      "doctorId": 2,
                                      "weekDay": "Monday",
                                      "startTime": "13:00:00",
                                      "endTime": "17:00:00",
                                      "status": 1,
                                      "merchantId": 472,
                                      "created_at": 1479974276,
                                      "updated_at": 1479974276,
                                      "createdUserId": 459,
                                      "updatedUserId": 459
                                    }
                                  ]
                                }
                              ],
                              "total": "2"
                            }
                          }
              post:
                description: To create a new doctor.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>departmentId</i></b> - unique identifier for the department.</p>
                        <p><b><i>doctorName</i></b> - Name of doctor.</p>
                        <p><b><i>doctorJob</i></b> - Job of doctor, Physician or Reception.</p>
                        <p><b><i>doctorTitle</i></b> - Title of doctor. "Dr. "</p>
                        <p><b><i>doctorColor</i></b> - HEX value of doctorColor "#ffffff". </p>
                        <p><b><i>userId</i></b> - unique identifier for the user.</p>
                        <p><b><i>file</i></b> - file base 64 encode.</p>
                        <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
                        <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
                body:
                  application/json:
                    example: |
                      {
                        "doctorJob": "Orthopedist",
                        "doctorTitle": "Dr.",
                        "doctorColor": "#ffffff"
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "doctorJob": "Orthopedist",
                              "doctorTitle": "Dr.",
                              "doctorColor": "#ffffff",
                              "merchantId": 472,
                              "updatedUserId": 459,
                              "createdUserId": 459,
                              "created_at": 1479712067,
                              "updated_at": 1479712067,
                              "commissionType": "%",
                              "commissionFee": 0.00,
                              "doctorId": 1
                            }
                          }
              put:
                description: To edit a doctor.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>doctorId</i></b> - doctorId is unique identifier for each doctor.</p>
                        <p><b><i>doctorName</i></b> - Name of doctor. <u>Optional</u></p>
                        <p><b><i>doctorJob</i></b> - Job of doctor, Physician or Reception. <u>Optional</u></p>
                        <p><b><i>doctorTitle</i></b> - Title of doctor. "Dr. " <u>Optional</u></p>
                        <p><b><i>doctorColor</i></b> - HEX value of doctorColor "#ffffff". <u>Optional</u></p>
                body:
                  application/json:
                    example: |
                      {
                        "doctorId":1,
                        "doctorJob":"Orthopedist"
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "doctorId": 1,
                              "doctorJob": "Orthopedist",
                              "doctorTitle": "Dr.",
                              "doctorColor": "#ffffff",
                              "status": 1,
                              "created_at": 1479712067,
                              "updated_at": 1479712279,
                              "createdUserId": 459,
                              "updatedUserId": 459,
                              "merchantId": 472
                            }
                          }
              delete:
                description: To delete a doctor.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>doctorId</i></b> - doctorId is unique identifier for each doctor.</p>
                body:
                  application/json:
                    example: |
                      {
                        "doctorId": 3
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": []
/care/doctor/file:
              description: Service endpoit provide you whole the functionality you need to work with service apis.
              get:
                description: To fetch image content.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: false
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>doctorImage</i></b> image to load.</p>
                body:
                  application/json:
                    example: |
                      {
                          "doctorImage": "v2\/salonapp\/services\/459__20170209061447.png"
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                         {
                            "success": 1,
                            "response": {
                                "filename": "v2\/salonapp\/services\/459__20170209061447.png",
                                "data": "iVBORw0KGgoAAAANSUhEUgAAADQAAABQCAIAAADZf8HwAAAAA3NCSVQICAjb4U\/gAAAAGXRFWHRTb2Z0d2FyZQBnbm9tZS1zY3JlZW5zaG907wO\/PgAAAGtJREFUaIHtzjEBwCAAwDBA2R4M4F\/MHOzow45EQeazz\/irdTvwRa6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+SqF7wIAXd1UjysAAAAAElFTkSuQmCC"
                            }
                          }
/care/doctor/service:
              description: Doctor Service endpoit provide you whole the functionality you need to work with doctor service apis.
              post:
                description: To create a new doctor service row.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>doctorId</i></b> - unique identifier for the doctor.</p>
                        <p><b><i>serviceId</i></b> - unique identifier for the service.</p>
                        <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
                        <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
                body:
                  application/json:
                    example: |
                      {
                        "doctorId": 1,
                        "serviceId": 2,
                        "commissionType": "Fix",
                        "commissionFee": 1000
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "doctorId": 1,
                              "serviceId": 2,
                              "merchantId": 472,
                              "commissionType": "Fix",
                              "commissionFee": 1000,
                              "created_at": 0,
                              "updated_at": 1481035306,
                              "createdUserId": 0,
                              "updatedUserId": 459
                            }
                          }
              put:
                description: To edit a doctor.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>doctorId</i></b> - unique identifier for the doctor.</p>
                        <p><b><i>serviceId</i></b> - unique identifier for the service.</p>
                        <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
                        <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
                body:
                  application/json:
                    example: |
                      {
                        "doctorId": 1,
                        "serviceId": 2,
                        "commissionType": "Fix",
                        "commissionFee": 1000
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "doctorId": 1,
                              "serviceId": 2,
                              "merchantId": 472,
                              "commissionType": "Fix",
                              "commissionFee": 1000,
                              "created_at": 0,
                              "updated_at": 1481035306,
                              "createdUserId": 0,
                              "updatedUserId": 459
                            }
                          }
              delete:
                description: To delete a doctor.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>doctorId</i></b> - unique identifier for the doctor.</p>
                        <p><b><i>serviceId</i></b> - unique identifier for the service.</p>
                body:
                  application/json:
                    example: |
                      {
                        "doctorId": 3
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": []
                          }
/care/doctor/working-hours:
              description: Doctor Working Hour endpoit provide you whole the functionality you need.
              post:
                description: To create and edit a doctor working hour row.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>doctorId</i></b> - unique identifier for the doctor.</p>
                        <p><b><i>workingHours</i></b> - array of "day", "start" and "end" to create plus "doctorWorkingHourId" for edit only.</p>
                body:
                  application/json:
                    example: |
                      {
                        "doctorId": 1,
                        "workingHours": [
                          {
                            "day": "Monday",
                            "start": "9:00",
                            "end": "12:00"
                          },
                          {
                            "day": "Monday",
                            "start": "14:00",
                            "end": "18:00"
                          },
                          {
                            "day": "Tuesday",
                            "start": "9:00",
                            "end": "12:00"
                          },
                          {
                            "day": "Friday",
                            "start": "9:00",
                            "end": "12:00"
                          },
                          {
                            "doctorWorkingHourId": 19,
                            "day": "Friday",
                            "start": "9:00",
                            "end": "12:00"
                          }
                        ]
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": [
                              {
                                "doctorId": 1598,
                                "merchantId": 472,
                                "weekDay": "Monday",
                                "startTime": "9:00",
                                "endTime": "12:00",
                                "created_at": 1481612359,
                                "updated_at": 1481612359,
                                "doctorWorkingHourId": 25708
                              },
                              {
                                "doctorId": 1598,
                                "merchantId": 472,
                                "weekDay": "Monday",
                                "startTime": "14:00",
                                "endTime": "18:00",
                                "created_at": 1481612359,
                                "updated_at": 1481612359,
                                "doctorWorkingHourId": 25709
                              },
                              {
                                "doctorId": 1598,
                                "merchantId": 472,
                                "weekDay": "Tuesday",
                                "startTime": "9:00",
                                "endTime": "12:00",
                                "created_at": 1481612359,
                                "updated_at": 1481612359,
                                "doctorWorkingHourId": 25710
                              },
                              {
                                "doctorId": 1598,
                                "merchantId": 472,
                                "weekDay": "Friday",
                                "startTime": "9:00",
                                "endTime": "12:00",
                                "created_at": 1481612359,
                                "updated_at": 1481612359,
                                "doctorWorkingHourId": 25711
                              },
                              {
                                "doctorWorkingHourId": 25707,
                                "doctorId": 1598,
                                "weekDay": "Friday",
                                "startTime": "9:00",
                                "endTime": "12:00",
                                "status": 1,
                                "merchantId": 472,
                                "created_at": 1481612271,
                                "updated_at": 1481612359,
                                "createdUserId": 0,
                                "updatedUserId": 0
                              }
                            ]
                          }
              delete:
                description: To delete a doctor working hour.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>doctorWorkingHourId</i></b> - unique identifier for the doctor working hour.</p>
                body:
                  application/json:
                    example: |
                      {
                        "doctorWorkingHourId": 3
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": []
                          }
/care/doctor/notification:
              description: Doctor notification endpoit provide the functionality to send notification for a reception.
              post:
                description: To send a notification to a reception.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>receptionId</i></b> - Name of doctor.</p>
                        <p><b><i>message</i></b> - the messages you want to send to a reception.</p>
                body:
                  application/json:
                    example: |
                      {
                        "doctorId": 1,
                        "message": "Requesting the next patient."
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                         {
                            "success": 1,
                            "response": []
                          }
/care/appointment:
              description: Appointment endpoit provide you whole the functionality you need to work with appointment apis.
              get:
                description: To fetch a list of patients. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible products will returned.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: false
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>appointmentStatusValue</i></b> - fetch list of appointment at a specific status 0 for open, 1 for cancel by doctor, 2 for cancel by patient, 3 for patient check-in, 4 for patient check-out and 5 for waiting. <u>Optional</u></p>
                        <p><b><i>apointmentId</i></b> - fetch a specific appointment. <u>Optional</u></p>
                        <p><b><i>apointmentsId</i></b> - fetch a list of specific appointment. <u>Optional</u></p>
                        <p><b><i>appointmentDate</i></b> - fetch a list of appointment for specific date. <u>Optional</u></p>
                        <p><b><i>doctorId</i></b> - fetch a all appointment for specific doctor. <u>Optional</u></p>
                        <p><b><i>doctorsId</i></b> - fetch a all appointment for some doctors. <u>Optional</u></p>
                        <p><b><i>roomId</i></b> - ffetch a all appointment for specific room. <u>Optional</u></p>
                        <p><b><i>roomsId</i></b> - fetch a all appointment for some rooms. <u>Optional</u></p>
                        <p><b><i>patientId</i></b> - fetch a all appointment for specific patient. <u>Optional</u></p>
                        <p><b><i>customerId</i></b> - fetch a all appointment for specific customer. <u>Optional</u></p>
                        <p><b><i>patientsId</i></b> - fetch a all appointment for some patients. <u>Optional</u></p>
                        <p><b><i>updated_at</i></b> - last modified date is the last time client fetch patients update. <u>Optional</u></p>
                        <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
                        <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
                body:
                  application/json:
                    example: |
                      {
                        "updated_at": 1468062355
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "Appointments": [
                                {
                                  "appointmentId": 32013,
                                  "customerId": 41646,
                                  "patientId": 39849,
                                  "appointmentDate": "21-Sep-17",
                                  "appointmentStartTime": 1481265750,
                                  "appointmentEndTime": 1481266661,
                                  "consultationType": "debitis voluptas aliquam",
                                  "doctorId": 2104,
                                  "roomId": 136,
                                  "status": 1,
                                  "created_at": 1481265750,
                                  "updated_at": 1481265750,
                                  "createdUserId": 459,
                                  "updatedUserId": 459,
                                  "merchantId": 472,
                                  "storeLocationId": 424,
                                  "appointmentStatuses": [
                                    {
                                      "appointmentStatusId": 128394,
                                      "appointmentId": 32013,
                                      "appointmentStatusValue": 0,
                                      "status": 2,
                                      "created_at": 1481265750,
                                      "updated_at": 1481265750,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "appointmentStatusId": 128395,
                                      "appointmentId": 32013,
                                      "appointmentStatusValue": 1,
                                      "status": 2,
                                      "created_at": 1481265750,
                                      "updated_at": 1481265750,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "appointmentStatusId": 128396,
                                      "appointmentId": 32013,
                                      "appointmentStatusValue": 2,
                                      "status": 2,
                                      "created_at": 1481265750,
                                      "updated_at": 1481265750,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "appointmentStatusId": 128397,
                                      "appointmentId": 32013,
                                      "appointmentStatusValue": 3,
                                      "status": 2,
                                      "created_at": 1481265750,
                                      "updated_at": 1481265750,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "appointmentStatusId": 128398,
                                      "appointmentId": 32013,
                                      "appointmentStatusValue": 4,
                                      "status": 2,
                                      "created_at": 1481265750,
                                      "updated_at": 1481265750,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    },
                                    {
                                      "appointmentStatusId": 128399,
                                      "appointmentId": 32013,
                                      "appointmentStatusValue": 5,
                                      "status": 1,
                                      "created_at": 1481265750,
                                      "updated_at": 1481265750,
                                      "createdUserId": 459,
                                      "updatedUserId": 459,
                                      "merchantId": 472
                                    }
                                  ],
                                  "service": {
                                    "serviceId": 135,
                                    "serviceLabel": "NU",
                                    "serviceImage": null,
                                    "storeLocationId": 424,
                                    "serviceName": "Nutrition and dietetics",
                                    "serviceNumberOfSession": 2,
                                    "serviceDescription": "Ut sint recusandae minus et voluptatum. Sed voluptates nesciunt velit labore pariatur. Quae laboriosam eligendi et non et iste magnam.",
                                    "servicePrice": 98,
                                    "serviceTypeOfPrice": 1,
                                    "serviceDuration": "00:15:00",
                                    "serviceColor": "#bf6518",
                                    "merchantId": 472,
                                    "status": 1,
                                    "created_at": 1481265441,
                                    "updated_at": 1481265441,
                                    "createdUserId": 459,
                                    "updatedUserId": 459
                                  },
                                  "customer": {
                                    "customerId": 41646,
                                    "firstName": "Gayatri",
                                    "lastName": "Oza",
                                    "email": "roma06@yahoo.com",
                                    "phoneNumber": "1319333102688",
                                    "password_hash": null,
                                    "otp": null,
                                    "dob": "1964-09-23",
                                    "address1": "59, Chandpole, Gandhinagar - 372567",
                                    "address2": null,
                                    "created_at": 1481265704,
                                    "updated_at": 1481265704,
                                    "createdUserId": 459,
                                    "updatedUserId": 459,
                                    "status": 1,
                                    "cityId": null,
                                    "stateId": null,
                                    "pincode": null,
                                    "countryCode": null
                                  },
                                  "patient": {
                                    "patientId": 39849,
                                    "patientColor": "#401ae9",
                                    "patientLabel": "GO",
                                    "customerId": 41646,
                                    "patientBloodType": "A-",
                                    "patientBirthday": "1964-09-23",
                                    "patientGender": 0,
                                    "status": 1,
                                    "created_at": 1481265704,
                                    "updated_at": 1481265704,
                                    "createdUserId": 459,
                                    "updatedUserId": 459,
                                    "merchantId": 472,
                                    "storeLocationId": 424
                                  },
                                  "doctor": {
                                    "doctorId": 2104,
                                    "userId": 0,
                                    "doctorLabel": "BI",
                                    "doctorName": "Binita Tara",
                                    "doctorJob": "DDS",
                                    "doctorTitle": "DC",
                                    "doctorColor": "#7828ec",
                                    "status": 1,
                                    "merchantId": 472,
                                    "storeLocationId": 424,
                                    "created_at": 1481265515,
                                    "updated_at": 1481265515,
                                    "createdUserId": 459,
                                    "updatedUserId": 459,
                                    "departmentId": 37
                                  },
                                  "room": {
                                    "roomId": 136,
                                    "roomName": "nursery",
                                    "roomNumber": "2",
                                    "isForDoctor": 0,
                                    "status": 1,
                                    "created_at": 1481265442,
                                    "updated_at": 1481265442,
                                    "createdUserId": 459,
                                    "updatedUserId": 459,
                                    "merchantId": 472,
                                    "storeLocationId": 424
                                  }
                                }
                              ],
                              "total": "1"
                            }
                          }
              post:
                description: To create a new appointment.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>serviceId</i></b> - unique identifier for the service this appointment is going to.</p>
                        <p><b><i>roomId</i></b> - unique identifier for the room this appointment is going to take place.</p>
                        <p><b><i>doctorId</i></b> - unique identifier for the doctor.</p>
                        <p><b><i>customerId</i></b> - unique identifier for the customer.</p>
                        <p><b><i>appointmentDate</i></b> - date of appointment with "d-M-y" format pattern as described in the ICU manual.</p>
                        <p><b><i>appointmentStartTime</i></b> - start of appointment timestamp.</p>
                        <p><b><i>appointmentEndTime</i></b> - end of appointment timestamp.</p>
                body:
                  application/json:
                    example: |
                      {
                        "serviceId": 2,
                        "roomId": 1,
                        "doctorId": 1,
                        "customerId": 1,
                        "appointmentDate": "21-11-2016",
                        "appointmentStartTime": 1479718800,
                        "appointmentEndTime": 1479722400,
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "serviceId": 2,
                              "roomId": 1,
                              "doctorId": 1,
                              "customerId": 1,
                              "appointmentDate": "21-11-2016",
                              "appointmentStartTime": 1479718800,
                              "appointmentEndTime": 1479722400,
                              "consultationType": "Initial Consultation",
                              "merchantId": 472,
                              "updatedUserId": 459,
                              "createdUserId": 459,
                              "created_at": 1479717344,
                              "updated_at": 1479717344,
                              "appointmentId": 1
                            }
                          }
              put:
                description: To edit an appointment.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>appointmentId</i></b> - appointment id is unique identifier for appointment you want to edit.</p>
                        <p><b><i>roomId</i></b> - unique identifier for the room this appointment is going to take place. <u>Optional</u></p>
                        <p><b><i>doctorId</i></b> - unique identifier for the doctor. <u>Optional</u></p>
                        <p><b><i>patientId</i></b> - unique identifier for the patient. <u>Optional</u></p>
                        <p><b><i>appointmentDate</i></b> - date of appointment with "d-M-y" format pattern as described in the ICU manual. <u>Optional</u></p>
                        <p><b><i>appointmentStartTime</i></b> - start of appointment timestamp. <u>Optional</u></p>
                        <p><b><i>appointmentEndTime</i></b> - end of appointment timestamp. <u>Optional</u></p>
                body:
                  application/json:
                    example: |
                      {
                        "appointmentId": 1,
                        "doctorId": 2
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "appointmentId": 1,
                              "appointmentDate": "21-11-2016",
                              "appointmentStartTime": 1479718800,
                              "appointmentEndTime": 1479722400,
                              "doctorId": 2,
                              "patientId": 1,
                              "roomId": 1,
                              "status": 1,
                              "created_at": 1479717344,
                              "updated_at": 1479720413,
                              "createdUserId": 459,
                              "updatedUserId": 459,
                              "merchantId": 472
                            }
                          }
              delete:
                description: To delete an appointment.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>appointmentId</i></b> - appointment id is unique identifier for appointment you want to edit.</p>
                body:
                  application/json:
                    example: |
                      {
                        "appointmentId": 1
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": []
                          }
/care/appointment/status:
              description: Appointment status endpoit provide you create/edit/delete the functionality you need to work with appointment status apis.
              post:
                description: To create a new appointment status.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>appointmentId</i></b> - appointmentId is unique identifier for each appointment.</p>
                        <p><b><i>appointmentStatusValue</i></b> - value can be 0 for open, 1 for canceled by patient, 2 canceled by doctor, 3 check in, 4 check out, 5 waiting.</p>
                body:
                  application/json:
                    example: |
                      {
                        "appointmentId": 1,
                        "appointmentStatusValue": 1
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "appointmentId": 1,
                              "appointmentStatusValue": 1,
                              "merchantId": 472,
                              "updatedUserId": 459,
                              "createdUserId": 459,
                              "created_at": 1479755189,
                              "updated_at": 1479755189,
                              "appointmentStatusId": 1
                            }
                          }
              put:
                description: To edit an appointment status.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>appointmentStatusId</i></b> - appointmentStatusId is a unique id for each appointment status.</p></p>
                        <p><b><i>appointmentStatusValue</i></b> - new status value for appointment status</p>
                body:
                  application/json:
                    example: |
                      {
                        "appointmentStatusId": 1,
                        "appointmentStatusValue": 1
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "appointmentId": 1,
                              "appointmentStatusValue": 1,
                              "merchantId": 472,
                              "updatedUserId": 459,
                              "createdUserId": 459,
                              "created_at": 1479755189,
                              "updated_at": 1479755189,
                              "appointmentStatusId": 1
                            }
                          }
              delete:
                description: To delete a room.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>appointmentStatusId</i></b> - appointmentStatusId is unique identifier for each appointment status.</p>
                body:
                  application/json:
                    example: |
                      {
                        "appointmentStatusId": 3
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": []
                          }
/care/service:
              description: Service endpoit provide you whole the functionality you need to work with service apis.
              get:
                description: To fetch a list of services. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible products will returned.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: false
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>serviceId</i></b> - serviceId fetch specific service information. <u>Optional</u></p>
                        <p><b><i>servicesId</i></b> - fetch a list of services. <u>Optional</u></p>
                        <p><b><i>productCategortyId</i></b> - fetch a list of services belong to a productCategory. <u>Optional</u></p>
                        <p><b><i>productCategoriesId</i></b> - fetch a list of services belong to some product categories. <u>Optional</u></p>
                        <p><b><i>serviceName</i></b> - serviceName fetch all services with the name start with serviceName. <u>Optional</u></p>
                        <p><b><i>updated_at</i></b> - last modified date is the last time client fetch services update. <u>Optional</u></p>
                        <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
                        <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
                body:
                  application/json:
                    example: |
                      {
                        "updated_at": 1468062355
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "Services": [
                                {
                                  "serviceName": "Initial Consultation",
                                  "productCategoryId": 3,
                                  "serviceNumberOfSession": 1,
                                  "servicePrice": 10,
                                  "serviceTypeOfPrice": 0,
                                  "serviceDuration": "1:15",
                                  "serviceDescription": "Patient for the first time need to be check with a doctor for inital consultation.",
                                  "serviceColor": "#ffffff",
                                  "merchantId": 472,
                                  "updatedUserId": 459,
                                  "createdUserId": 459,
                                  "storeLocationId": 424,
                                  "created_at": 1480078941,
                                  "updated_at": 1480078941,
                                  "serviceId": 2
                                }
                              ],
                              "total": "1"
                            }
                          }
              post:
                description: To create a new service.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>serviceName</i></b> - name of the service.</p>
                        <p><b><i>serviceLabel</i></b> - label of the service.</p>
                        <p><b><i>serviceNumberOfSession</i></b> - how many session this service needs. <u>Optional</u></p>
                        <p><b><i>productCategoriId</i></b> - id of the product category. <u>Optional</u></p>
                        <p><b><i>servicePrice</i></b> - price of service.</p>
                        <p><b><i>serviceTypeOfPrice</i></b> - 0 for fixed and 1 for hourly price.</p>
                        <p><b><i>serviceDuration</i></b> - how long it will take.</p>
                        <p><b><i>serviceDescription</i></b> - service description. <u>Optional</u></p>
                        <p><b><i>file</i></b> - base 64 encoded value of the image file. <u>Optional</u></p>
                        <p><b><i>serviceColor</i></b> - service color "#ffffff".</p>
                        <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
                        <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
                body:
                  application/json:
                    example: |
                      {
                        "serviceName": "Initial Consultation",
                        "serviceNumberOfSession": 1,
                        "servicePrice": 10,
                        "serviceTypeOfPrice": 0,
                        "serviceDuration": "1:15",
                        "serviceDescription": "Patient for the first time need to be check with a doctor for inital consultation.",
                        "serviceColor": "#ffffff"
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "serviceName": "Initial Consultation",
                              "serviceNumberOfSession": 1,
                              "servicePrice": 10,
                              "serviceTypeOfPrice": 0,
                              "serviceDuration": "1:15",
                              "serviceDescription": "Patient for the first time need to be check with a doctor for inital consultation.",
                              "serviceColor": "#ffffff",
                              "merchantId": 472,
                              "updatedUserId": 459,
                              "createdUserId": 459,
                              "storeLocationId": 424,
                              "created_at": 1480078941,
                              "updated_at": 1480078941,
                              "serviceId": 2
                            }
                          }
              put:
                description: To edit a service.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>serviceId</i></b> - id of the service.</p>
                        <p><b><i>serviceName</i></b> - name of the service.</p>
                        <p><b><i>serviceNumberOfSession</i></b> - how many session this service needs. <u>Optional</u></p>
                        <p><b><i>productCategoriId</i></b> - id of the product category. <u>Optional</u></p>
                        <p><b><i>serviceLabel</i></b> - label of service.</p>
                        <p><b><i>servicePrice</i></b> - price of service.</p>
                        <p><b><i>serviceTypeOfPrice</i></b> - 0 for fixed and 1 for hourly price.</p>
                        <p><b><i>serviceDuration</i></b> - how long it will take.</p>
                        <p><b><i>serviceColor</i></b> - color of service "#ffffff".</p>
                        <p><b><i>serviceDescription</i></b> - service description. <u>Optional</u></p>
                        <p><b><i>file</i></b> - base 64 encoded value of the image file. <u>Optional</u></p>
                        <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
                        <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
                body:
                  application/json:
                    example: |
                      {
                        "serviceId": 2,
                        "serviceNumberOfSession": 2
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": {
                              "serviceName": "Initial Consultation",
                              "serviceNumberOfSession": 2,
                              "servicePrice": 10,
                              "serviceTypeOfPrice": 0,
                              "serviceDuration": "1:15",
                              "serviceDescription": "Patient for the first time need to be check with a doctor for inital consultation.",
                              "merchantId": 472,
                              "updatedUserId": 459,
                              "createdUserId": 459,
                              "storeLocationId": 424,
                              "created_at": 1480078941,
                              "updated_at": 1480078941,
                              "serviceId": 2
                            }
                          }
              delete:
                description: To delete a service.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: true
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>serviceId</i></b> - id of the service.</p>
                body:
                  application/json:
                    example: |
                      {
                        "serviceId": 1
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                          {
                            "success": 1,
                            "response": []
                          }
/care/service/file:
              description: Service endpoit provide you whole the functionality you need to work with service apis.
              get:
                description: To fetch image content.
                securedBy: [customSecurityScheme]
                queryParameters:
                  param1:
                      required: true
                      type: string
                      displayName: Token
                      description: This <i>Token</i> is generated by login call and is working for one houre.
                  param2:
                      required: true
                      type: string
                      displayName: clientId
                      description: This <i>ID</i> is generated for each client.
                  param3:
                      required: false
                      type: string
                      displayName: requestParams
                      description: Below keys are accepted [Json String]
                        <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                        <p><b><i>serviceImage</i></b> image to load.</p>
                body:
                  application/json:
                    example: |
                      {
                          "serviceImage": "v2\/salonapp\/services\/459__20170209061447.png"
                      }
                responses:
                  200:
                    body:
                      application/json:
                        example: |
                         {
                            "success": 1,
                            "response": {
                                "filename": "v2\/salonapp\/services\/459__20170209061447.png",
                                "data": "iVBORw0KGgoAAAANSUhEUgAAADQAAABQCAIAAADZf8HwAAAAA3NCSVQICAjb4U\/gAAAAGXRFWHRTb2Z0d2FyZQBnbm9tZS1zY3JlZW5zaG907wO\/PgAAAGtJREFUaIHtzjEBwCAAwDBA2R4M4F\/MHOzow45EQeazz\/irdTvwRa6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+SqF7wIAXd1UjysAAAAAElFTkSuQmCC"
                            }
                          }
/customer/list(deprecated):
                            description: It fetch list of all customers
                            post:
                              description: It fetch list of all customers
                              queryParameters:
                                param1:
                                    required: true
                                    displayName: Token
                                    description: Access token generated from login call on /user/login
                                param2:
                                    required: true
                                    displayName: data (json)
                                    description: json array example
                              body:
                                application/json:
                                  example: |
                                    {
                                      "merchantId": "345"
                                    }
                              responses:
                                200:
                                  body:
                                    application/json:
                                      example: |
                                        {
                                          "success": 1,
                                          "response": {
                                          "Customer": [
                                          {
                                          "customerId": 2,
                                          "firstName": "vinit",
                                          "lastName": "choudhari",
                                          "phoneNumber": "+918793252893",
                                          "email": "",
                                          "rewardPoints": null,
                                          "creditLimit": "5000.00",
                                          "currentBalance": "3000.00",
                                          "pincode": null,
                                          "address1": "",
                                          "address2": "",
                                          "cityId": null,
                                          "stateId": null,
                                          "countryCode": null
                                          }
                                          ]
                                          }
                                          }
/customer/add(deprecated):
                            description: This api will add new customer in customer table
                            post:
                              description: This api will add new customer in customer table
                              queryParameters:
                                param1:
                                  required: true
                                  displayName: Token
                                  description: Access token generated from login call on /user/login
                                param2:
                                  required: true
                                  displayName: data (json)
                                  description: json  example phoneNumber , firstName & lastName required Key
                                  type:
                              body:
                                application/json:
                                  example: |
                                   {
                                      "phoneNumber": "+918793252893",
                                      "firstName": "vinit",
                                      "lastName": "choudhari",
                                      "email": "choudhari@gmail.com",
                                      "address1": "some address line 1",
                                      "address2": "some address line 2",
                                      "pincode": 87534756,
                                      "cityId": 23,
                                      "stateId": 434,
                                      "countryCode": "IN",
                                      "dob": "dateofbirth"
                                    }
                              responses:
                                200:
                                  body:
                                    application/json:
                                      example: |
                                        {
                                          "success": 1,
                                          "response": {
                                            "Customer": {
                                              "customerId": 2,
                                              "firstName": "vinit",
                                              "lastName": "choudhari",
                                              "email": "",
                                              "phoneNumber": "+918793252893",
                                              "password_hash": null,
                                              "otp": "",
                                              "dob": null,
                                              "address1": "some address line 1",
                                              "address2": "some address line 2",
                                              "pincode": 87534756,
                                              "cityId": 23,
                                              "stateId": 434,
                                              "countryCode": "IN",
                                              "created_at": 1479541253,
                                              "updated_at": 1479541254,
                                              "createdUserId": 455,
                                              "updatedUserId": 455,
                                              "status": 1
                                            }
                                          }
                                        }
/customer/delete(deprecated):
                            description: This api will delete customer from merchant customer list
                            delete:
                              description: This api will delete customer from merchant customer list
                              queryParameters:
                                param1:
                                  required: true
                                  displayName: Token
                                  description: Access token generated from login call on /user/login
                                param2:
                                  required: true
                                  displayName: data (json)
                                  description: json  example customerId required Key
                                  type:
                              body:
                                application/json:
                                  example: |
                                    {
                                      "customerId": 2
                                    }
                              responses:
                                200:
                                  body:
                                    application/json:
                                      example: |
                                        {
                                          "success": 1,
                                          "response": "Customers deleted successfully."
                                        }
/customer/details(deprecated):
                            description: This api will add new customer details in customerDetail table
                            post:
                              description: This api will add new customer details in customerDetail table
                              queryParameters:
                                param1:
                                  required: true
                                  displayName: Token
                                  description: Access token generated from login call on /user/login
                                param2:
                                  required: true
                                  displayName: data (json)
                                  description: json array example phoneNumber , firstName & lastName required Key
                                  type:
                              body:
                                application/json:
                                  example: |
                                   {
                                      "customerId": 123,
                                      "params": [
                                        {"paramName":"Foo","paramValue":"Bar"},
                                        {"paramName":"Foo","paramValue":"Bar"},
                                        {"paramName":"Foo","paramValue":"Bar"},
                                        {"paramName":"Foo","paramValue":"Bar"}
                                      ]
                                   }
                              responses:
                                200:
                                  body:
                                    application/json:
                                      example: |
                                        {
                                          "success": 1,
                                          "message": "parameters are store successfully."
                                        }
                            put:
                              description: This api will edit a customer details in customerDetail table
                              queryParameters:
                                param1:
                                  required: true
                                  displayName: Token
                                  description: Access token generated from login call on /user/login
                                param2:
                                  required: true
                                  displayName: data (json)
                                  description: json array example phoneNumber , firstName & lastName required Key
                                  type:
                              body:
                                application/json:
                                  example: |
                                    {
                                      "customerId": 123,
                                      "customerDetailId": 54
                                    }
                              responses:
                                200:
                                  body:
                                    application/json:
                                      example: |
                                        {
                                          "success": 1,
                                          "message": "parameters are store successfully.",
                                          "messageDetails": []
                                        }
                            delete:
                              description: This api will delete a customer details in customerDetail table
                              queryParameters:
                                param1:
                                  required: true
                                  displayName: Token
                                  description: Access token generated from login call on /user/login
                                param2:
                                  required: true
                                  displayName: data (json)
                                  description: json array example phoneNumber , firstName & lastName required Key
                                  type:
                              body:
                                application/json:
                                  example: |
                                    {
                                      "customerId": 123,
                                      "customerDetailId": 54
                                    }
                              responses:
                                200:
                                  body:
                                    application/json:
                                      example: |
                                        {
                                          "success": 1,
                                          "response": []
                                        }
/customer:
                            description: This api will add new customer
                            get:
                              description: It fetch list of all customers
                              queryParameters:
                                param1:
                                  required: true
                                  displayName: Token
                                  description: Access token generated from login call on /user/login
                                param2:
                                  required: true
                                  displayName: data (json)
                                  description: json array example phoneNumber , firstName & lastName required Key
                                      <p><b><i>customerId</i></b> - customer's id. <i>Optional</i></p>
                                  type:
                              body:
                                application/json:
                                  example: |
                                    {
                                      "customerId": 12
                                    }
                              responses:
                                200:
                                  body:
                                    application/json:
                                      example: |
                                        {
                                          "success": 1,
                                          "response": {
                                            "Customer": [
                                              {
                                                "firstName": "Satish1",
                                                "lastName": "Charmal1",
                                                "email": "sat**************@gmail.com",
                                                "phoneNumber": "98****5971",
                                                "address1": "",
                                                "address2": "",
                                                "cityId": 0,
                                                "stateId": 0,
                                                "countryCode": 0,
                                                "pincode": 0,
                                                "status": 0
                                              },
                                              {
                                                "firstName": "Satish2",
                                                "lastName": "Charmal2",
                                                "email": "satishcharmal1432@gmail.com",
                                                "phoneNumber": "9867585972",
                                                "address1": "Padhegaon",
                                                "address2": "Kopargaon",
                                                "cityId": null,
                                                "stateId": null,
                                                "countryCode": null,
                                                "pincode": null,
                                                "status": 1
                                              },
                                              {
                                                "firstName": "Satish3",
                                                "lastName": "Charmal3",
                                                "email": "satishcharmal1433@gmail.com",
                                                "phoneNumber": "9867585973",
                                                "address1": "Padhegaon",
                                                "address2": "Kopargaon",
                                                "cityId": null,
                                                "stateId": null,
                                                "countryCode": null,
                                                "pincode": null,
                                                "status": 1
                                              },
                                              {
                                                "firstName": "Satish4",
                                                "lastName": "Charmal4",
                                                "email": "sat**************@gmail.com",
                                                "phoneNumber": "98****5974",
                                                "address1": "",
                                                "address2": "",
                                                "cityId": 0,
                                                "stateId": 0,
                                                "countryCode": 0,
                                                "pincode": 0,
                                                "status": 0
                                              },
                                              {
                                                "firstName": "Satish5",
                                                "lastName": "Charmal5",
                                                "email": "satishcharmal1435@gmail.com",
                                                "phoneNumber": "9867585975",
                                                "address1": "Padhegaon",
                                                "address2": "Kopargaon",
                                                "cityId": null,
                                                "stateId": null,
                                                "countryCode": null,
                                                "pincode": null,
                                                "status": 1
                                              }
                                            ]
                                          }
                                        }
                            put:
                              description: This api will edit a customer details in customerDetail table
                              queryParameters:
                                param1:
                                  required: true
                                  displayName: Token
                                  description: Access token generated from login call on /user/login
                                param2:
                                  required: true
                                  displayName: data (json)
                                  description: json array example phoneNumber , firstName & lastName required Key
                                      <p><b><i>customerId</i></b> - customer's unique id.</p>
                                      <p><b><i>phoneNumber</i></b> - customer's phone number.</p>
                                      <p><b><i>email</i></b> - customer's email address.</p>
                                      <p><b><i>customerHandler</i></b> - customer's handler. <b>optional</b></p>
                                      <p><b><i>firstName</i></b> - customer's first name.</p>
                                      <p><b><i>lastName</i></b> - customer's lasy name.</p>
                                      <p><b><i>address1</i></b> - customer's address line 1.<b>optional</b></p>
                                      <p><b><i>address2</i></b> - customer's address line 2.<b>optional</b></p>
                                      <p><b><i>pincode</i></b> - customer's pincode.<b>optional</b></p>
                                      <p><b><i>cityId</i></b> - city id.<b>optional</b></p>
                                      <p><b><i>stateId</i></b> - sate id.<b>optional</b></p>
                                      <p><b><i>countryCode</i></b> - 2 char country code.<b>optional</b></p>
                                      <p><b><i>dob</i></b> - date of birth in format of Y-m-d.<b>optional</b></p>
                                      <p><b><i>customerDetails</i></b> - an array of arrays of paramName/paramValue.<b>optional</b></p>
                                      <p><b><i>linkCustomer</i></b> - boolean value to link customer with merchant imidiatly or you want to do it later. default is true</p>
                                  type:
                              body:
                                application/json:
                                  example: |
                                   {
                                      "phoneNumber": "+918793252893",
                                      "firstName": "vinit",
                                      "lastName": "choudhari",
                                      "email": "choudhari@gmail.com",
                                      "address1": "some address line 1",
                                      "address2": "some address line 2",
                                      "pincode": "87534756",
                                      "cityId": 23,
                                      "stateId": 434,
                                      "countryCode": "IN",
                                      "dob": "1985-10-20",
                                      "linkCustomer": false,
                                      "customerDetails": [
                                          {
                                              "paramName": "Foo1",
                                              "paramValue": "Bar"
                                          },
                                          {
                                              "paramName": "Foo2",
                                              "paramValue": "Bar"
                                          },
                                          {
                                              "paramName": "Foo3",
                                              "paramValue": "Bar"
                                          },
                                          {
                                              "paramName": "Foo4",
                                              "paramValue": "Bar"
                                          }
                                      ]
                                    }
                              responses:
                                200:
                                  body:
                                    application/json:
                                      example: |
                                        {
                                          "success": 1,
                                          "response": {
                                              "customerId": 30809,
                                              "firstName": "vinit",
                                              "lastName": "choudhari",
                                              "email": "choudhari@gmail.com",
                                              "phoneNumber": "+918793252893",
                                              "password_hash": null,
                                              "otp": "cde129a5d0a08298cd3ae8077e530b89",
                                              "dob": "1985-10-20",
                                              "address1": "some address line 1",
                                              "address2": "some address line 2",
                                              "created_at": 1486620850,
                                              "updated_at": 1486620904,
                                              "createdUserId": 459,
                                              "updatedUserId": 459,
                                              "status": 1,
                                              "cityId": 23,
                                              "stateId": 434,
                                              "pincode": "87534756",
                                              "countryCode": "IN",
                                              "customerDetails": [
                                                  {
                                                      "customerDetailId": 85,
                                                      "customerId": 30809,
                                                      "paramName": "Foo1",
                                                      "paramValue": "Bar",
                                                      "sourceId": 7,
                                                      "status": 1,
                                                      "created_at": 1486620850,
                                                      "updated_at": 1486620850,
                                                      "createdUserId": 459,
                                                      "updatedUserId": 459,
                                                      "merchantId": 466
                                                  },
                                                  {
                                                      "customerDetailId": 86,
                                                      "customerId": 30809,
                                                      "paramName": "Foo2",
                                                      "paramValue": "Bar",
                                                      "sourceId": 7,
                                                      "status": 1,
                                                      "created_at": 1486620850,
                                                      "updated_at": 1486620850,
                                                      "createdUserId": 459,
                                                      "updatedUserId": 459,
                                                      "merchantId": 466
                                                  },
                                                  {
                                                      "customerDetailId": 87,
                                                      "customerId": 30809,
                                                      "paramName": "Foo3",
                                                      "paramValue": "Bar",
                                                      "sourceId": 7,
                                                      "status": 1,
                                                      "created_at": 1486620850,
                                                      "updated_at": 1486620850,
                                                      "createdUserId": 459,
                                                      "updatedUserId": 459,
                                                      "merchantId": 466
                                                  },
                                                  {
                                                      "customerDetailId": 88,
                                                      "customerId": 30809,
                                                      "paramName": "Foo4",
                                                      "paramValue": "Bar",
                                                      "sourceId": 7,
                                                      "status": 1,
                                                      "created_at": 1486620850,
                                                      "updated_at": 1486620850,
                                                      "createdUserId": 459,
                                                      "updatedUserId": 459,
                                                      "merchantId": 466
                                                  }
                                              ],
                                              "customerPoint": {
                                                  "customerPointsId": 121,
                                                  "customerId": 30809,
                                                  "merchantId": 466,
                                                  "rewardPoints": null,
                                                  "pointsExpiry": 0,
                                                  "created_at": 1486620850,
                                                  "updated_at": 1486620850,
                                                  "createdUserId": 459,
                                                  "updatedUserId": 459,
                                                  "status": 1,
                                                  "creditLimit": "0.00",
                                                  "currentBalance": "0.00",
                                                  "customerHandler": ""
                                              }
                                          }
                                        }
                            delete:
                              description: This api will delete customer from merchant customer list
                              queryParameters:
                                param1:
                                  required: true
                                  displayName: Token
                                  description: Access token generated from login call on /user/login
                                param2:
                                  required: true
                                  displayName: data (json)
                                  description: json  example customerId required Key
                                      <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                                      <p><b><i>customerId</i></b> - this id is used for deleting customer or its details only</p>
                                      <p><b><i>customerDetails</i></b> - if you set this parameter we do not remove customer itself we just remove customer details this parameter is an array of [paramName:"someName",paramValue:"someValue"]. <u>Optional</u></p>
                                  type:
                              body:
                                application/json:
                                  example: |
                                    {
                                      "customerId": 2
                                    }
                              responses:
                                200:
                                  body:
                                    application/json:
                                      example: |
                                        {
                                          "success": 1,
                                          "response": "Customers deleted successfully."
                                        }
/customer/search:
                            description: It fetch list of all customers
                            get:
                              description: It fetch list of all customers
                              queryParameters:
                                param1:
                                  required: true
                                  displayName: Token
                                  description: Access token generated from login call on /user/login
                                param2:
                                  required: true
                                  displayName: data (json)
                                  description: json array example
                                  type:
                              body:
                                application/json:
                                  example: |
                                    {
                                      "name": "satish"
                                    }
                              responses:
                                200:
                                  body:
                                    application/json:
                                      example: |
                                        {
                                          "success": 1,
                                          "response": {
                                            "Customer": [
                                              {
                                                "firstName": "Satish1",
                                                "lastName": "Charmal1",
                                                "email": "sat**************@gmail.com",
                                                "phoneNumber": "98****5971",
                                                "address1": "",
                                                "address2": "",
                                                "cityId": 0,
                                                "stateId": 0,
                                                "countryCode": 0,
                                                "pincode": 0,
                                                "status": 0
                                              },
                                              {
                                                "firstName": "Satish2",
                                                "lastName": "Charmal2",
                                                "email": "satishcharmal1432@gmail.com",
                                                "phoneNumber": "9867585972",
                                                "address1": "Padhegaon",
                                                "address2": "Kopargaon",
                                                "cityId": null,
                                                "stateId": null,
                                                "countryCode": null,
                                                "pincode": null,
                                                "status": 1
                                              },
                                              {
                                                "firstName": "Satish3",
                                                "lastName": "Charmal3",
                                                "email": "satishcharmal1433@gmail.com",
                                                "phoneNumber": "9867585973",
                                                "address1": "Padhegaon",
                                                "address2": "Kopargaon",
                                                "cityId": null,
                                                "stateId": null,
                                                "countryCode": null,
                                                "pincode": null,
                                                "status": 1
                                              },
                                              {
                                                "firstName": "Satish4",
                                                "lastName": "Charmal4",
                                                "email": "sat**************@gmail.com",
                                                "phoneNumber": "98****5974",
                                                "address1": "",
                                                "address2": "",
                                                "cityId": 0,
                                                "stateId": 0,
                                                "countryCode": 0,
                                                "pincode": 0,
                                                "status": 0
                                              },
                                              {
                                                "firstName": "Satish5",
                                                "lastName": "Charmal5",
                                                "email": "satishcharmal1435@gmail.com",
                                                "phoneNumber": "9867585975",
                                                "address1": "Padhegaon",
                                                "address2": "Kopargaon",
                                                "cityId": null,
                                                "stateId": null,
                                                "countryCode": null,
                                                "pincode": null,
                                                "status": 1
                                              }
                                            ]
                                          }
                                        }
/customer/validate:
                            description: This api will validate customer OTP and link that customer to merchant
                            post:
                              description: This api will validate customer OTP and link that customer to merchant account
                              queryParameters:
                                param1:
                                  required: true
                                  displayName: Token
                                  description: Access token generated from login call on /user/login
                                param2:
                                  required: true
                                  displayName: data (json)
                                  description: json array example customerId & otp required Key
                                  type:
                              body:
                                application/json:
                                  example: |
                                    {
                                      "customerId": 2,
                                      "otp": 416883
                                    }
                              responses:
                                200:
                                  body:
                                    application/json:
                                      example: |
                                        {
                                          "success": 1,
                                          "response": {
                                            "Customer": {
                                              "customerId": 2,
                                              "firstName": "vinit",
                                              "lastName": "choudhari",
                                              "email": "",
                                              "phoneNumber": "+918793252893",
                                              "password_hash": null,
                                              "otp": "",
                                              "dob": null,
                                              "address1": "some address line 1",
                                              "address2": "some address line 2",
                                              "pincode": 87534756,
                                              "cityId": 23,
                                              "stateId": 434,
                                              "countryCode": "IN",
                                              "created_at": 1479541253,
                                              "updated_at": 1479541254,
                                              "createdUserId": 455,
                                              "updatedUserId": 455,
                                              "status": 1
                                            }
                                          }
                                        }
/masterdata/plans:
                                          description: Plan endpoit provide you whole the functionality you need to creat differnet plans.
                                          get:
                                            description: To fetch a specific plan or a list of plans you can use this endpoint. all the parameters are optional by setting <b>planId</b> the other parameters will be ignored. results are always an array of plan object(s) even if you send your request with <b>planId</b>. to fetch a list of plans you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible plans will returned.
                                            securedBy: [customSecurityScheme]
                                            queryParameters:
                                              param1:
                                                  required: true
                                                  type: string
                                                  displayName: Token
                                                  description: This <i>Token</i> is generated by login call and is working for one houre.
                                              param2:
                                                  required: false
                                                  type: string
                                                  displayName: requestParams
                                                  description: Below keys are accepted [Json String]
                                                    <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                                                    <p><b><i>planId</i></b> - planId for specific plan. <u>Optional</u></p>
                                                    <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a product update. <u>Optional</u></p>
                                                    <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
                                                    <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "planId": 1,
                                                  },
                                                  |
                                                  {
                                                    "updated_at": 1467177000,
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": [
                                                          {
                                                            "planId": 1,
                                                            "planName": "Free",
                                                            "planDescription": "Access to some resticted features and functionality.",
                                                            "planPrice": "0.00",
                                                            "planSetupFee": "0.00",
                                                            "planDuration": 1,
                                                            "planDurationPeriod": "Month",
                                                            "updated_at": 1467454842,
                                                            "features": [
                                                              {
                                                                "featureId": 1,
                                                                "featureName": "NumberOfProducts",
                                                                "featureType": "Integer",
                                                                "featureValue": "100",
                                                                "updated_at": 0
                                                              },
                                                              {
                                                                "featureId": 2,
                                                                "featureName": "NumberOfMarketplace",
                                                                "featureType": "Integer",
                                                                "featureValue": "1",
                                                                "updated_at": 0
                                                              }
                                                            ]
                                                          }
                                                        ]
                                                      }
                                                      |
                                                       {
                                                          "success": 1,
                                                          "response": [
                                                            {
                                                              "planId": 1,
                                                              "planName": "Free",
                                                              "planDescription": "Access to some resticted features and functionality.",
                                                              "planPrice": "0.00",
                                                              "planSetupFee": "0.00",
                                                              "planDuration": 1,
                                                              "planDurationPeriod": "Month",
                                                              "updated_at": 1467454842,
                                                              "features": [
                                                                {
                                                                  "featureId": 1,
                                                                  "featureName": "NumberOfProducts",
                                                                  "featureType": "Integer",
                                                                  "featureValue": "100",
                                                                  "updated_at": 0
                                                                },
                                                                {
                                                                  "featureId": 2,
                                                                  "featureName": "NumberOfMarketplace",
                                                                  "featureType": "Integer",
                                                                  "featureValue": "1",
                                                                  "updated_at": 0
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "planId": 2,
                                                              "planName": "Shuruwat",
                                                              "planDescription": null,
                                                              "planPrice": "30.00",
                                                              "planSetupFee": "0.00",
                                                              "planDuration": 1,
                                                              "planDurationPeriod": "Month",
                                                              "updated_at": 1467454842,
                                                              "features": [
                                                                {
                                                                  "featureId": 1,
                                                                  "featureName": "NumberOfProducts",
                                                                  "featureType": "Integer",
                                                                  "featureValue": "200",
                                                                  "updated_at": 0
                                                                },
                                                                {
                                                                  "featureId": 2,
                                                                  "featureName": "NumberOfMarketplace",
                                                                  "featureType": "Integer",
                                                                  "featureValue": "1",
                                                                  "updated_at": 0
                                                                }
                                                              ]
                                                            },
                                                            {
                                                              "planId": 3,
                                                              "planName": "Nirmaan",
                                                              "planDescription": null,
                                                              "planPrice": "40.00",
                                                              "planSetupFee": "0.00",
                                                              "planDuration": 1,
                                                              "planDurationPeriod": "Month",
                                                              "updated_at": 1467454842
                                                            },
                                                            {
                                                              "planId": 4,
                                                              "planName": "Vistaar",
                                                              "planDescription": null,
                                                              "planPrice": "50.00",
                                                              "planSetupFee": "0.00",
                                                              "planDuration": 1,
                                                              "planDurationPeriod": "Month",
                                                              "updated_at": 1467454842
                                                            },
                                                            {
                                                              "planId": 5,
                                                              "planName": "Gold Plan",
                                                              "planDescription": "Full access to all features and functionality.",
                                                              "planPrice": "120.55",
                                                              "planSetupFee": "0.00",
                                                              "planDuration": 1,
                                                              "planDurationPeriod": "Month",
                                                              "updated_at": 1468818382,
                                                              "features": [
                                                                {
                                                                  "featureId": 1,
                                                                  "featureName": "NumberOfProducts",
                                                                  "featureType": "Integer",
                                                                  "featureValue": "300",
                                                                  "updated_at": 1468820101
                                                                },
                                                                {
                                                                  "featureId": 2,
                                                                  "featureName": "NumberOfMarketplace",
                                                                  "featureType": "Integer",
                                                                  "featureValue": "5",
                                                                  "updated_at": 1468820111
                                                                }
                                                              ]
                                                            }
                                                          ]
                                                        }
                                          post:
                                            description: To creat a new plan
                                            queryParameters:
                                              param1:
                                                type: string
                                                required: true
                                                displayName: Token
                                                description: Token generated by login call
                                              param2:
                                                required: true
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                                                  <p><b>planName</b> - String of plan name.</p>
                                                  <p><b><i>planDescription</i></b> - String a short description about plan. <u>Optional</u></p>
                                                  <p><b>planPrice</b> - plan price.</p>
                                                  <p><b>planSetupFee</b> - plan setup fee.</p>
                                                  <p><b>planDuration</b> - plan duration is an integer.</p>
                                                  <p><b>planDurationPeriod</b> - plan duration value is one of the <i>Day</i>, <i>Month</i> and <i>Year</i> periods.</p>
                                            securedBy: [customSecurityScheme]
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "planName": "Gold",
                                                    "planDescription": "Full access to all features and functionality.",
                                                    "planPrice": 100.00,
                                                    "planSetupFee": 1000.00,
                                                    "planDuration": 1,
                                                    "planDurationPeriod": "Month"
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": {
                                                          "planId": 5,
                                                          "planName": "Gold Plan",
                                                          "planDescription": "Full access to all features and functionality.",
                                                          "planPrice": "100.00",
                                                          "planSetupFee": "1000.00",
                                                          "planDuration": 1,
                                                          "planDurationPeriod": "Month",
                                                          "updated_at": 1468818382,
                                                        }
                                                      }
                                          put:
                                            description: To update a plan
                                            queryParameters:
                                              param1:
                                                required: true
                                                type: string
                                                displayName: Token
                                                description: Token generated by login call
                                              param2:
                                                required: true
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b>IMEI</b> - generated imei value of the client</p>
                                                  <p><b>planId</b> - integer of plan id.</p>
                                                  <p><b><i>planName</i></b> - String of plan name.</p>
                                                  <p><b><i>planDescription</i></b> - String a short description about plan. <u>Optional</u></p>
                                                  <p><b><i>planPrice</i></b> - plan price.</p>
                                                  <p><b><i>planSetupFee</i></b> - plan setup fee.</p>
                                                  <p><b><i>planDuration</i></b> - plan duration is an integer.</p>
                                                  <p><b><i>planDurationPeriod</i></b> - plan duration value is one of the <i>Day</i>, <i>Month</i> and <i>Year</i> periods.</p>
                                            securedBy: [customSecurityScheme]
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "planId": 5,
                                                    "planPrice": 120.55
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": {
                                                          "planId": 5,
                                                          "planName": "Gold Plan",
                                                          "planDescription": "Full access to all features and functionality.",
                                                          "planPrice": "120.55",
                                                          "planSetupFee": "1000.00",
                                                          "planDuration": 1,
                                                          "planDurationPeriod": "Month",
                                                          "updated_at": 1468818382,
                                                          "features": [
                                                            {
                                                              "featureId": 1,
                                                              "featureName": "NumberOfProducts",
                                                              "featureType": "Integer",
                                                              "featureValue": "300",
                                                              "updated_at": 1468820101
                                                            },
                                                            {
                                                              "featureId": 2,
                                                              "featureName": "NumberOfMarketplace",
                                                              "featureType": "Integer",
                                                              "featureValue": "5",
                                                              "updated_at": 1468820111
                                                            }
                                                          ]
                                                        }
                                                      }
                                          delete:
                                            description: To delete a plan
                                            queryParameters:
                                              param1:
                                                type: string
                                                required: true
                                                displayName: Token
                                                description: Token generated by login call
                                              param2:
                                                required: true
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b>IMEI</b> - generated imei value of the client</p>
                                                  <p><b>planId</b> - String of plan id.</p>
                                            securedBy: [customSecurityScheme]
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "planId": 12
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": []
                                                      }
/masterdata/features:
                                          get:
                                            description: To fetch a specific feature or a list of features you can use this endpoint. all the parameters are optional by setting <b>featureId</b> the other parameters will be ignored. results are always an array of feature object(s) even if you send your request with <b>featureId</b>. to fetch a list of features you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible features will returned.
                                            securedBy: [customSecurityScheme]
                                            queryParameters:
                                              param1:
                                                  required: true
                                                  type: string
                                                  displayName: Token
                                                  description: This <i>Token</i> is generated by login call and is working for one houre.
                                              param2:
                                                  required: false
                                                  type: string
                                                  displayName: requestParams
                                                  description: Below keys are accepted [Json String]
                                                    <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                                                    <p><b><i>featureId</i></b> - featureId for specific plan. <u>Optional</u></p>
                                                    <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a product update. <u>Optional</u></p>
                                                    <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
                                                    <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "featureId": 45,
                                                  }
                                                  |
                                                  {
                                                    "updated_at": 1468062355,
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": [
                                                          {
                                                            "featureId": 1,
                                                            "featureName": "NumberOfProducts",
                                                            "updated_at": 1468062355
                                                          },
                                                          {
                                                            "featureId": 2,
                                                            "featureName": "NumberOfMarketplace",
                                                            "updated_at": 1468062355
                                                          }
                                                        ]
                                                      }
                                          post:
                                            description: To creat a new feature
                                            queryParameters:
                                              param1:
                                                type: string
                                                required: true
                                                displayName: Token
                                                description: Token generated by login call
                                              param2:
                                                required: true
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                                                  <p><b>featureName</b> - String of feature name.</p>
                                            securedBy: [customSecurityScheme]
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "featureName":"Number of Products"
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": {
                                                          "featureName": "Operators",
                                                          "createdUserId": 463,
                                                          "updatedUserId": 463,
                                                          "created_at": 1468818774,
                                                          "updated_at": 1468818774,
                                                          "featureId": 3
                                                        }
                                                      }
                                          put:
                                            description: To update a product
                                            queryParameters:
                                              param1:
                                                required: true
                                                type: string
                                                displayName: Token
                                                description: Token generated by login call
                                              param2:
                                                required: true
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b>IMEI</b> - generated imei value of the client</p>
                                                  <p><b>featureId</b> - Integer of feature id.</p>
                                                  <p><b>featureName</b> - String a feature name.</p>
                                            securedBy: [customSecurityScheme]
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "featureId": 3,
                                                    "featureName":"DefineOperators"
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": {
                                                          "featureId": 3,
                                                          "featureName": "DefineOperators",
                                                          "createdUserId": 463,
                                                          "updatedUserId": 463,
                                                          "created_at": 1468818774,
                                                          "updated_at": 1468818948
                                                        }
                                                      }
                                          delete:
                                            description: To delete a product
                                            queryParameters:
                                              param1:
                                                type: string
                                                required: true
                                                displayName: Token
                                                description: Token generated by login call
                                              param2:
                                                required: true
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b>IMEI</b> - generated imei value of the client</p>
                                                  <p><b>featureId</b> - Integer of feature id.</p>
                                            securedBy: [customSecurityScheme]
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "featureId": 3
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": []
                                                      }
/masterdata/plans/features:
                                          post:
                                            description: To assign a feature to a plan
                                            queryParameters:
                                              param1:
                                                type: string
                                                required: true
                                                displayName: Token
                                                description: Token generated by login call
                                              param2:
                                                required: true
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                                                  <p><b>planId</b> - Integer of plan id.</p>
                                                  <p><b>featureId</b> - Integer of feature id.</p>
                                                  <p><b>featureValue</b> - corresponding value of the feature for the plan.</p>
                                            securedBy: [customSecurityScheme]
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "planId": 1,
                                                    "featureId": 1,
                                                    "featureValue": 100
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": {
                                                          "planId": 5,
                                                          "planName": "Gold Plan",
                                                          "planDescription": "Full access to all features and functionality.",
                                                          "planPrice": "120.55",
                                                          "features": [
                                                            {
                                                              "featureId": 1,
                                                              "featureName": "NumberOfProducts",
                                                              "featureValue": "300"
                                                            },
                                                            {
                                                              "featureId": 2,
                                                              "featureName": "NumberOfMarketplace",
                                                              "featureValue": "5"
                                                            },
                                                            {
                                                              "featureId": 3,
                                                              "featureName": "DefineOperators",
                                                              "featureValue": "true"
                                                            }
                                                          ]
                                                        }
                                                      }
                                          delete:
                                            description: To remove a feature from a plan
                                            queryParameters:
                                              param1:
                                                type: string
                                                required: true
                                                displayName: Token
                                                description: Token generated by login call
                                              param2:
                                                required: true
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b>IMEI</b> - generated imei value of the client. <u>Optional</u></p>
                                                  <p><b>planId</b> - Integer of plan id.</p>
                                                  <p><b>featureId</b> - Integer of feature id.</p>
                                            securedBy: [customSecurityScheme]
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "planId": 1,
                                                    "featureId": 1
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": {
                                                          "planId": 5,
                                                          "planName": "Gold Plan",
                                                          "planDescription": "Full access to all features and functionality.",
                                                          "planPrice": "120.55",
                                                          "features": [
                                                            {
                                                              "featureId": 2,
                                                              "featureName": "NumberOfMarketplace",
                                                              "featureValue": "5"
                                                            },
                                                            {
                                                              "featureId": 3,
                                                              "featureName": "DefineOperators",
                                                              "featureValue": "true"
                                                            }
                                                          ]
                                                        }
                                                      }
/masterdata/addon:
                                          get:
                                            description: To fetch a specific addon or a list of addons you can use this endpoint. all the parameters are optional by setting <b>addonId</b> the other parameters will be ignored. results are always an array of addon object(s) even if you send your request with <b>addonId</b>. to fetch a list of addons you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible addons will returned.
                                            securedBy: [customSecurityScheme]
                                            queryParameters:
                                              param1:
                                                  required: true
                                                  type: string
                                                  displayName: Token
                                                  description: This <i>Token</i> is generated by login call and is working for one houre.
                                              param2:
                                                  required: false
                                                  type: string
                                                  displayName: requestParams
                                                  description: Below keys are accepted [Json String]
                                                    <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                                                    <p><b><i>addonId</i></b> - addonId for specific addon. <u>Optional</u></p>
                                                    <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a product update. <u>Optional</u></p>
                                                    <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
                                                    <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "addonId": 45,
                                                  }
                                                  |
                                                  {
                                                    "updated_at": 1468062355,
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": [
                                                          {
                                                            "addonId": 1,
                                                            "addonName": "Barcode Reader",
                                                            "updated_at": 1468907815
                                                          },
                                                          {
                                                            "addonId": 2,
                                                            "addonName": "Printer",
                                                            "updated_at": 1468907961
                                                          },
                                                          {
                                                            "addonId": 3,
                                                            "addonName": "POS",
                                                            "updated_at": 1468907973
                                                          }
                                                        ]
                                                      }
                                          post:
                                            description: To creat a new addon
                                            queryParameters:
                                              param1:
                                                type: string
                                                required: true
                                                displayName: Token
                                                description: Token generated by login call
                                              param2:
                                                required: true
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                                                  <p><b>addonName</b> - String of addon name.</p>
                                            securedBy: [customSecurityScheme]
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "addonName":"Barcode Reader"
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": {
                                                          "addonName": "Barcode Reader",
                                                          "createdUserId": 463,
                                                          "updatedUserId": 463,
                                                          "created_at": 1468907815,
                                                          "updated_at": 1468907815,
                                                          "addonId": 1
                                                        }
                                                      }
                                          put:
                                            description: To update an addon
                                            queryParameters:
                                              param1:
                                                required: true
                                                type: string
                                                displayName: Token
                                                description: Token generated by login call
                                              param2:
                                                required: true
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b>IMEI</b> - generated imei value of the client</p>
                                                  <p><b>addonId</b> - Integer of addon id.</p>
                                                  <p><b>addonName</b> - String a addon name.</p>
                                            securedBy: [customSecurityScheme]
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "addonId": 3,
                                                    "addonName":"POS CreaditCard"
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": {
                                                          "addonId": 3,
                                                          "addonName": "POS CreditCard",
                                                          "createdUserId": 463,
                                                          "updatedUserId": 463,
                                                          "created_at": 1468907973,
                                                          "updated_at": 1468908098
                                                        }
                                                      }
                                          delete:
                                            description: To delete an addon
                                            queryParameters:
                                              param1:
                                                type: string
                                                required: true
                                                displayName: Token
                                                description: Token generated by login call
                                              param2:
                                                required: true
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b>IMEI</b> - generated imei value of the client</p>
                                                  <p><b>addonId</b> - Integer of addon id.</p>
                                            securedBy: [customSecurityScheme]
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "addonId": 3
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": []
                                                      }
/masterdata/plans/addons:
                                          post:
                                            description: To assign a feature to a plan
                                            queryParameters:
                                              param1:
                                                type: string
                                                required: true
                                                displayName: Token
                                                description: Token generated by login call
                                              param2:
                                                required: true
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                                                  <p><b>planId</b> - Integer of plan id.</p>
                                                  <p><b>addonId</b> - Integer of addon id.</p>
                                                  <p><b>addonPrice</b> - corresponding price for the addon with this plan.</p>
                                            securedBy: [customSecurityScheme]
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "planId": 1,
                                                    "addonId": 1,
                                                    "addonPrice": 100.00
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": {
                                                          "planId": 5,
                                                          "planName": "Gold Plan",
                                                          "planDescription": "Full access to all features and functionality.",
                                                          "planPrice": "120.55",
                                                          "features": [
                                                            {
                                                              "featureId": 1,
                                                              "featureName": "NumberOfProducts",
                                                              "featureValue": "300"
                                                            },
                                                            {
                                                              "featureId": 2,
                                                              "featureName": "NumberOfMarketplace",
                                                              "featureValue": "5"
                                                            },
                                                            {
                                                              "featureId": 3,
                                                              "featureName": "DefineOperators",
                                                              "featureValue": "true"
                                                            }
                                                          ]
                                                        }
                                                      }
                                          delete:
                                            description: To remove a feature from a plan
                                            queryParameters:
                                              param1:
                                                type: string
                                                required: true
                                                displayName: Token
                                                description: Token generated by login call
                                              param2:
                                                required: true
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b>IMEI</b> - generated imei value of the client. <u>Optional</u></p>
                                                  <p><b>planId</b> - Integer of plan id.</p>
                                                  <p><b>featureId</b> - Integer of feature id.</p>
                                            securedBy: [customSecurityScheme]
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "planId": 1,
                                                    "featureId": 1
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": {
                                                          "planId": 5,
                                                          "planName": "Gold Plan",
                                                          "planDescription": "Full access to all features and functionality.",
                                                          "planPrice": "120.55",
                                                          "features": [
                                                            {
                                                              "featureId": 2,
                                                              "featureName": "NumberOfMarketplace",
                                                              "featureValue": "5"
                                                            },
                                                            {
                                                              "featureId": 3,
                                                              "featureName": "DefineOperators",
                                                              "featureValue": "true"
                                                            }
                                                          ]
                                                        }
                                                      }
/masterdata/industries:
                                          get:
                                            description: for fetching the industry list
                                            queryParameters:
                                               param1:
                                                required: true
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b>IMEI</b> - generated imei value of the client</p>
                                                  <p><b>fromDate</b> - unix timestamp of start date to sync only changed items.</p>
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {"success":1,"response":{"Industry":[{"industryId":"1","industryName":"Beauty and personal care","status":"0"},{"industryId":"2","industryName":"Casual use","status":"0"},{"industryId":"3","industryName":"Charities, Education and membership","status":"0"},{"industryId":"4","industryName":"Food and Drinks","status":"0"},{"industryId":"5","industryName":"Health Care and Fitness","status":"0"},{"industryCategoryId":"331","industryId":"0","industryCategoryName":"industryCategoryName","categoryStatus":"0"}]}}
/masterdata/categories:
                                          get:
                                            description: for fetching the industry list
                                            queryParameters:
                                               param1:
                                                required: true
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b>IMEI</b> - generated imei value of the client</p>
                                                  <p><b>industryId</b> - all industry belong to the .</p>
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": {
                                                        "Industry": [
                                                          {
                                                            "industryId": "11",
                                                            "industryName": "Beauty salon\r\n",
                                                            "industryLevel": "1"
                                                          },
                                                          {
                                                            "industryId": "12",
                                                            "industryName": "Hair salon, barbershop",
                                                            "industryLevel": "1"
                                                          }
                                                        ]
                                                      }
/acquirerbank:
                                          get:
                                            description: for fetching the acquirerbank list
                                            queryParameters:
                                               param1:
                                                required: true
                                                type: string
                                                displayName: AuthKey
                                                description: Authentication key to validate a user.
                                               param2:
                                                required: false
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b>IMEI</b> - generated imei value of the client</p>
                                                  <p><b>acquirerBankId</b> - acquirer bank id an intiger</p>
                                                  <p><b>acquirerBankName</b> - acquirer bank name</p>
                                                  <p><b>limit</b> - default value is 20</p>
                                                  <p><b>offset</b> - defalt value is 0</p>
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": {
                                                          "Acquirerbank": [
                                                            {
                                                              "acquirerBankId": "1",
                                                              "acquirerBankName": "Corporation Bank"
                                                            },
                                                            {
                                                              "acquirerBankId": "2",
                                                              "acquirerBankName": "NICB"
                                                            }
                                                          ]
                                                        }
                                                      }
                                          post:
                                            description: for creating the acquirerbank
                                            queryParameters:
                                               param1:
                                                required: true
                                                type: string
                                                displayName: AuthKey
                                                description: Authentication key to validate a user.
                                               param2:
                                                required: false
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b>IMEI</b> - generated imei value of the client</p>
                                                  <p><b>acquirerBankName</b> - acquirer bank name</p>
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success":1,
                                                        "response":{
                                                          "acquirerBankId":3,
                                                          "acquirerBankName":"Test Name",
                                                          "createdUserId":16,
                                                          "created_at":1465992458,
                                                          "updatedUserId":16,
                                                          "updated_at":1465992696,
                                                          "status":1
                                                        }
                                                      }
                                          put:
                                            description: for creating the acquirerbank
                                            queryParameters:
                                               param1:
                                                required: true
                                                type: string
                                                displayName: AuthKey
                                                description: Authentication key to validate a user.
                                               param2:
                                                required: false
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b>IMEI</b> - generated imei value of the client</p>
                                                  <p><b>acquirerBankId</b> - acquirer bank id an intiger</p>
                                                  <p><b>acquirerBankName</b> - acquirer bank name</p>
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success":1,
                                                        "response":{
                                                          "acquirerBankId":3,
                                                          "acquirerBankName":"Test Name 2",
                                                          "createdUserId":16,
                                                          "created_at":1465992458,
                                                          "updatedUserId":16,
                                                          "updated_at":1465992696,
                                                          "status":1
                                                        }
                                                      }
                                          delete:
                                            description: for creating the acquirerbank
                                            queryParameters:
                                               param1:
                                                required: true
                                                type: string
                                                displayName: AuthKey
                                                description: Authentication key to validate a user.
                                               param2:
                                                required: false
                                                type: string
                                                displayName: requestParams
                                                description: Below keys are accepted [Json String]
                                                  <p><b>IMEI</b> - generated imei value of the client</p>
                                                  <p><b>acquirerBankId</b> - acquirer bank id an intiger</p>
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": {
                                                          "Acquirerbank": [
                                                            {
                                                              "acquirerBankId": "1",
                                                              "acquirerBankName": "Corporation Bank"
                                                            },
                                                            {
                                                              "acquirerBankId": "2",
                                                              "acquirerBankName": "NICB"
                                                            }
                                                          ]
                                                        }
                                                      }
/masterdata/transactiontypes:
                                          post:
                                            description: for fetching the transaction type list
                                            queryParameters:
                                               param1:
                                                required: true
                                                displayName: Token
                                                description: generated token value
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {"success":1,"response":{"TransactionTypes":{"1":{"transactionTypeId":"1","name":"Cash","status":"0"},"2":{"transactionTypeId":"2","name":"Wallet","status":"0"}}}}
/country/index:
                                          post:
                                            description: for fetching the Country list
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": {
                                                          "Countries": [
                                                            {
                                                              "countryId": 1,
                                                              "countryName": "Unit State",
                                                              "countryDialCode": "",
                                                              "countryDomainExtension": "",
                                                              "countryAlpha2Code": "",
                                                              "countryAlpha3Code": "",
                                                              "countryNumericCode": 0,
                                                              "countryISOCode": "",
                                                              "createdUserId": 0,
                                                              "creationDate": 0,
                                                              "updatedUserId": 0,
                                                              "updationDate": 0,
                                                              "status": 0
                                                            }
                                                          ]
                                                        }
                                                      }
/country:
                                          get:
                                            description: for fetching the Country list
                                            queryParameters:
                                              param1:
                                                  required: true
                                                  type: string
                                                  displayName: Token
                                                  description: This <i>Token</i> is generated by login call and is working for one houre.
                                              param3:
                                                  required: false
                                                  type: string
                                                  displayName: requestParams
                                                  description: Below keys are accepted [Json String]
                                                    <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
                                                    <p><b><i>countryAlpha2Code</i></b> - like IN </p>
                                            body:
                                              application/json:
                                                example: |
                                                  {
                                                    "countryAlpha2Code": "IN"
                                                  }
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {
                                                        "success": 1,
                                                        "response": {
                                                          "countryId": 103,
                                                          "countryName": "India",
                                                          "countryDialCode": "91",
                                                          "countryDomainExtension": "",
                                                          "countryAlpha2Code": "IN",
                                                          "countryAlpha3Code": "IND",
                                                          "countryNumericCode": 356,
                                                          "countryISOCode": "",
                                                          "createdUserId": 1,
                                                          "created_at": 0,
                                                          "updatedUserId": 1,
                                                          "updated_at": 0,
                                                          "status": 1,
                                                          "currencies": [
                                                            {
                                                              "countryCurrencyId": 1,
                                                              "countryId": 103,
                                                              "currencyId": 121,
                                                              "countryCurrencyExchangeRate": "0.00",
                                                              "createdUserId": 0,
                                                              "created_at": 0,
                                                              "updatedUserId": 0,
                                                              "updated_at": 0,
                                                              "status": 0,
                                                              "currencyName": "Rupee",
                                                              "currencyCode": "SCR",
                                                              "currencyNumericCode": ""
                                                            },
                                                            {
                                                              "countryCurrencyId": 2,
                                                              "countryId": 103,
                                                              "currencyId": 5,
                                                              "countryCurrencyExchangeRate": "68.73",
                                                              "createdUserId": 0,
                                                              "created_at": 0,
                                                              "updatedUserId": 0,
                                                              "updated_at": 0,
                                                              "status": 0,
                                                              "currencyName": "USD",
                                                              "currencyCode": "USD",
                                                              "currencyNumericCode": ""
                                                            }
                                                          ]
                                                        }
                                                      }
/state/index:
                                          post:
                                            description: for fetching the State list on the basis of country ID.
                                            queryParameters:
                                              param1:
                                                required: true
                                                type: integer
                                                displayName: CountryId
                                                description: Country code for which the states required. Either id or 2-digit ISO country code.
                                              param2:
                                                required: false
                                                type: integer
                                                displayName: Limit
                                                description: To limit the number of records.
                                              param3:
                                                required: false
                                                type: integer
                                                displayName: Offset
                                                description: To define the offset.
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {"success":1,"response":{"States":[{"stateId":1,"countryId":101,"stateCode":"131","stateName":"Uttar Pradesh","createdUserId":1,"created_at":1,"updatedUserId":1,"updated_at":1,"status":1}]}}
/city/index:
                                          post:
                                            description: for fetching the State list on the basis of country ID.
                                            queryParameters:
                                              param1:
                                                required: true
                                                type: integer
                                                displayName: State Id
                                                description: State code for which the cities are required.
                                              param2:
                                                required: false
                                                type: integer
                                                displayName: Limit
                                                description: To limit the number of records.
                                              param3:
                                                required: false
                                                type: integer
                                                displayName: Offset
                                                description: To define the offset.
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {"success":1,"response":{"Cities":[{"cityId":1,"stateId":1,"cityName":"Allahabad","cityCode":"70","createdUserId":1,"created_at":1,"updatedUserId":1,"updated_at":1,"status":1}]}}
/bank:
                                          get:
                                            description: get bank details using IFSC CODE.
                                            queryParameters:
                                              param1:
                                                required: true
                                                type: string
                                                displayName: AuthKey
                                                description: Authentication key to validate a user.
                                              param2:
                                                required: true
                                                type: string
                                                description: json string {"bankIFSC":"ABHY0065073"}
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {"success":1,"response":{"Bank":[{"bankId":383,"bankName":"ABHYUDAYA CO OP BANK LTD","bankLogo":"","bankIFSC":"ABHY0065073","bankMICR":"400065073","bankAddress":"SHOP NO.1, MAYFIAR SYMPHONY SPRING, PARKSITE, GODREJ, HIRANANDANI LINK RD., VIKHROLI WEST, MUMBAI 400079","bankDistrict":"GREATER BOMBAY","bankState":"MAHARASHTRA","status":1}]}}


                                          post:
                                            description: for creating a new bank.
                                            queryParameters:
                                              param1:
                                                required: true
                                                type: string
                                                displayName: Token
                                                description: Authentication key to validate a user.
                                              param2:
                                                required: true
                                                type: integer
                                                displayName: CountryId
                                                description: Country code.
                                              param3:
                                                required: true
                                                type: integer
                                                displayName: State Id
                                                description: Id of the state related to the country.
                                              param4:
                                                required: true
                                                type: integer
                                                displayName: CityId
                                                description: Id of the city related to the state.
                                              param5:
                                                required: true
                                                type: integer
                                                displayName: AreaId
                                                description: Id of the area related to the city.
                                              param6:
                                                required: true
                                                type: string
                                                displayName: BankName
                                                description: Id of the area related to the city.
                                              param7:
                                                required: true
                                                type: integer
                                                displayName: bankLogo
                                                description: Bank's logo url
                                              param8:
                                                required: true
                                                type: integer
                                                displayName: bankIFSC
                                                description: Bank IFSC Data
                                              param9:
                                                required: true
                                                type: string
                                                displayName: bankMICR
                                                description: Bank MICR Data
                                              param10:
                                                required: false
                                                type: string
                                                displayName: bankAddress
                                                description: Bank's Address
                                              param11:
                                                required: true
                                                type: string
                                                displayName: bankState
                                                description: State Name of the bank
                                              param12:
                                                required: false
                                                type: string
                                                displayName: bankDistrict
                                                description: District of the bank.
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {"success":1,"response":{"Bank":[{"bankId":1,"countryId":103,"stateId":1,"cityId":1,"areaId":1,"bankName":"HDFC","bankLogo":"","bankIFSC":"HDFC00001899","bankMICR":"1345165","bankAddress":"Civil Lines","bankDistrict":"Allahabad","bankState":"UttarPradesh","createdUserId":16,"created_at":1457688193,"updatedUserId":16,"updated_at":1457688193,"status":1}]}}
                                          put:
                                            description: for updating bank.
                                            queryParameters:
                                              param1:
                                                required: true
                                                type: string
                                                displayName: Token
                                                description: Authentication key to validate a user.
                                              param2:
                                                required: true
                                                type: integer
                                                displayName: BankId
                                                description: Bank Id to update
                                              param3:
                                                required: true
                                                type: integer
                                                displayName: CountryId
                                                description: Country code.
                                              param4:
                                                required: false
                                                type: integer
                                                displayName: State Id
                                                description: Id of the state related to the country.
                                              param5:
                                                required: false
                                                type: integer
                                                displayName: CityId
                                                description: Id of the city related to the state.
                                              param6:
                                                required: false
                                                type: integer
                                                displayName: areaId
                                                description: Id of the area related to the city.
                                              param7:
                                                required: true
                                                type: string
                                                displayName: BankName
                                                description: Name of the bank
                                              param8:
                                                required: false
                                                type: string
                                                displayName: bankLogo
                                                description: Bank logo url
                                              param9:
                                                required: false
                                                type: string
                                                displayName: bankIFSC
                                                description: Bank IFSC data
                                              param10:
                                                required: false
                                                type: string
                                                displayName: bankMICR
                                                description: Bank MICR data
                                              param11:
                                                required: false
                                                type: string
                                                displayName: bankAddress
                                                description: Bank Address
                                              param12:
                                                required: false
                                                type: string
                                                displayName: bankState
                                                description: State Name of the Bank
                                              param13:
                                                required: false
                                                type: string
                                                displayName: bankDistrict
                                                description: District of the bank.
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {"success":1,"response":{"Bank":[{"bankId":1,"countryId":103,"stateId":1,"cityId":1,"areaId":1,"bankName":"HDFC","bankLogo":"","bankIFSC":"HDFC00001899","bankMICR":"1345165","bankAddress":"Civil Lines","bankDistrict":"Allahabad","bankState":"UttarPradesh","createdUserId":16,"created_at":1457688193,"updatedUserId":16,"updated_at":1457688193,"status":1}]}}
                                          delete:
                                              description: for a particular bank.
                                              queryParameters:
                                                param1:
                                                  required: true
                                                  type: string
                                                  displayName: Token
                                                  description: Authentication key to validate a user.
                                                param2:
                                                  required: true
                                                  type: string
                                                  displayName: BankId
                                                  description: Id of the bank
                                              responses:
                                                200:
                                                  body:
                                                    application/json:
                                                      example: |
                                                        {"success":1,"response":{"Bank":[{"bankId":1,"countryId":103,"stateId":1,"cityId":1,"areaId":1,"bankName":"HDFC","bankLogo":"","bankIFSC":"HDFC00001899","bankMICR":"1345165","bankAddress":"Civil Lines","bankDistrict":"Allahabad","bankState":"UttarPradesh","createdUserId":16,"created_at":1457688193,"updatedUserId":16,"updated_at":1457688193,"status":1}]}}
/currency:
                                          post:
                                            description: currency list call.
/businesstypes:
                                          post:
                                            description: to fetch business types
                                            queryParameters:
                                              param1:
                                                required: false
                                                type: string
                                                displayName: IMEI
                                                description: Imei of the caller
                                            responses:
                                              200:
                                                body:
                                                  application/json:
                                                    example: |
                                                      {"success":1,"response":{"Bank":[{"bankId":1,"countryId":103,"stateId":1,"cityId":1,"areaId":1,"bankName":"HDFC","bankLogo":"","bankIFSC":"HDFC00001899","bankMICR":"1345165","bankAddress":"Civil Lines","bankDistrict":"Allahabad","bankState":"UttarPradesh","createdUserId":16,"created_at":1457688193,"updatedUserId":16,"updated_at":1457688193,"status":1}]}}
/merchant/catalog/products:
  description: Product endpoit provide you whole the functionality you need to fetch catalog information maintained by epaisa.
  get:
    description: To fetch a list of products belong to a category or industry you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible products will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>catalogCategoryId</i></b> - catalogCategoryId fetch all products for specific catalogCategory. <u>Optional</u></p>
            <p><b><i>industryId</i></b> - industryId fetch all products for specific industry. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a product update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "catalogCategoryId": 123,
            "updated_at": 1468062355,
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {

                  }
                ]
              }
/merchant/catalog/service:
  description: Service endpoit provide you whole the functionality you need to fetch catalog information maintained by epaisa.
  get:
    description: To fetch a list of services belong to a category or industry you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible products will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>catalogCategoryId</i></b> - catalogCategoryId fetch all products for specific catalogCategory. <u>Optional</u></p>
            <p><b><i>industryId</i></b> - industryId fetch all products for specific industry. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a product update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "catalogCategoryId": 123,
            "updated_at": 1468062355,
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {

                  }
                ]
              }
/merchant/product:
  description: Product endpoit provide you whole the functionality you need to creat differnet type of products we have exact same endpoint for services too, you can find further information for them in the documentation.
  get:
    description: To fetch a specific product or a list of products you can use this endpoint. all the parameters are optional by setting <b>productId</b> the two other parameters will ignored. results are always an array of product object(s) even if you send your request with <b>productId</b>. to fetch a list of products you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible products will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>productId</i></b> - productId for specific product. <u>Optional</u></p>
            <p><b><i>storeLocationId</i></b> - storeLocationId for specific store. <u>Optional</u></p>
            <p><b><i>category</i></b> - category name for specific category. <u>Optional</u></p>
            <p><b><i>manufacturer</i></b> - manufacturer name for specific manufacturer. <u>Optional</u></p>
            <p><b><i>productName</i></b> - productName for specific product. <u>Optional</u></p>
            <p><b><i>distirbutor</i></b> - distirbutor name for specific distirbutor. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a product update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "productId": "576a98aed97fcecfe867ec4a",
            "updated_at": 1468062355,
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Products": [
                    {
                      "productDisplayName": "iPhone",
                      "storeLocationId": 424,
                      "categories": [
                        "cellphone",
                        "apple"
                      ],
                      "manufacturers": [
                        "APPLE"
                      ],
                      "distributors": [
                        "Ramin"
                      ],
                      "specifications": [
                        "CPU: 2.4G",
                        "Memory: 2G"
                      ],
                      "isAddon": false,
                      "attributes": {
                        "attribute1": {
                          "name": "Color",
                          "values": [
                            "White",
                            "Black",
                            "Silver"
                          ]
                        },
                        "attribute2": {
                          "name": "Storage",
                          "values": [
                            "32G",
                            "64G",
                            "128G"
                          ]
                        },
                        "attribute3": {
                          "name": ""
                        }
                      },
                      "taxes": [
                        {
                          "taxId": "57",
                          "taxDisplayName": "Governments",
                          "taxName": "governments",
                          "taxMode": "%",
                          "taxValue": "10.00",
                          "taxType": "Exclusive",
                          "taxScope": "Global",
                          "status": "1",
                          "taxRuleApplyFor": null
                        },
                        {
                          "taxId": "75",
                          "taxDisplayName": "custom_1",
                          "taxName": "custom_1",
                          "taxMode": "%",
                          "taxValue": "12.00",
                          "taxType": "Inclusive",
                          "taxScope": "Custom",
                          "status": "1",
                          "taxRuleApplyFor": null
                        }
                      ],
                      "merchantId": 472,
                      "updatedUserId": 459,
                      "createdUserId": 459,
                      "storeLocationCaption": "Headquarters",
                      "created_at": 1475914746,
                      "updated_at": 1476166935,
                      "productName": "headquarters_iphone",
                      "productId": "57f8abfad97fce2ce57d3fc2",
                      "storeLocation": "Headquarters",
                      "variants": [
                        {
                          "attribute1": "White",
                          "attribute2": "32G",
                          "sellingPrice": 10000,
                          "discount": "5",
                          "discountType": "%",
                          "inventory": 4988,
                          "threshold": 50,
                          "productId": "57f8abfad97fce2ce57d3fc2",
                          "merchantId": 472,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "created_at": 1475914746,
                          "updated_at": 1476166936,
                          "variantId": "57f8abfad97fce2ce57d3fc3",
                          "name": "White_32G"
                        },
                        {
                          "attribute1": "Black",
                          "attribute2": "32G",
                          "sellingPrice": 50000,
                          "discountType": "%",
                          "inventory": 400,
                          "productId": "57f8abfad97fce2ce57d3fc2",
                          "merchantId": 472,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "created_at": 1475914746,
                          "updated_at": 1476166936,
                          "name": "Black_32G",
                          "variantId": "57f8abfad97fce2ce57d3fc5"
                        },
                        {
                          "attribute1": "Silver",
                          "attribute2": "64G",
                          "sellingPrice": 5000,
                          "discountType": "%",
                          "inventory": 5000,
                          "productId": "57f8abfad97fce2ce57d3fc2",
                          "merchantId": 472,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "created_at": 1475914746,
                          "updated_at": 1476166936,
                          "name": "Silver_64G",
                          "variantId": "57f8abfad97fce2ce57d3fc9"
                        },
                        {
                          "attribute1": "Silver",
                          "attribute2": "128G",
                          "sellingPrice": 7000,
                          "discountType": "%",
                          "inventory": 9,
                          "productId": "57f8abfad97fce2ce57d3fc2",
                          "merchantId": 472,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "created_at": 1476164212,
                          "updated_at": 1476166936,
                          "name": "Silver_128G",
                          "variantId": "57fc7a74d97fce5bbe66a2d0"
                        }
                      ],
                      "parentCategories": [
                        {
                          "productCategoryId": "207",
                          "parentProductCategoryId": null,
                          "productCategoryName": "cellphone",
                          "status": "0",
                          "createdUserId": "459",
                          "updatedUserId": "0",
                          "created_at": "1471849392",
                          "updated_at": "1476095432",
                          "merchantId": "472",
                          "deleted_at": null
                        }
                      ],
                      "childCategories": [
                        {
                          "productCategoryId": "208",
                          "parentProductCategoryId": "207",
                          "productCategoryName": "apple",
                          "status": "0",
                          "createdUserId": "459",
                          "updatedUserId": "0",
                          "created_at": "1471849400",
                          "updated_at": "1476095477",
                          "merchantId": "472",
                          "deleted_at": null
                        }
                      ]
                    }
                  ],
                  "total": 1
                }
              }
  post:
    description: To creat a new product
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
          <p><b>storeLocationId</b> - Integer of a store this product is belong to.</p>
          <p><b>productName</b> - String of product name.</p>
          <p><b>productDescription</b> - String a short description about product.</p>
          <p><b>categories</b> - Array of strings which are category name or integers which are category id.</p>
          <p><b>manufacturers</b> - Array of strings which has vendor name.</p>
          <p><b>taxes</b> - Array of tax id.</p>
          <p><b>attributes</b> - Array of attributes.</p>
          <p><b>variants</b> - Array of name=>value parameters at least one variant with <b>sellingPrice</b>, <b>invantory</b> and <b>sku</b> are mandatory if the merchant set inventory enable in his/her setting, otherwise <b>sellingPrice</b> is the onlny mandatory field. other fields should be filled based on the attributes.</p>
          <p><b><i>files</i></b> - media file. <u>Optional</u></p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "productDisplayName":"iPhone SE",
            "upc":"eadf23ewr42",
            "storeLocationId": 432,
            "productDescription":"iPhone SE, the most powerful 4‑inch phone ever. To create it, we started with a beloved design, then reinvented it from the inside out. The A9 is the same advanced chip used in iPhone 6s. The 12‑megapixel camera captures incredible photos and 4K videos. And Live Photos bring your images to life. The result is an iPhone that looks small. But lives large.",
            "categories":["Electronic","Cellphone", 13, 15],
            "manufacturers":["Apple"],
            "attributes":{
                "attribute1":{
                  "name":"color",
                  "values":["RozeGold","Gold","Black"],
                },
                "attribute2":{
                  "name":"memory",
                  "values":["16G","64G","128G"],
                },
                "attribute3":{
                  "name":"series",
                  "values":["S","SE"],
                }
            },
            "taxes": [
              1, 2
            ],
            "variants": [
              {
                "name": "RozeGold_16G_S",
                "attribute1": "RozeGold",
                "attribute2": "16G",
                "attribute3": "S",
                "sku": "some_sku",
                "inventory": 1500,
                "threshold": 5,
                "sellingPrice": 299.99,
                "buyingPrice": 200.00,
                "mrp": 349.99,
                "discount": 10
              },
              {
                "name": "Gold_64G_S",
                "attribute1": "Gold",
                "attribute2": "64G",
                "attribute3": "S",
                "sku": "some_sku",
                "inventory": 1500,
                "threshold": 5,
                "sellingPrice": 349.99,
                "buyingPrice": 205.00,
                "mrp": 399.99,
                "discount": 10
              },
              {
                "name": "Black_128G_SE",
                "attribute1": "Black",
                "attribute2": "128G",
                "attribute3": "SE",
                "sku": "some_sku",
                "inventory": 1500,
                "threshold": 5,
                "sellingPrice": 329.99,
                "buyingPrice": 222.00,
                "mrp": 349.99,
                "discount": 10
              }
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "productId": "5774fcdad97fce4da4513f31",
                    "productName": "headquarter_iphone_6s",
                    "productDisplayName": "iPhone 6S",
                    "upc":"eadf23ewr42",
                    "storeLocationId": 432,
                    "productDescription": "iPhone SE, the most powerful 4‑inch phone ever. To create it, we started with a beloved design, then reinvented it from the inside out. The A9 is the same advanced chip used in iPhone 6s. The 12‑megapixel camera captures incredible photos and 4K videos. And Live Photos bring your images to life. The result is an iPhone that looks small. But lives large.",
                    "categories": [
                      "Electronic",
                      "Cellphone"
                    ],
                    "manufacturers": [
                      "Apple"
                    ],
                    "attributes":{
                      "attribute1":{
                        "name":"color",
                        "values":["RozeGold","Gold","Black"],
                      },
                      "attribute2":{
                        "name":"memory",
                        "values":["16G","64G","128G"],
                      },
                      "attribute3":{
                        "name":"series",
                        "values":["S","SE"],
                      }
                    },
                    "merchantId": 480,
                    "createdUserId": 463,
                    "updatedUserId": 463,
                    "created_at": 1467284698,
                    "updated_at": 1468062355,
                    "taxes": [
                      {
                        "taxId": "1",
                        "taxName": "some tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "Delivery"
                      },
                      {
                        "taxId": "2",
                        "taxName": "some other tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "For Here"
                      }
                    ],
                    "variants": [
                      {
                        "variantId": "5774fcdad97fce4da4513f32",
                        "attribute1": "RozeGold",
                        "attribute2": "16G",
                        "attribute3": "S",
                        "sku": "some_sku",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 299.99,
                        "buyingPrice": 200,
                        "mrp": 349.99,
                        "discount": 10,
                        "productId": "5774fcdad97fce4da4513f31"
                      },
                      {
                        "variantId": "5774fcdad97fce4da4513f33",
                        "attribute1": "Gold",
                        "attribute2": "64G",
                        "attribute3": "S",
                        "sku": "some_sku",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 349.99,
                        "buyingPrice": 205,
                        "mrp": 399.99,
                        "discount": 10,
                        "productId": "5774fcdad97fce4da4513f31"
                      },
                      {
                        "variantId": "5774fcdad97fce4da4513f34",
                        "attribute1": "Black",
                        "attribute2": "128G",
                        "attribute3": "SE",
                        "sku": "some_sku",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 329.99,
                        "buyingPrice": 222,
                        "mrp": 349.99,
                        "discount": 10,
                        "productId": "5774fcdad97fce4da4513f31"
                      }
                    ]
                  }
                ]
              }
  put:
    description: To update a product
    queryParameters:
      param1:
        required: true
        type: string
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b>IMEI</b> - generated imei value of the client</p>
          <p><b>productName</b> - String of product name.</p>
          <p><b>productDescription</b> - String a short description about product.</p>
          <p><b>categories</b> - Array of strings which has category name.</p>
          <p><b>manufacturers</b> - Array of strings which has vendor name.</p>
          <p><b>attributes</b> - Array of name=>values.</p>
          <p><b>variants</b> - Array of name=>value parameters at least one variant with 'price', 'invantory' and 'sku' are mandatory other fields should be filled based on the attributes.</p>
          <p><b>deletedVariants</b> - Array of deleted variants id.</p>
          <p><b>files</b> - media file.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "productId": "576a98aed97fcecfe867ec4a",
            "storeLocationId": 432,
            "productDisplayName": "iPhone 6S",
            "upc":"eadf23ewr42",
            "productDescription":"iPhone SE, the most powerful 4‑inch phone ever. To create it, we started with a beloved design, then reinvented it from the inside out. The A9 is the same advanced chip used in iPhone 6s. The 12‑megapixel camera captures incredible photos and 4K videos. And Live Photos bring your images to life. The result is an iPhone that looks small. But lives large.",
            "categories":["Electronic","Cellphone"],
            "manufacturers":["Apple"],
            "attributes":{
              "attribute1":{
                "name":"color",
                "values":["RozeGold","Gold","Black"],
              },
              "attribute2":{
                "name":"memory",
                "values":["16G","64G","128G"],
              },
              "attribute3":{
                "name":"series",
                "values":["S","SE"],
              }
            },
            "deletedVariants":["576a98aed97fcecfe867678f", "576a98aed97fcecfe867thmj"],
            "variants": [
              {
                "variantId": "576a98aed97fcecfe867ec4a",
                "attribute1": "RozeGold",
                "attribute2": "16G",
                "attribute3": "S",
                "sku": "some_sku",
                "inventory": 1500,
                "threshold": 5,
                "sellingPrice": 299.99,
                "buyingPrice": 200.00,
                "mrp": 349.99,
                "discount": 10
              },
              {
                "variantId": "576a989jfe7fcecfe867ec4a",
                "attribute1": "Gold",
                "attribute2": "64G",
                "attribute3": "S",
                "sku": "some_sku",
                "inventory": 1500,
                "threshold": 5,
                "sellingPrice": 349.99,
                "buyingPrice": 205.00,
                "mrp": 399.99,
                "discount": 10
              },
              {
                "variantId": "576a98aed97fcecfe8fedfef",
                "attribute1": "Black",
                "attribute2": "128G",
                "attribute3": "SE",
                "sku": "some_sku",
                "inventory": 1500,
                "threshold": 5,
                "sellingPrice": 329.99,
                "buyingPrice": 222.00,
                "mrp": 349.99,
                "discount": 10
              }
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "productId": "576a98aed97fcecfe867ec4a",
                    "productName": "headquarter_iphone_6s",
                    "productDisplayName": "iPhone 6S",
                    "upc":"eadf23ewr42",
                    "storeLocationId": 432,
                    "productDescription": "iPhone SE, the most powerful 4‑inch phone ever. To create it, we started with a beloved design, then reinvented it from the inside out. The A9 is the same advanced chip used in iPhone 6s. The 12‑megapixel camera captures incredible photos and 4K videos. And Live Photos bring your images to life. The result is an iPhone that looks small. But lives large.",
                    "categories": [
                      "Electronic",
                      "Cellphone"
                    ],
                    "manufacturers": [
                      "Apple"
                    ],
                    "attributes":{
                      "attribute1":{
                        "name":"color",
                        "values":["RozeGold","Gold","Black"],
                      },
                      "attribute2":{
                        "name":"memory",
                        "values":["16G","64G","128G"],
                      },
                      "attribute3":{
                        "name":"series",
                        "values":["S","SE"],
                      }
                    },
                    "variants": [
                      {
                        "variantId": "576a98aed97fcecfe867ec4a",
                        "attribute1": "RozeGold",
                        "attribute2": "16G",
                        "attribute3": "S",
                        "sku": "some_sku",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 299.99,
                        "buyingPrice": 200.00,
                        "mrp": 349.99,
                        "discount": 10
                      },
                      {
                        "variantId": "576a989jfe7fcecfe867ec4a",
                        "attribute1": "Gold",
                        "attribute2": "64G",
                        "attribute3": "S",
                        "sku": "some_sku",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 349.99,
                        "buyingPrice": 205.00,
                        "mrp": 399.99,
                        "discount": 10
                      },
                      {
                        "variantId": "576a98aed97fcecfe8fedfef",
                        "attribute1": "Black",
                        "attribute2": "128G",
                        "attribute3": "SE",
                        "sku": "some_sku",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 329.99,
                        "buyingPrice": 222.00,
                        "mrp": 349.99,
                        "discount": 10
                      }
                    ]
                  }
                ]
              }
  delete:
    description: To delete a product
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b>IMEI</b> - generated imei value of the client</p>
          <p><b>productId</b> - String of product id.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "productId": "576a98aed97fcecfe867ec4a"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
/merchant/product/search:
  get:
    description: To fetch product information for autocompleting fields
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b>IMEI</b> - optional. generated imei value of the client</p>
          <p><b>productName</b> - String of product name.</p>
          <p><b>categoryName</b> - String of category name.</p>
          <p><b>upc</b> - String of product upc code.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "productName": "ipho"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/merchant/service:
  description: Service endpoit provide you whole the functionality you need to creat differnet type of services we have exact same endpoint for products too, you can find further information for them in the documentation.
  get:
    description: To fetch a specific service or a list of services you can use this endpoint. all the parameters are optional by setting <b>serviceId</b> the two other parameters will be ignored. results are always an array of service object(s) even if you send your request with <b>serviceId</b>. to fetch a list of products you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible services will be returned.
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: false
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceId</i></b> - serviceId for specific service. <u>Optional</u></p>
            <p><b>storeLocationId</b> - Integer of a store this service is belong to.</p>
            <p><b><i>category</i></b> - Integer of a category or String of a category name.</p>
            <p><b><i>manufacturer</i></b> - Integer of a manufacturer or String of a manufacturer name.</p>
            <p><b><i>distributor</i></b> - Integer of a distributor or String of a distributor name.</p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a service update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "serviceId":"576a98aed97fcecfe867ec4a"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response":[
                  {
                    "serviceId": "576a98aed97fcecfe867ec4a",
                    "serviceName":"Baby Sitter",
                    "storeLocationId": 432,
                    "serviceDescription":"I have 10+ years of experience ages from newborn - 12 years old. I'm available overnight/24 hour+ time span newborn - 12 years old. My husband and I have recently moved to Henderson from San Diego and I am currently available weekdays starting at 5:00 p.m. and free anytime on the weekends. (Overnights are OK). Healthy cooking & light cleaning is available for extra charge. I love kid friendly crafts: painting, baking, gardening, etc.",
                    "categories":["Care"],
                    "attributes":{
                        "periode":["Yearly","Montly"],
                        "number":[1,3,6]
                    },
                    "attributes":{
                      "attribute1":{
                        "name":"periode",
                        "values":["Yearly","Montly"],
                      },
                      "attribute2":{
                        "name":"number",
                        "values":[1,3,6]
                      }
                    },
                    "categories":["Care"],
                    "merchantId": 480,
                    "createdUserId": 463,
                    "updatedUserId": 463,
                    "created_at": 1467284698,
                    "updated_at": 1468062355,
                    "taxes": [
                      {
                        "taxId": "1",
                        "taxName": "some tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "Delivery"
                      },
                      {
                        "taxId": "2",
                        "taxName": "some other tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "For Here"
                      }
                    ],
                    "variants"=>[
                      {
                        "variantId": "5774fcdad97fce4da4513f34",
                        "attribute1": "Yearly",
                        "attribute2": 1,
                        "sellingPrice": 999.99,
                        "discount": 10,
                        "serviceId": "576a98aed97fcecfe867ec4a"
                      },
                      {
                        "variantId": "5774fcdad97fce4da4513f35",
                        "attribute1": "Yearly",
                        "attribute2": 2,
                        "sellingPrice": 1499.99,
                        "discount": 10,
                        "serviceId": "576a98aed97fcecfe867ec4a"
                      },
                      {
                        "variantId": "5774fcdad97fce4da4513f36",
                        "attribute1": "Montly",
                        "attribute2": 1,
                        "sellingPrice": 499.99,
                        "discount": 10,
                        "serviceId": "576a98aed97fcecfe867ec4a"
                      }
                    ]
                  }
                ]
              }
  post:
    description: To creat a new service
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b>IMEI</b> - generated imei value of the client</p>
          <p><b>storeLocationId</b> - Integer of a store this service is belong to.</p>
          <p><b>serviceName</b> - String of service name.</p>
          <p><b>serviceDescription</b> - String a short description about service.</p>
          <p><b>categories</b> - Array of strings which has category name.</p>
          <p><b>variants</b> - Array of name=>value parameters at least one variant with 'price' is mandatory other fields should be filled based on the attributes.</p>
          <p><b>attributes</b> - Array of name=>values. periode and number is mandatory</p>
          <p><b>files</b> - media file.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "storeLocationId": 432,
            "serviceName":"Baby Sitter",
            "serviceDescription":"I have 10+ years of experience ages from newborn - 12 years old. I'm available overnight/24 hour+ time span newborn - 12 years old. My husband and I have recently moved to Henderson from San Diego and I am currently available weekdays starting at 5:00 p.m. and free anytime on the weekends. (Overnights are OK). Healthy cooking & light cleaning is available for extra charge. I love kid friendly crafts: painting, baking, gardening, etc.",
            "categories":["Care"],
            "attributes":{
                "periode":["Yearly","Montly"],
                "number":[1,3,6]
            },
            "categories":["Care"],
            "variants"=>[
              {
                "attribute1": "Yearly",
                "attribute2": 1,
                "sellingPrice": 999.99,
                "discount": 10
              },
              {
                "attribute1": "Yearly",
                "attribute2": 2,
                "sellingPrice": 1499.99,
                "discount": 10
              },
              {
                "attribute1": "Montly",
                "attribute2": 1,
                "sellingPrice": 499.99,
                "discount": 10
              }
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "serviceId": "576a98aed97fcecfe867ec4a",
                    "storeLocationId": 432,
                    "serviceName":"Baby Sitter",
                    "serviceDescription":"I have 10+ years of experience ages from newborn - 12 years old. I'm available overnight/24 hour+ time span newborn - 12 years old. My husband and I have recently moved to Henderson from San Diego and I am currently available weekdays starting at 5:00 p.m. and free anytime on the weekends. (Overnights are OK). Healthy cooking & light cleaning is available for extra charge. I love kid friendly crafts: painting, baking, gardening, etc.",
                    "categories":["Care"],
                    "attributes":{
                        "periode":["Yearly","Montly"],
                        "number":[1,3,6]
                    },
                    "categories":["Care"],
                    "variants"=>[
                      {
                        "variantId": "5774fcdad97fce4da4513f34",
                        "attribute1": "Yearly",
                        "attribute2": 1,
                        "sellingPrice": 999.99,
                        "discount": 10,
                        "serviceId": "576a98aed97fcecfe867ec4a"
                      },
                      {
                        "variantId": "5774fcdad97fce4da4513f35",
                        "attribute1": "Yearly",
                        "attribute2": 2,
                        "sellingPrice": 1499.99,
                        "discount": 10,
                        "serviceId": "576a98aed97fcecfe867ec4a"
                      },
                      {
                        "variantId": "5774fcdad97fce4da4513f36",
                        "attribute1": "Montly",
                        "attribute2": 1,
                        "sellingPrice": 499.99,
                        "discount": 10,
                        "serviceId": "576a98aed97fcecfe867ec4a"
                      }
                    ]
                  }
                ]
              }
  put:
    description: To update a service
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b>IMEI</b> - generated imei value of the client</p>
          <p><b>serviceId</b> - String of service is.</p>
          <p><b>serviceName</b> - String of service name.</p>
          <p><b>serviceDescription</b> - String a short description about service.</p>
          <p><b>categories</b> - Array of strings which has category name.</p>
          <p><b>variants</b> - Array of name=>value parameters at least one variant with 'price' is mandatory other fields should be filled based on the attributes.</p>
          <p><b>attributes</b> - Array of name=>values. periode and number is mandatory</p>
          <p><b>files</b> - media file.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "serviceId": "576a98aed97fcecfe867ec4a",
            "storeLocationId": 432,
            "serviceName":"Baby Sitter",
            "serviceDescription":"I have 10+ years of experience ages from newborn - 12 years old. I'm available overnight/24 hour+ time span newborn - 12 years old. My husband and I have recently moved to Henderson from San Diego and I am currently available weekdays starting at 5:00 p.m. and free anytime on the weekends. (Overnights are OK). Healthy cooking & light cleaning is available for extra charge. I love kid friendly crafts: painting, baking, gardening, etc.",
            "categories":["Care"],
            "attributes":{
                "periode":["Yearly","Montly"],
                "number":[1,3,6]
            },
            "categories":["Care"],
            "variants"=>[
              {
                "variantId": "5774fcdad97fce4da4513f34",
                "attribute1": "Yearly",
                "attribute2": 1,
                "sellingPrice": 999.99,
                "discount": 10,
                "serviceId": "576a98aed97fcecfe867ec4a"
              },
              {
                "variantId": "5774fcdad97fce4da4513f35",
                "attribute1": "Yearly",
                "attribute2": 2,
                "sellingPrice": 1499.99,
                "discount": 10,
                "serviceId": "576a98aed97fcecfe867ec4a"
              },
              {
                "variantId": "5774fcdad97fce4da4513f36",
                "attribute1": "Montly",
                "attribute2": 1,
                "sellingPrice": 499.99,
                "discount": 10,
                "serviceId": "576a98aed97fcecfe867ec4a"
              }
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "serviceId": "576a98aed97fcecfe867ec4a",
                    "productName": "iPhone SE",
                    "productDescription": "iPhone SE, the most powerful 4‑inch phone ever. To create it, we started with a beloved design, then reinvented it from the inside out. The A9 is the same advanced chip used in iPhone 6s. The 12‑megapixel camera captures incredible photos and 4K videos. And Live Photos bring your images to life. The result is an iPhone that looks small. But lives large.",
                    "categories": [
                      "Electronic",
                      "Cellphone"
                    ],
                    "manufacturers": [
                      "Apple"
                    ],
                    "attributes":{
                      "periode":["Yearly","Montly"],
                      "number":[1,3,6]
                    },
                    "variants"=>[
                      {
                        "variantId": "5774fcdad97fce4da4513f34",
                        "attribute1": "Yearly",
                        "attribute2": 1,
                        "sellingPrice": 999.99,
                        "discount": 10,
                        "serviceId": "576a98aed97fcecfe867ec4a"
                      },
                      {
                        "variantId": "5774fcdad97fce4da4513f35",
                        "attribute1": "Yearly",
                        "attribute2": 2,
                        "sellingPrice": 1499.99,
                        "discount": 10,
                        "serviceId": "576a98aed97fcecfe867ec4a"
                      },
                      {
                        "variantId": "5774fcdad97fce4da4513f36",
                        "attribute1": "Montly",
                        "attribute2": 1,
                        "sellingPrice": 499.99,
                        "discount": 10,
                        "serviceId": "576a98aed97fcecfe867ec4a"
                      }
                    ]
                  }
                ]
              }
  delete:
    description: To delete a service
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b>IMEI</b> - generated imei value of the client</p>
          <p><b>serviceId</b> - String of service id.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
            {
              "serviceId": "576a98aed97fcecfe867ec4a"
            }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/merchant/service/search:
  get:
    description: To fetch service information for autocompleting fields
    queryParameters:
      param1:
          type: string
          required: true
          displayName: Token
          description: Token generated by login call
      param2:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b>IMEI</b> - optional. generated imei value of the client</p>
            <p><b>serviceName</b> - String of product name.</p>
            <p><b>categoryName</b> - String of category name.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "categoryName":"Ba"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response":["Baby Sitter", "Barbery"]
              }
/merchant/package:
  description: Package endpoit provide you whole the functionality you need to work with packages, you can find further information for them in the documentation.
  get:
    description: To fetch a specific package or a list of packages you can use this endpoint. all the parameters are optional by setting <b>packageId</b> the two other parameters will ignored. results are always an array of product object(s) even if you send your request with <b>productId</b>. to fetch a list of products you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible products will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>productId</i></b> - productId for specific product. <u>Optional</u></p>
            <p><b><i>storeLocationId</i></b> - storeLocationId for specific store. <u>Optional</u></p>
            <p><b><i>category</i></b> - category name for specific category. <u>Optional</u></p>
            <p><b><i>packageName</i></b> - productName for specific product. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a product update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "packageId": "576a98aed97fcecfe867ec4a",
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Packages": [
                    {
                      "packageDisplayName": "test package",
                      "packageDescription": "asdsadasd",
                      "storeLocationId": 424,
                      "categories": [
                        "cellphone",
                        "iphone"
                      ],
                      "products": [
                        {
                          "productDisplayName": "test3",
                          "storeLocationId": 424,
                          "isAddon": false,
                          "attributes": {
                            "attribute1": {
                              "name": "color",
                              "values": [
                                "red",
                                "blue"
                              ]
                            },
                            "attribute2": {
                              "name": "size",
                              "values": [
                                "x",
                                "xxl"
                              ]
                            },
                            "attribute3": {
                              "name": ""
                            }
                          },
                          "merchantId": 472,
                          "updatedUserId": 459,
                          "createdUserId": 459,
                          "categories": [
                            "Uncategorized"
                          ],
                          "storeLocationCaption": "Headquarters",
                          "created_at": 1474875132,
                          "updated_at": 1474961344,
                          "productName": "headquarters_test3",
                          "taxes": [
                            {
                              "taxId": "41",
                              "taxDisplayName": "VAT",
                              "taxName": "vat",
                              "taxMode": "%",
                              "taxValue": "9.00",
                              "taxType": "Exclusive",
                              "status": "1",
                              "taxRuleApplyFor": null
                            }
                          ],
                          "productId": "57e8cefcd97fcef0a3738eae",
                          "storeLocation": "Headquarters",
                          "variants": [
                            {
                              "attribute1": "red",
                              "attribute2": "x",
                              "sellingPrice": 1212,
                              "discountType": "%",
                              "productId": "57e8cefcd97fcef0a3738eae",
                              "merchantId": 472,
                              "createdUserId": 459,
                              "updatedUserId": 459,
                              "created_at": 1474875132,
                              "updated_at": 1474875132,
                              "inventory": 0,
                              "variantId": "57e8cefcd97fcef0a3738eaf"
                            },
                            {
                              "attribute1": "blue",
                              "attribute2": "x",
                              "sellingPrice": 343,
                              "discountType": "%",
                              "productId": "57e8cefcd97fcef0a3738eae",
                              "merchantId": 472,
                              "createdUserId": 459,
                              "updatedUserId": 459,
                              "created_at": 1474875132,
                              "updated_at": 1474875132,
                              "inventory": 0,
                              "variantId": "57e8cefcd97fcef0a3738eb1"
                            },
                            {
                              "attribute1": "red",
                              "attribute2": "xxl",
                              "sellingPrice": 234324,
                              "discountType": "%",
                              "productId": "57e8cefcd97fcef0a3738eae",
                              "merchantId": 472,
                              "createdUserId": 459,
                              "updatedUserId": 459,
                              "created_at": 1474875132,
                              "updated_at": 1474875132,
                              "inventory": 0,
                              "variantId": "57e8cefcd97fcef0a3738eb3"
                            },
                            {
                              "attribute1": "blue",
                              "attribute2": "xxl",
                              "sellingPrice": 2343,
                              "discountType": "%",
                              "productId": "57e8cefcd97fcef0a3738eae",
                              "merchantId": 472,
                              "createdUserId": 459,
                              "updatedUserId": 459,
                              "created_at": 1474875132,
                              "updated_at": 1474875132,
                              "inventory": 0,
                              "variantId": "57e8cefcd97fcef0a3738eb5"
                            }
                          ],
                          "parentCategories": [
                            {
                              "productCategoryId": "211",
                              "parentProductCategoryId": null,
                              "productCategoryName": "Uncategorized",
                              "status": "0",
                              "createdUserId": "459",
                              "updatedUserId": "459",
                              "created_at": "1474617440",
                              "updated_at": "1474617440",
                              "merchantId": "472"
                            }
                          ]
                        }
                      ],
                      "taxes": [
                        {
                          "taxId": "41",
                          "taxDisplayName": "VAT",
                          "taxName": "vat",
                          "taxMode": "%",
                          "taxValue": "9.00",
                          "taxType": "Exclusive",
                          "status": "1",
                          "taxRuleApplyFor": null
                        }
                      ],
                      "merchantId": 472,
                      "price": 12222,
                      "updatedUserId": 459,
                      "createdUserId": 459,
                      "storeLocationCaption": "Headquarters",
                      "created_at": 1474989485,
                      "updated_at": 1474989485,
                      "packageName": "headquarters_test_package",
                      "packageId": "57ea8dadd97fce608f056a53",
                      "storeLocation": "Headquarters",
                      "addons": []
                    }
                  ],
                  "total": 1
                }
              }
  post:
    description: To creat a new product
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
          <p><b>storeLocationId</b> - Integer of a store this product is belong to.</p>
          <p><b>productName</b> - String of product name.</p>
          <p><b>productDescription</b> - String a short description about product.</p>
          <p><b>categories</b> - Array of strings which are category name or integers which are category id.</p>
          <p><b>manufacturers</b> - Array of strings which has vendor name.</p>
          <p><b>attributes</b> - Array of attributes.</p>
          <p><b>variants</b> - Array of name=>value parameters at least one variant with <b>sellingPrice</b>, <b>invantory</b> and <b>sku</b> are mandatory if the merchant set inventory enable in his/her setting, otherwise <b>sellingPrice</b> is the onlny mandatory field. other fields should be filled based on the attributes.</p>
          <p><b><i>files</i></b> - media file. <u>Optional</u></p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "productDisplayName":"iPhone SE",
            "upc":"eadf23ewr42",
            "storeLocationId": 432,
            "productDescription":"iPhone SE, the most powerful 4‑inch phone ever. To create it, we started with a beloved design, then reinvented it from the inside out. The A9 is the same advanced chip used in iPhone 6s. The 12‑megapixel camera captures incredible photos and 4K videos. And Live Photos bring your images to life. The result is an iPhone that looks small. But lives large.",
            "categories":["Electronic","Cellphone", 13, 15],
            "manufacturers":["Apple"],
            "attributes":{
                "attribute1":{
                  "name":"color",
                  "values":["RozeGold","Gold","Black"],
                },
                "attribute2":{
                  "name":"memory",
                  "values":["16G","64G","128G"],
                },
                "attribute3":{
                  "name":"series",
                  "values":["S","SE"],
                }
            },
            "taxes": [
              1, 2
            ],
            "variants": [
              {
                "attribute1": "RozeGold",
                "attribute2": "16G",
                "attribute3": "S",
                "sku": "some_sku",
                "inventory": 1500,
                "threshold": 5,
                "sellingPrice": 299.99,
                "buyingPrice": 200.00,
                "mrp": 349.99,
                "discount": 10
              },
              {
                "attribute1": "Gold",
                "attribute2": "64G",
                "attribute3": "S",
                "sku": "some_sku",
                "inventory": 1500,
                "threshold": 5,
                "sellingPrice": 349.99,
                "buyingPrice": 205.00,
                "mrp": 399.99,
                "discount": 10
              },
              {
                "attribute1": "Black",
                "attribute2": "128G",
                "attribute3": "SE",
                "sku": "some_sku",
                "inventory": 1500,
                "threshold": 5,
                "sellingPrice": 329.99,
                "buyingPrice": 222.00,
                "mrp": 349.99,
                "discount": 10
              }
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "productId": "5774fcdad97fce4da4513f31",
                    "productName": "headquarter_iphone_6s",
                    "productDisplayName": "iPhone 6S",
                    "upc":"eadf23ewr42",
                    "storeLocationId": 432,
                    "productDescription": "iPhone SE, the most powerful 4‑inch phone ever. To create it, we started with a beloved design, then reinvented it from the inside out. The A9 is the same advanced chip used in iPhone 6s. The 12‑megapixel camera captures incredible photos and 4K videos. And Live Photos bring your images to life. The result is an iPhone that looks small. But lives large.",
                    "categories": [
                      "Electronic",
                      "Cellphone"
                    ],
                    "manufacturers": [
                      "Apple"
                    ],
                    "attributes":{
                      "attribute1":{
                        "name":"color",
                        "values":["RozeGold","Gold","Black"],
                      },
                      "attribute2":{
                        "name":"memory",
                        "values":["16G","64G","128G"],
                      },
                      "attribute3":{
                        "name":"series",
                        "values":["S","SE"],
                      }
                    },
                    "merchantId": 480,
                    "createdUserId": 463,
                    "updatedUserId": 463,
                    "created_at": 1467284698,
                    "updated_at": 1468062355,
                    "taxes": [
                      {
                        "taxId": "1",
                        "taxName": "some tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "Delivery"
                      },
                      {
                        "taxId": "2",
                        "taxName": "some other tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "For Here"
                      }
                    ],
                    "variants": [
                      {
                        "variantId": "5774fcdad97fce4da4513f32",
                        "attribute1": "RozeGold",
                        "attribute2": "16G",
                        "attribute3": "S",
                        "sku": "some_sku",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 299.99,
                        "buyingPrice": 200,
                        "mrp": 349.99,
                        "discount": 10,
                        "productId": "5774fcdad97fce4da4513f31"
                      },
                      {
                        "variantId": "5774fcdad97fce4da4513f33",
                        "attribute1": "Gold",
                        "attribute2": "64G",
                        "attribute3": "S",
                        "sku": "some_sku",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 349.99,
                        "buyingPrice": 205,
                        "mrp": 399.99,
                        "discount": 10,
                        "productId": "5774fcdad97fce4da4513f31"
                      },
                      {
                        "variantId": "5774fcdad97fce4da4513f34",
                        "attribute1": "Black",
                        "attribute2": "128G",
                        "attribute3": "SE",
                        "sku": "some_sku",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 329.99,
                        "buyingPrice": 222,
                        "mrp": 349.99,
                        "discount": 10,
                        "productId": "5774fcdad97fce4da4513f31"
                      }
                    ]
                  }
                ]
              }
  put:
    description: To update a product
    queryParameters:
      param1:
        required: true
        type: string
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b>IMEI</b> - generated imei value of the client</p>
          <p><b>productName</b> - String of product name.</p>
          <p><b>productDescription</b> - String a short description about product.</p>
          <p><b>categories</b> - Array of strings which has category name.</p>
          <p><b>manufacturers</b> - Array of strings which has vendor name.</p>
          <p><b>attributes</b> - Array of name=>values.</p>
          <p><b>variants</b> - Array of name=>value parameters at least one variant with 'price', 'invantory' and 'sku' are mandatory other fields should be filled based on the attributes.</p>
          <p><b>files</b> - media file.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "productId": "576a98aed97fcecfe867ec4a",
            "storeLocationId": 432,
            "productDisplayName": "iPhone 6S",
            "upc":"eadf23ewr42",
            "productDescription":"iPhone SE, the most powerful 4‑inch phone ever. To create it, we started with a beloved design, then reinvented it from the inside out. The A9 is the same advanced chip used in iPhone 6s. The 12‑megapixel camera captures incredible photos and 4K videos. And Live Photos bring your images to life. The result is an iPhone that looks small. But lives large.",
            "categories":["Electronic","Cellphone"],
            "manufacturers":["Apple"],
            "attributes":{
              "attribute1":{
                "name":"color",
                "values":["RozeGold","Gold","Black"],
              },
              "attribute2":{
                "name":"memory",
                "values":["16G","64G","128G"],
              },
              "attribute3":{
                "name":"series",
                "values":["S","SE"],
              }
            },
            "variants": [
              {
                "variantId": "576a98aed97fcecfe867ec4a",
                "attribute1": "RozeGold",
                "attribute2": "16G",
                "attribute3": "S",
                "sku": "some_sku",
                "inventory": 1500,
                "threshold": 5,
                "sellingPrice": 299.99,
                "buyingPrice": 200.00,
                "mrp": 349.99,
                "discount": 10
              },
              {
                "variantId": "576a989jfe7fcecfe867ec4a",
                "attribute1": "Gold",
                "attribute2": "64G",
                "attribute3": "S",
                "sku": "some_sku",
                "inventory": 1500,
                "threshold": 5,
                "sellingPrice": 349.99,
                "buyingPrice": 205.00,
                "mrp": 399.99,
                "discount": 10
              },
              {
                "variantId": "576a98aed97fcecfe8fedfef",
                "attribute1": "Black",
                "attribute2": "128G",
                "attribute3": "SE",
                "sku": "some_sku",
                "inventory": 1500,
                "threshold": 5,
                "sellingPrice": 329.99,
                "buyingPrice": 222.00,
                "mrp": 349.99,
                "discount": 10
              }
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "productId": "576a98aed97fcecfe867ec4a",
                    "productName": "headquarter_iphone_6s",
                    "productDisplayName": "iPhone 6S",
                    "upc":"eadf23ewr42",
                    "storeLocationId": 432,
                    "productDescription": "iPhone SE, the most powerful 4‑inch phone ever. To create it, we started with a beloved design, then reinvented it from the inside out. The A9 is the same advanced chip used in iPhone 6s. The 12‑megapixel camera captures incredible photos and 4K videos. And Live Photos bring your images to life. The result is an iPhone that looks small. But lives large.",
                    "categories": [
                      "Electronic",
                      "Cellphone"
                    ],
                    "manufacturers": [
                      "Apple"
                    ],
                    "attributes":{
                      "attribute1":{
                        "name":"color",
                        "values":["RozeGold","Gold","Black"],
                      },
                      "attribute2":{
                        "name":"memory",
                        "values":["16G","64G","128G"],
                      },
                      "attribute3":{
                        "name":"series",
                        "values":["S","SE"],
                      }
                    },
                    "variants": [
                      {
                        "variantId": "576a98aed97fcecfe867ec4a",
                        "attribute1": "RozeGold",
                        "attribute2": "16G",
                        "attribute3": "S",
                        "sku": "some_sku",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 299.99,
                        "buyingPrice": 200.00,
                        "mrp": 349.99,
                        "discount": 10
                      },
                      {
                        "variantId": "576a989jfe7fcecfe867ec4a",
                        "attribute1": "Gold",
                        "attribute2": "64G",
                        "attribute3": "S",
                        "sku": "some_sku",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 349.99,
                        "buyingPrice": 205.00,
                        "mrp": 399.99,
                        "discount": 10
                      },
                      {
                        "variantId": "576a98aed97fcecfe8fedfef",
                        "attribute1": "Black",
                        "attribute2": "128G",
                        "attribute3": "SE",
                        "sku": "some_sku",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 329.99,
                        "buyingPrice": 222.00,
                        "mrp": 349.99,
                        "discount": 10
                      }
                    ]
                  }
                ]
              }
  delete:
    description: To delete a product
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b>IMEI</b> - generated imei value of the client</p>
          <p><b>productId</b> - String of product id.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "productId": "576a98aed97fcecfe867ec4a"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
/merchant/tax/product:
  description: To assign and delete taxes to/from one or more specific or event all of the products you can use this endpoint by sending your request with <b>POST</b> and <b>DELETE</b> verbs. or getting a list of product with specific tax
  get:
    description: To fetch product(s) with a specific taxId.
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b><i>IMEI</i></b> - generated imei value of the client</p>
          <p><b><i>taxId</i></b> - Array of products id. this parameter is optional if you do not send it the tax(es) will assign to all products belong to the current merchant!</p>
          <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a product update. <u>Optional</u></p>
          <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
          <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "taxId": 2
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
                "success": 1,
                "response": [
                  {
                    "productName": "iPhone SE",
                    "storeLocationId": 432,
                    "productDescription": "iPhone SE, the most powerful 4‑inch phone ever. To create it, we started with a beloved design, then reinvented it from the inside out. The A9 is the same advanced chip used in iPhone 6s. The 12‑megapixel camera captures incredible photos and 4K videos. And Live Photos bring your images to life. The result is an iPhone that looks small. But lives large.",
                    "categories": [
                      "Electronic",
                      "Cellphone"
                    ],
                    "manufacturers": [
                      "Apple"
                    ],
                    "taxes": [
                      {
                        "taxId": "1",
                        "taxName": "some tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "Delivery"
                      },
                      {
                        "taxId": "2",
                        "taxName": "some other tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "For Here"
                      }
                    ],
                    "merchantId": 480,
                    "createdUserId": 463,
                    "updatedUserId": 463,
                    "created_at": 1469512091,
                    "updated_at": 1469512091,
                    "productId": "5796f99bd97fce2984798aeb",
                    "storeLocation": "Headquarters",
                    "variants": [
                      {
                        "sku": "mnb3j245kj",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 299.99,
                        "buyingPrice": 200,
                        "mrp": 349.99,
                        "discount": 10,
                        "productId": "5796f99bd97fce2984798aeb",
                        "merchantId": 480,
                        "createdUserId": 463,
                        "created_at": 1469512091,
                        "updated_at": 1469512091,
                        "variantId": "5796f99bd97fce2984798aec"
                      },
                      {
                        "sku": "sdfm5ntn",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 349.99,
                        "buyingPrice": 205,
                        "mrp": 399.99,
                        "discount": 10,
                        "productId": "5796f99bd97fce2984798aeb",
                        "merchantId": 480,
                        "createdUserId": 463,
                        "created_at": 1469512091,
                        "updated_at": 1469512091,
                        "variantId": "5796f99bd97fce2984798aed"
                      },
                      {
                        "sku": "crmn34jt",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 329.99,
                        "buyingPrice": 222,
                        "mrp": 349.99,
                        "discount": 10,
                        "productId": "5796f99bd97fce2984798aeb",
                        "merchantId": 480,
                        "createdUserId": 463,
                        "created_at": 1469512091,
                        "updated_at": 1469512091,
                        "variantId": "5796f99bd97fce2984798aee"
                      }
                    ]
                  },
                  {
                    "productName": "iPhone SE",
                    "storeLocationId": 432,
                    "productDescription": "iPhone SE, the most powerful 4‑inch phone ever. To create it, we started with a beloved design, then reinvented it from the inside out. The A9 is the same advanced chip used in iPhone 6s. The 12‑megapixel camera captures incredible photos and 4K videos. And Live Photos bring your images to life. The result is an iPhone that looks small. But lives large.",
                    "categories": [
                      "Electronic",
                      "Cellphone"
                    ],
                    "manufacturers": [
                      "Apple"
                    ],
                    "taxes": [
                      {
                        "taxId": "1",
                        "taxName": "some tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "Delivery"
                      },
                      {
                        "taxId": "2",
                        "taxName": "some other tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "For Here"
                      }
                    ],
                    "merchantId": 480,
                    "createdUserId": 463,
                    "updatedUserId": 463,
                    "created_at": 1469512094,
                    "updated_at": 1469512094,
                    "productId": "5796f99ed97fce064434bc0c",
                    "storeLocation": "Headquarters",
                    "variants": [
                      {
                        "sku": "mnb3j245kj",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 299.99,
                        "buyingPrice": 200,
                        "mrp": 349.99,
                        "discount": 10,
                        "productId": "5796f99ed97fce064434bc0c",
                        "merchantId": 480,
                        "createdUserId": 463,
                        "created_at": 1469512094,
                        "updated_at": 1469512094,
                        "variantId": "5796f99ed97fce064434bc0d"
                      },
                      {
                        "sku": "sdfm5ntn",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 349.99,
                        "buyingPrice": 205,
                        "mrp": 399.99,
                        "discount": 10,
                        "productId": "5796f99ed97fce064434bc0c",
                        "merchantId": 480,
                        "createdUserId": 463,
                        "created_at": 1469512094,
                        "updated_at": 1469512094,
                        "variantId": "5796f99ed97fce064434bc0e"
                      },
                      {
                        "sku": "crmn34jt",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 329.99,
                        "buyingPrice": 222,
                        "mrp": 349.99,
                        "discount": 10,
                        "productId": "5796f99ed97fce064434bc0c",
                        "merchantId": 480,
                        "createdUserId": 463,
                        "created_at": 1469512094,
                        "updated_at": 1469512094,
                        "variantId": "5796f99ed97fce064434bc0f"
                      }
                    ]
                  },
                  {
                    "productName": "iPhone SE",
                    "storeLocationId": 432,
                    "productDescription": "iPhone SE, the most powerful 4‑inch phone ever. To create it, we started with a beloved design, then reinvented it from the inside out. The A9 is the same advanced chip used in iPhone 6s. The 12‑megapixel camera captures incredible photos and 4K videos. And Live Photos bring your images to life. The result is an iPhone that looks small. But lives large.",
                    "categories": [
                      "Electronic",
                      "Cellphone"
                    ],
                    "manufacturers": [
                      "Apple"
                    ],
                    "taxes": [
                      {
                        "taxId": "1",
                        "taxName": "some tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "Delivery"
                      },
                      {
                        "taxId": "2",
                        "taxName": "some other tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "For Here"
                      }
                    ],
                    "merchantId": 480,
                    "createdUserId": 463,
                    "updatedUserId": 463,
                    "created_at": 1469512095,
                    "updated_at": 1469512095,
                    "productId": "5796f99fd97fce3dfc00425e",
                    "storeLocation": "Headquarters",
                    "variants": [
                      {
                        "sku": "mnb3j245kj",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 299.99,
                        "buyingPrice": 200,
                        "mrp": 349.99,
                        "discount": 10,
                        "productId": "5796f99fd97fce3dfc00425e",
                        "merchantId": 480,
                        "createdUserId": 463,
                        "created_at": 1469512096,
                        "updated_at": 1469512096,
                        "variantId": "5796f9a0d97fce3dfc00425f"
                      },
                      {
                        "sku": "sdfm5ntn",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 349.99,
                        "buyingPrice": 205,
                        "mrp": 399.99,
                        "discount": 10,
                        "productId": "5796f99fd97fce3dfc00425e",
                        "merchantId": 480,
                        "createdUserId": 463,
                        "created_at": 1469512096,
                        "updated_at": 1469512096,
                        "variantId": "5796f9a0d97fce3dfc004260"
                      },
                      {
                        "sku": "crmn34jt",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 329.99,
                        "buyingPrice": 222,
                        "mrp": 349.99,
                        "discount": 10,
                        "productId": "5796f99fd97fce3dfc00425e",
                        "merchantId": 480,
                        "createdUserId": 463,
                        "created_at": 1469512096,
                        "updated_at": 1469512096,
                        "variantId": "5796f9a0d97fce3dfc004261"
                      }
                    ]
                  }
                ]
              }
  post:
    description: To assign one or more tax(es) to one or more product(s). the system won't show an error message if requested tax(es) id did already assigned to the requested product(s).
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b><i>IMEI</i></b> - generated imei value of the client</p>
          <p><b><i>productsId</i></b> - Array of products id. this parameter is optional if you do not send it the tax(es) will assign to all products belong to the current merchant!</p>
          <p><b>taxesId</b> - array of tax id.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "productsId": ["5774fcdad97fce4da4513f31"],
            "taxesId": [
              1, 2
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "productId": "5774fcdad97fce4da4513f31",
                    "productName": "iPhone SE",
                    "storeLocationId": 432,
                    "productDescription": "iPhone SE, the most powerful 4‑inch phone ever. To create it, we started with a beloved design, then reinvented it from the inside out. The A9 is the same advanced chip used in iPhone 6s. The 12‑megapixel camera captures incredible photos and 4K videos. And Live Photos bring your images to life. The result is an iPhone that looks small. But lives large.",
                    "categories": [
                      "Electronic",
                      "Cellphone"
                    ],
                    "manufacturers": [
                      "Apple"
                    ],
                    "attributes": {
                      "color": [
                        "RozeGold",
                        "Gold",
                        "Black"
                      ],
                      "memory": [
                        "16G",
                        "64G",
                        "128G"
                      ],
                      "series": [
                        "S",
                        "SE"
                      ]
                    },
                    "merchantId": 480,
                    "createdUserId": 463,
                    "updatedUserId": 463,
                    "created_at": 1467284698,
                    "updated_at": 1468062355,
                    "taxes": [
                      {
                        "taxId": "1",
                        "taxName": "some tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "Delivery"
                      },
                      {
                        "taxId": "2",
                        "taxName": "some other tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "For Here"
                      }
                    ],
                    "variants": [
                      {
                        "_id": "5774fcdad97fce4da4513f32",
                        "attribute1": "RozeGold",
                        "attribute2": "16G",
                        "attribute3": "S",
                        "sku": "some_sku",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 299.99,
                        "buyingPrice": 200,
                        "mrp": 349.99,
                        "discount": 10,
                        "productId": "5774fcdad97fce4da4513f31"
                      },
                      {
                        "_id": "5774fcdad97fce4da4513f33",
                        "attribute1": "Gold",
                        "attribute2": "64G",
                        "attribute3": "S",
                        "sku": "some_sku",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 349.99,
                        "buyingPrice": 205,
                        "mrp": 399.99,
                        "discount": 10,
                        "productId": "5774fcdad97fce4da4513f31"
                      },
                      {
                        "_id": "5774fcdad97fce4da4513f34",
                        "attribute1": "Black",
                        "attribute2": "128G",
                        "attribute3": "SE",
                        "sku": "some_sku",
                        "inventory": 1500,
                        "threshold": 5,
                        "sellingPrice": 329.99,
                        "buyingPrice": 222,
                        "mrp": 349.99,
                        "discount": 10,
                        "productId": "5774fcdad97fce4da4513f31"
                      }
                    ]
                  }
                ]
              }
  delete:
    description: To remove one or more tax(es) from one or more product(s). the system won't show an error message if requested tax(es) id didn't already assigned to the requested product(s).
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b><i>IMEI</i></b> - generated imei value of the client</p>
          <p><b><i>productsId</i></b> - Array of products id. this parameter is optional if you do not send it the tax(es) will remove from all products belong to the current merchant!</p>
          <p><b>taxesId</b> - array of tax id.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "productsId": ["576a98aed97fcecfe867ec4a"],
            "taxesId": [1]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/merchant/tax/category:
  description: To assign and delete tax(es) to/from all of the products in one or more categories you can use this endpoint by sending your request with <b>POST</b> and <b>DELETE</b> verbs.
  get:
    description: To get a list of categories with their assigned taxes.
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b><i>IMEI</i></b> - generated imei value of the client</p>
          <p><b><i>taxId</i></b> - get the list for specific taxId</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "productCategoryId": 111,
                    "productCategoryName": "Baby Foods",
                    "taxName": "Luxury"
                  },
                  {
                    "productCategoryId": 113,
                    "productCategoryName": "Candy & Chocolate",
                    "taxName": "Governments"
                  },
                  {
                    "productCategoryId": 121,
                    "productCategoryName": "Laptops & Netbooks",
                    "taxName": "Governments"
                  },
                  {
                    "productCategoryId": 126,
                    "productCategoryName": "Monitors, Projectors & Accs",
                    "taxName": "Governments"
                  }
                ]
              }
  post:
    description: To assign tax(es) to all of the products in one or more categories.
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b><i>IMEI</i></b> - generated imei value of the client</p>
          <p><b>categories</b> - Array of category you want to apply taxes to their current products!</p>
          <p><b>taxesId</b> - array of tax id.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "categories": ["Electronic"],
            "taxesId": [
              1, 2
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "productId": "5774fcdad97fce4da4513f31",
                    "productName": "iPhone SE",
                    "storeLocationId": 432,
                    "productDescription": "iPhone SE, the most powerful 4‑inch phone ever. To create it, we started with a beloved design, then reinvented it from the inside out. The A9 is the same advanced chip used in iPhone 6s. The 12‑megapixel camera captures incredible photos and 4K videos. And Live Photos bring your images to life. The result is an iPhone that looks small. But lives large.",
                    "categories": [
                      "Electronic",
                      "Cellphone"
                    ],
                    "manufacturers": [
                      "Apple"
                    ],
                    "attributes": {
                      "color": [
                        "RozeGold",
                        "Gold",
                        "Black"
                      ],
                      "memory": [
                        "16G",
                        "64G",
                        "128G"
                      ],
                      "series": [
                        "S",
                        "SE"
                      ]
                    },
                    "merchantId": 480,
                    "createdUserId": 463,
                    "updatedUserId": 463,
                    "created_at": 1467284698,
                    "updated_at": 1468084795,
                    "taxes": [
                      {
                        "taxId": "1",
                        "taxName": "some tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "Delivery"
                      },
                      {
                        "taxId": "2",
                        "taxName": "some other tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "For Here"
                      }
                    ]
                  }
                ]
              }
  delete:
    description: To delete some taxes from some products
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b>IMEI</b> - generated imei value of the client</p>
          <p><b>categories</b> - array of category.</p>
          <p><b>taxesId</b> - array of tax id.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "categories": ["Electronic"],
            "taxesId": [1]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/merchant/tax/manufacturers:
  description: To assign and delete tax(es) to/from all of the products belong to one or more distributors you can use this endpoint by sending your request with <b>POST</b> and <b>DELETE</b> verbs.
  get:
    description: To get a list of manufacturers with their assigned taxes.
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b><i>IMEI</i></b> - generated imei value of the client</p>
          <p><b><i>taxId</i></b> - get the list for specific taxId</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "manufacturerId": 6,
                    "manufacturerName": "HANES",
                    "taxId": 5,
                    "taxName": "Governments"
                  },
                  {
                    "manufacturerId": 6,
                    "manufacturerName": "HANES",
                    "taxId": 6,
                    "taxName": "Luxury"
                  },
                  {
                    "manufacturerId": 7,
                    "manufacturerName": "ROXY",
                    "taxId": 5,
                    "taxName": "Governments"
                  },
                  {
                    "manufacturerId": 7,
                    "manufacturerName": "ROXY",
                    "taxId": 6,
                    "taxName": "Luxury"
                  },
                  {
                    "manufacturerId": 7,
                    "manufacturerName": "ROXY",
                    "taxId": 7,
                    "taxName": "Delivery"
                  }
                ]
              }
  post:
    description: To assign some taxed to some products manufactured by some manufacturers
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
          <p><b>distributors</b> - Array of distributor you want to apply taxes to their products!</p>
          <p><b>taxesId</b> - array of tax id.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "manufacturers": ["Apple"],
            "taxesId": [
              1, 2
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "productId": "5774fcdad97fce4da4513f31",
                    "productName": "iPhone SE",
                    "storeLocationId": 432,
                    "productDescription": "iPhone SE, the most powerful 4‑inch phone ever. To create it, we started with a beloved design, then reinvented it from the inside out. The A9 is the same advanced chip used in iPhone 6s. The 12‑megapixel camera captures incredible photos and 4K videos. And Live Photos bring your images to life. The result is an iPhone that looks small. But lives large.",
                    "categories": [
                      "Electronic",
                      "Cellphone"
                    ],
                    "manufacturers": [
                      "Apple"
                    ],
                    "attributes": {
                      "color": [
                        "RozeGold",
                        "Gold",
                        "Black"
                      ],
                      "memory": [
                        "16G",
                        "64G",
                        "128G"
                      ],
                      "series": [
                        "S",
                        "SE"
                      ]
                    },
                    "merchantId": 480,
                    "createdUserId": 463,
                    "updatedUserId": 463,
                    "created_at": 1467284698,
                    "updated_at": 1468084795,
                    "taxes": [
                      {
                        "taxId": "1",
                        "taxName": "some tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "Delivery"
                      },
                      {
                        "taxId": "2",
                        "taxName": "some other tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "For Here"
                      }
                    ]
                  }
                ]
              }
  delete:
    description: To delete some taxes from some products manufactured by some manufacturers
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
          <p><b>manufacturers</b> - Array of vendor you want to remove taxes from their products!</p>
          <p><b>taxesId</b> - array of tax id.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "manufacturers": ["Apple"],
            "taxesId": [1]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/merchant/tax/store:
  description: To assign and delete tax(es) to/from all of the products belong to one or more stores you can use this endpoint by sending your request with <b>POST</b> and <b>DELETE</b> verbs.
  get:
    description: To get a list of manufacturers with their assigned taxes.
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b><i>IMEI</i></b> - generated imei value of the client</p>
          <p><b><i>taxId</i></b> - get the list for specific taxId</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "productCategoryId": 113,
                    "productCategoryName": "Candy & Chocolate",
                    "taxId": 5,
                    "taxName": "Governments"
                  },
                  {
                    "productCategoryId": 117,
                    "productCategoryName": "Display Phones Phone Cards & SIM Cards",
                    "taxId": 5,
                    "taxName": "Governments"
                  },
                  {
                    "productCategoryId": 117,
                    "productCategoryName": "Display Phones Phone Cards & SIM Cards",
                    "taxId": 6,
                    "taxName": "Luxury"
                  },
                  {
                    "productCategoryId": 117,
                    "productCategoryName": "Display Phones Phone Cards & SIM Cards",
                    "taxId": 7,
                    "taxName": "Delivery"
                  },
                  {
                    "productCategoryId": 121,
                    "productCategoryName": "Laptops & Netbooks",
                    "taxId": 5,
                    "taxName": "Governments"
                  },
                  {
                    "productCategoryId": 122,
                    "productCategoryName": "Desktops & All-In-Ones",
                    "taxId": 5,
                    "taxName": "Governments"
                  },
                  {
                    "productCategoryId": 122,
                    "productCategoryName": "Desktops & All-In-Ones",
                    "taxId": 7,
                    "taxName": "Delivery"
                  },
                  {
                    "productCategoryId": 111,
                    "productCategoryName": "Baby Foods",
                    "taxId": 6,
                    "taxName": "Luxury"
                  },
                  {
                    "productCategoryId": 141,
                    "productCategoryName": "Display Phones Phone Cards & SIM Cards",
                    "taxId": 6,
                    "taxName": "Luxury"
                  },
                  {
                    "productCategoryId": 141,
                    "productCategoryName": "Display Phones Phone Cards & SIM Cards",
                    "taxId": 7,
                    "taxName": "Delivery"
                  }
                ]
              }
  post:
    description: To assign some taxed to some products belong to some stores
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
          <p><b>stores</b> - Array of store you want to apply taxes to their products!</p>
          <p><b>taxesId</b> - array of tax id.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "stores": [340],
            "taxesId": [
              1, 2
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "productId": "5774fcdad97fce4da4513f31",
                    "storeLocationId": 340,
                    "productName": "iPhone SE",
                    "productDescription": "iPhone SE, the most powerful 4‑inch phone ever. To create it, we started with a beloved design, then reinvented it from the inside out. The A9 is the same advanced chip used in iPhone 6s. The 12‑megapixel camera captures incredible photos and 4K videos. And Live Photos bring your images to life. The result is an iPhone that looks small. But lives large.",
                    "categories": [
                      "Electronic",
                      "Cellphone"
                    ],
                    "manufacturers": [
                      "Apple"
                    ],
                    "attributes": {
                      "color": [
                        "RozeGold",
                        "Gold",
                        "Black"
                      ],
                      "memory": [
                        "16G",
                        "64G",
                        "128G"
                      ],
                      "series": [
                        "S",
                        "SE"
                      ]
                    },
                    "merchantId": 480,
                    "createdUserId": 463,
                    "updatedUserId": 463,
                    "created_at": 1467284698,
                    "updated_at": 1468084795,
                    "taxes": [
                      {
                        "taxId": "1",
                        "taxName": "some tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "Delivery"
                      },
                      {
                        "taxId": "2",
                        "taxName": "some other tax",
                        "taxMode": "%",
                        "taxValue": "0.00",
                        "taxType": "Inclusive",
                        "status": "0",
                        "taxRuleApplyFor": "For Here"
                      }
                    ]
                  }
                ]
              }
  delete:
    description: To delete some taxes from some products belong to some store
    queryParameters:
      param1:
        type: string
        required: true
        displayName: Token
        description: Token generated by login call
      param2:
        required: true
        type: string
        displayName: requestParams
        description: Below keys are accepted [Json String]
          <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
          <p><b>stores</b> - Array of stores you want to remove taxes from their products!</p>
          <p><b>taxesId</b> - array of tax id.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "stores": [340],
            "taxesId": [1]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/merchant/order:
  description: in order to fetch order information you can use this endpoint. result is an array of order objects or empty array. if you set orderId in your request two other parameteres (limit, offset) will ignored and result is the only order that it's id is matched with your requested orderId or an empty array if the system cannot find the order or the order is not belong to the current merchant.
  get:
    description: To fetch orders list or a specific order
    queryParameters:
      param1:
          type: string
          required: true
          displayName: Token
          description: Token generated by login call
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>orderId</i></b> - orderId for specific order. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a order update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "orderId": "5774fcdad97fce4da4513f31",
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "orderId": "578487b1d97fce04b64cfe09",
                    "customerId": 5,
                    "merchantId": 480,
                    "totalPrice": 24331.56,
                    "status": 0,
                    "products": [
                      {
                        "productId": "5774fcdad97fce4da4513f31",
                        "variants": [
                          {
                            "variantId": "5774fcdad97fce4da4513f32",
                            "unitPrice": 23.76,
                            "discount": 5,
                            "quantity": 10,
                            "sku": "24542"
                          },
                          {
                            "variantId": "5774fcdad97fce4da4513f33",
                            "unitPrice": 23.76,
                            "discount": 5,
                            "quantity": 10,
                            "sku": "24542"
                          }
                        ],
                        "taxes": [
                          1,
                          2
                        ]
                      },
                      {
                        "productId": "5774fcdad97fce4da4513f31",
                        "variants": [
                          {
                            "variantId": "5774fcdad97fce4da4513f33",
                            "unitPrice": 34.77,
                            "discount": 7,
                            "quantity": 34,
                            "sku": "24542"
                          },
                          {
                            "variantId": "5774fcdad97fce4da4513f34",
                            "unitPrice": 345.76,
                            "discount": 5,
                            "quantity": 65,
                            "sku": "24542"
                          }
                        ],
                        "taxes": [
                          1,
                          2
                        ]
                      }
                    ]
                  }
                ]
              }
  put:
    description: in order to fetch order information you can use this endpoint. result is an array of order objects or empty array. if you set orderId in your request two other parameteres (limit, offset) will ignored and result is the only order that it's id is matched with your requested orderId or an empty array if the system cannot find the order or the order is not belong to the current merchant.
    queryParameters:
      param1:
          type: string
          required: true
          displayName: Token
          description: Token generated by login call
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b>orderId</b> - orderId for specific order.</p>
            <p><b>type</b> - eighter <i>exchange</i> or <i>cancel</i> is type of cancelation.</p>
            <p><b><i>credit</i></b> - if you set <i>credit</i> value you have to set a <i>customerId</i> too. <u>Optional</u></p>
            <p><b><i>customerId</i></b> - you need to set customerId if you want to set a credit to return the money into the customer credit. <u>Optional</u></p>
            <p><b>products</b> - array of products each one should has a <i>productId</i> and a <i>variants</i>. variants is an array of different variant with <i>variantId</i>, <i>quantity</i> of returned products, <i>sku</i> if there is any and a <i>comment</i> which describe the reason of product order cancelation.</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "orderId": "5774fcdad97fce4da4513f31",
            "type": "exchange",
            "credit": 1500.00,
            "customerId": 312432,
            "phoneNumber": 97912843243,
            "products": [
              {
                "productId": "5774fcdad97fce4da4513f31",
                "variants": [
                  {
                    "variantId": "5774fcdad97fce4da4513f32",
                    "quantity": 10,
                    "sku": "24542",
                    "comment": "Customer doesn't like this product"
                  },
                  {
                    "variantId": "5774fcdad97fce4da4513f33",
                    "quantity": 5,
                    "comment": "The products are faulty"
                  }
                ]
              }
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "_id": "578487b1d97fce04b64cfe09",
                    "customerId": 5,
                    "merchantId": 480,
                    "totalPrice": 24331.56,
                    "status": 0,
                    "products": [
                      {
                        "productId": "5774fcdad97fce4da4513f31",
                        "variants": [
                          {
                            "variantId": "5774fcdad97fce4da4513f32",
                            "unitPrice": 23.76,
                            "discount": 5,
                            "quantity": 10,
                            "sku": "24542"
                          },
                          {
                            "variantId": "5774fcdad97fce4da4513f33",
                            "unitPrice": 23.76,
                            "discount": 5,
                            "quantity": 10,
                            "sku": "24542"
                          }
                        ],
                        "taxes": [
                          1,
                          2
                        ]
                      },
                      {
                        "productId": "5774fcdad97fce4da4513f31",
                        "variants": [
                          {
                            "variantId": "5774fcdad97fce4da4513f33",
                            "unitPrice": 34.77,
                            "discount": 7,
                            "quantity": 34,
                            "sku": "24542"
                          },
                          {
                            "variantId": "5774fcdad97fce4da4513f34",
                            "unitPrice": 345.76,
                            "discount": 5,
                            "quantity": 65,
                            "sku": "24542"
                          }
                        ],
                        "taxes": [
                          1,
                          2
                        ]
                      }
                    ]
                  }
                ]
              }
/merchant/category:
  description: in order to fetch and create categories we use this endpoint. keep in mind that categories are public and visible to everyone.
  get:
    description: To fetch category list or a specific category
    queryParameters:
      param1:
          type: string
          required: true
          displayName: Token
          description: Token generated by login call
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>productCategoryId</i></b> - productCategoryId for specific category. <u>Optional</u></p>
            <p><b><i>parentsOnly</i></b> - if you set this parameters API will return all parents category for. <u>Optional</u></p>
            <p><b><i>childOnly</i></b> - if you set this parameters API will return all childs category for productCategoryId. <u>Optional</u></p>
            <p><b><i>createdUserId</i></b> - To fetch categories created by this user only. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a product update. <u>Optional</u></p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "productCategoryId": 24331,
                    "productCategoryName": "Cellphone",
                  },
                  {
                    "productCategoryId": 342,
                    "productCategoryName": "Printer",
                  }
                ]
              }
  post:
    description: To create a new category you can use POST verb to send your new category name to this api. keep in mind that your json object has <b>productCategoryName</b> key with proper value.
    queryParameters:
      param1:
          type: string
          required: true
          displayName: Token
          description: Token generated by login call
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>productCategoryName</i></b> - productCategoryName category name.</p>
    body:
      application/json:
        example: |
          {
            "productCategoryName" : "some name"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "productCategoryName": "some name",
                  "merchantId": 480,
                  "createdUserId": 463,
                  "updatedUserId": 463,
                  "created_at": 1468824572,
                  "updated_at": 1468824572,
                  "productCategoryId": 3
                }
              }
  put:
    description: To update a category you can use PUT verb to send your new category name to this api. keep in mind that your json object has <b>productCategoryName</b> key with proper value.
    queryParameters:
      param1:
          type: string
          required: true
          displayName: Token
          description: Token generated by login call
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>productCategoryId</i></b> - productCategoryName category name.</p>
            <p><b><i>productCategoryName</i></b> - productCategoryName category name.</p>
    body:
      application/json:
        example: |
          {
            "productCategoryName" : "some new name",
            "productCategoryId": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "productCategoryName": "some new name",
                  "merchantId": 480,
                  "createdUserId": 463,
                  "updatedUserId": 463,
                  "created_at": 1468824572,
                  "updated_at": 1468824572,
                  "productCategoryId": 3
                }
              }
  delete:
    description: To create a new category you can use POST verb to send your new category name to this api. keep in mind that your json object has <b>productCategoryName</b> key with proper value.
    queryParameters:
      param1:
          type: string
          required: true
          displayName: Token
          description: Token generated by login call
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>productCategoryId</i></b> - productCategoryId category id.</p>
    body:
      application/json:
        example: |
          {
            "productCategoryId" : 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/merchant/check-plan:
  description: in order to check upgrade/downgrade current plan to the other plans.
  get:
    description: To fetch category list or a specific category
    queryParameters:
      param1:
          type: string
          required: true
          displayName: Token
          description: Token generated by login call
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b>planId</b> - new plan id</p>
            <p><b>numberOfPeriod</b> - the number of period of new plan merchant decided to buy in upgrade/downgrade.</p>
            <p><b>addons</b> - arrays of addons merchant decided to order along with new plan [[addonId:23, quantity:2],[addonId:8, quantity:4]]. <u>Optional</u></p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "planId": 5,
            "numberOfPeriod": 3,
            "addons": [
              {
                "addonId": 1,
                "quantity": 3
              },
              {
                "addonId": 2,
                "quantity": 5
              }
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "addonsPrice": 7399.92,
                  "type": "Upgrade",
                  "startDate": "2016-07-22",
                  "endDate": "2016-10-22",
                  "days": 92,
                  "planPrice": 361.65,
                  "setupFeePrice": 0,
                  "totalPrice": 7761.57
                }
              }
/merchant/product/inventory:
  description: in order to fetch and update product quantity we use this endpoint. keep in mind that categories are public and visible to everyone.
  get:
    description: To fetch category list or a specific category
    queryParameters:
      param1:
          type: string
          required: true
          displayName: Token
          description: Token generated by login call
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>productId</i></b> - </p>
            <p><b><i>merchantId</i></b> - </p>
            <p><b><i>userId</i></b> - </p>
            <p><b><i>limit</i></b> - </p>
            <p><b><i>offset</i></b> - </p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "productId": "57df9b89d97fce579a5feb17",
            "limit": 5,
            "offset": 0
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "InventoryLogs": [
                    {
                      "merchantId": 472,
                      "productId": "57df9b89d97fce579a5feb17",
                      "storeLocationId": 424,
                      "variantId": "57df9b89d97fce579a5feb18",
                      "sku": "",
                      "comment": "",
                      "oldQuantity": 100,
                      "newQuantity": 200,
                      "method": "increase",
                      "type": "uploadupdate",
                      "created_at": 1474636125,
                      "orderId": "",
                      "variant": {
                        "sellingPrice": 100,
                        "discount": 100,
                        "inventory": 200,
                        "threshold": 10,
                        "productId": "57df9b89d97fce579a5feb17",
                        "merchantId": 472,
                        "createdUserId": 459,
                        "created_at": 1474272137,
                        "updated_at": 1475049900,
                        "updatedUserId": 459,
                        "attribute1": "",
                        "attribute2": "",
                        "attribute3": "",
                        "sku": "",
                        "buyingPrice": "",
                        "mrp": "",
                        "discountType": "%"
                      },
                      "inventoryLogId": "57e5295dd97fce74a62c43f2"
                    },
                    {
                      "merchantId": 472,
                      "productId": "57df9b89d97fce579a5feb17",
                      "storeLocationId": 424,
                      "variantId": "57df9b89d97fce579a5feb18",
                      "sku": "",
                      "comment": "",
                      "oldQuantity": 0,
                      "newQuantity": 100,
                      "method": "increase",
                      "type": "manuallycreate",
                      "created_at": 1474272137,
                      "orderId": "",
                      "variant": {
                        "sellingPrice": 100,
                        "discount": 100,
                        "inventory": 200,
                        "threshold": 10,
                        "productId": "57df9b89d97fce579a5feb17",
                        "merchantId": 472,
                        "createdUserId": 459,
                        "created_at": 1474272137,
                        "updated_at": 1475049900,
                        "updatedUserId": 459,
                        "attribute1": "",
                        "attribute2": "",
                        "attribute3": "",
                        "sku": "",
                        "buyingPrice": "",
                        "mrp": "",
                        "discountType": "%"
                      },
                      "inventoryLogId": "57df9b89d97fce579a5feb19"
                    }
                  ],
                  "total": 2
                }
              }
  put:
    description: To update new inventory value for a product
    queryParameters:
      param1:
          type: string
          required: true
          displayName: Token
          description: Token generated by login call
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>variantId</i></b> <u>Optional</u></p>
            <p><b><i>quantity</i></b> the amount you want to increase or decrease like -50 or 80 <u>Optional</u></p>
            <p><b><i>userId</i></b> - </p>
            <p><b><i>merchantId</i></b> - </p>
            <p><b><i>variants</i></b> an array containt variant id and quanity ['VariantIdString1'=>30, 'VariantIdString2'=>-50] <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "variantId": "57dfa6c5d97fce579a5feb28",
            "quantity": -40,
            "merchantId": 472,
            "userId": 459
          } ||
          [
            {
              "variantId": "57dfa6c5d97fce579a5feb28",
              "quantity": -40,
              "merchantId": 472,
              "userId": 459
            },
            {
              "variantId": "57ea23c9d97fcee9c2387161",
              "quantity": 54,
              "merchantId": 472,
              "userId": 459
            }
          ]
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success":1,
                "response":
                  {
                    "sellingPrice": 2453454,
                    "discountType": "%",
                    "productId": "57ea7ad2d97fce5b0f07efa3",
                    "merchantId": 472,
                    "createdUserId": 459,
                    "updatedUserId": 459,
                    "created_at": 1474984658,
                    "updated_at": 1475068480,
                    "inventory": 1460,
                    "variantId": "57ea7ad2d97fce5b0f07efa4"
                  }
              } ||
              {
                "success": 1,
                "response": [
                  {
                    "sellingPrice": 2453454,
                    "discountType": "%",
                    "productId": "57ea7ad2d97fce5b0f07efa3",
                    "merchantId": 472,
                    "createdUserId": 459,
                    "updatedUserId": 459,
                    "created_at": 1474984658,
                    "updated_at": 1475068480,
                    "inventory": 1460,
                    "variantId": "57ea7ad2d97fce5b0f07efa4"
                  },
                  {
                    "sellingPrice": 456546,
                    "discountType": "%",
                    "inventory": 780,
                    "productId": "57ea23c9d97fcee9c2387160",
                    "merchantId": 472,
                    "createdUserId": 459,
                    "updatedUserId": 459,
                    "created_at": 1474962377,
                    "updated_at": 1474962377,
                    "variantId": "57ea23c9d97fcee9c2387161"
                  }
                ]
              }
/merchant/product/tax:
  description: in order to fetch product taxes we use this endpoint.
  get:
    description: To fetch tax list or a specific product
    queryParameters:
      param1:
          type: string
          required: true
          displayName: Token
          description: Token generated by login call
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b>productId</b> - productId</p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            productId:"57b566dfd97fce8f27325ff8"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "taxId": "57",
                    "taxDisplayName": "Governments",
                    "taxName": "governments",
                    "taxMode": "%",
                    "taxValue": "10.00",
                    "taxType": "Exclusive",
                    "taxScope": "Global",
                    "status": "1",
                    "taxRuleApplyFor": null
                  },
                  {
                    "taxId": "75",
                    "taxDisplayName": "custom_1",
                    "taxName": "custom_1",
                    "taxMode": "%",
                    "taxValue": "12.00",
                    "taxType": "Inclusive",
                    "taxScope": "Custom",
                    "status": "1",
                    "taxRuleApplyFor": null
                  }
                ]
              }
/merchant/product/docread:
  description: in order to fetch product image or thumbnail we use this endpoint.
  post:
    description: To fetch a product image or thumbnail we use this endpoint, you also can send your batch request in an array.
    queryParameters:
      param1:
          type: string
          required: true
          displayName: Token
          description: Token generated by login call
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b>productFileId</b> - if you already have productFileId you can use it to return file content. <u>Optional</u></p>
            <p><b>filename</b> - if you already have filename you can use it to return <i>file</i> content. <u>Optional</u></p>
            <p><b>thumbnail</b> - if you already have thumbnail you can use it to return <i>thumbnail</i> content. <u>Optional</u></p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "thumbnail":"v2/productimages/thumb/459__20160921062545.jpg"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "productFileId": "57e29f71d97fce0965603198",
                  "filename": "v2/productimages/459__20160921062545.jpg",
                  "thumbnail": "v2/productimages/thumb/459__20160921062545.jpg",
                  "data": "/9j/4AAQSkZJRgABAQAAAQABAAD//gA+Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcgSlBFRyB2ODApLCBkZWZhdWx0IHF1YWxpdHkK/9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZEhMPFB0aHx4dGhwcICQuJyAiLCMcHCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0YMiEcITIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AAEQgAlgCWAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkoP4F/+KoopgS/8Jvpv/PC7/wC+F/8AiqP+E303/nhd/wDfC/8AxVFFIA/4TfTf+eF3/wB8L/8AFVBbeNdNVZMwXfMjH7i+v+9RRQBP/wAJvpv/ADwu/wDvhf8A4qj/AITfTf8Anhd/98L/APFUUUARXPjbTWt3Agu+R/cX/wCKp6eN9NCL+4u+n9xf/iqKKAHf8Jvpv/PC7/74X/4qj/hN9N/54Xf/AHwv/wAVRRQBFc+NtNa2kAgu+VP8C/8AxVOj8baaI1HkXfQfwL/8VRRQBkeJvGGn3GmxokNyCJgeVX0P+1RRRQB//9k="
                }
              }
/merchant/package/docread:
  description: in order to fetch package image or thumbnail we use this endpoint.
  post:
    description: To fetch package image or thumbnail we use this endpoint, you also can send your batch request in an array.
    queryParameters:
      param1:
          type: string
          required: true
          displayName: Token
          description: Token generated by login call
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b>packageFileId</b> - if you already have packageFileId you can use it to return file content. <u>Optional</u></p>
            <p><b>filename</b> - if you already have filename you can use it to return <i>file</i> content. <u>Optional</u></p>
            <p><b>thumbnail</b> - if you already have thumbnail you can use it to return <i>thumbnail</i> content. <u>Optional</u></p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "thumbnail":"v2/packageimages/thumb/459__20160921062545.jpg"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "packageFileId": "57e29f71d97fce0965603198",
                  "filename": "v2/packageimages/459__20160921062545.jpg",
                  "thumbnail": "v2/packageimages/thumb/459__20160921062545.jpg",
                  "data": "/9j/4AAQSkZJRgABAQAAAQABAAD//gA+Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcgSlBFRyB2ODApLCBkZWZhdWx0IHF1YWxpdHkK/9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZEhMPFB0aHx4dGhwcICQuJyAiLCMcHCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0YMiEcITIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AAEQgAlgCWAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkoP4F/+KoopgS/8Jvpv/PC7/wC+F/8AiqP+E303/nhd/wDfC/8AxVFFIA/4TfTf+eF3/wB8L/8AFVBbeNdNVZMwXfMjH7i+v+9RRQBP/wAJvpv/ADwu/wDvhf8A4qj/AITfTf8Anhd/98L/APFUUUARXPjbTWt3Agu+R/cX/wCKp6eN9NCL+4u+n9xf/iqKKAHf8Jvpv/PC7/74X/4qj/hN9N/54Xf/AHwv/wAVRRQBFc+NtNa2kAgu+VP8C/8AxVOj8baaI1HkXfQfwL/8VRRQBkeJvGGn3GmxokNyCJgeVX0P+1RRRQB//9k="
                }
              }
/merchant/service/docread:
  description: in order to fetch service image or thumbnail we use this endpoint.
  post:
    description: To fetch service image or thumbnail we use this endpoint, you also can send your batch request in an array.
    queryParameters:
      param1:
          type: string
          required: true
          displayName: Token
          description: Token generated by login call
      param2:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b>serviceFileId</b> - if you already have serviceFileId you can use it to return file content. <u>Optional</u></p>
            <p><b>filename</b> - if you already have filename you can use it to return <i>file</i> content. <u>Optional</u></p>
            <p><b>thumbnail</b> - if you already have thumbnail you can use it to return <i>thumbnail</i> content. <u>Optional</u></p>
    securedBy: [customSecurityScheme]
    body:
      application/json:
        example: |
          {
            "thumbnail":"v2/serviceimages/thumb/459__20160921062545.jpg"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "productFileId": "57e29f71d97fce0965603198",
                  "filename": "v2/serviceimages/459__20160921062545.jpg",
                  "thumbnail": "v2/serviceimages/thumb/459__20160921062545.jpg",
                  "data": "/9j/4AAQSkZJRgABAQAAAQABAAD//gA+Q1JFQVRPUjogZ2QtanBlZyB2MS4wICh1c2luZyBJSkcgSlBFRyB2ODApLCBkZWZhdWx0IHF1YWxpdHkK/9sAQwAIBgYHBgUIBwcHCQkICgwUDQwLCwwZEhMPFB0aHx4dGhwcICQuJyAiLCMcHCg3KSwwMTQ0NB8nOT04MjwuMzQy/9sAQwEJCQkMCwwYDQ0YMiEcITIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy/8AAEQgAlgCWAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkoP4F/+KoopgS/8Jvpv/PC7/wC+F/8AiqP+E303/nhd/wDfC/8AxVFFIA/4TfTf+eF3/wB8L/8AFVBbeNdNVZMwXfMjH7i+v+9RRQBP/wAJvpv/ADwu/wDvhf8A4qj/AITfTf8Anhd/98L/APFUUUARXPjbTWt3Agu+R/cX/wCKp6eN9NCL+4u+n9xf/iqKKAHf8Jvpv/PC7/74X/4qj/hN9N/54Xf/AHwv/wAVRRQBFc+NtNa2kAgu+VP8C/8AxVOj8baaI1HkXfQfwL/8VRRQBkeJvGGn3GmxokNyCJgeVX0P+1RRRQB//9k="
                }
              }
/payment/initiate:
  post:
    description: To initiate the payment flow and generating a payment record on the database
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: data (json)
        description: json array of payment details and order product is an example
    body:
      application/json:
        example: |
          {
            "paymentCurrencyId": 25,
            "paymentAmount": 100,
            "paymentTipAmount": 0,
            "paymentSubTotal": 0,
            "paymentTotalDiscount": 0,
            "paymentCustomerId": "",
            "location": "19.0636695,72.8338119,",
            "created_at": "",
            "customerId": 1,
            "order": {
              "products": [
                {
                  "productId": "someId",
                  "variants": [
                    {
                      "variantId": "someId",
                      "unitPrice": "someValueEnterByMerchant",
                      "discount": "valueInPercentage",
                      "quantity": "OrderedQuantity",
                      "calculatedDiscount": "dicountValue(unitPrice - unitPrice * discount / 100)",
                      "calculatedPrice": "final SellingPrice After Applying Taxes and Discount(unitPrice * qty - discount + tax)",
                      "basePrice": "(unitPrice - DiscountValue / quantity) * 100 / totalInclusiveTaxRate",
                      "tax": [
                        {
                          "id": "66",
                          "name": "VAT",
                          "value": "12.60",
                          "taxType": "Inclusive",
                          "calculatedTaxValue": "12.50"
                        },
                        {
                          "id": 67,
                          "name": "Stax",
                          "value": 10.6,
                          "taxType": "Exclusive",
                          "calculatedTaxValue": 2.5
                        }
                      ]
                    }
                  ]
                }
              ],
              "customItems": [
                {
                  "name": "value",
                  "unitPrice": "sampleValue",
                  "quantity": "3",
                  "calculatedPrice": "120.00",
                  "discount": "12.00",
                  "calculatedDiscount": "dicountValue(unitPrice - unitPrice * discount / 100)",
                  "basePrice": "(unitPrice - DiscountValue / quantity) * 100 / totalInclusiveTaxRate",
                  "Tax": [
                    {
                      "id": "66",
                      "name": "VAT",
                      "value": "12.60",
                      "calculatedTaxValue": "12.50"
                    }
                  ]
                }
              ],
              "customer": {},
              "subTotal": "calculated value",
              "totalPrice": "calculated value",
              "totalTax": "total of all the calculated tax",
              "totalDiscount": "calculated total discount, sum of both product discounts and general discount",
              "generalDiscount": "general discount applied to cart",
              "roundOffAmount": "amount thats rounded if enabled",
              "serviceCharges": "service Charges",
              "deliveryCharges": "delivery Charges",
              "calculatedTax": [
                {
                  "id": "66",
                  "name": "VAT",
                  "value": "12.60",
                  "calculatedTaxValue": "1112.50"
                }
              ]
            }
          }
    responses:
      200:
        body:
          application/json:
            example: |
                    {"success":0,"errorCode":"2.2.3","message":"Validation Error","messageDetails":{"errorMessage":"Previous payment is waiting","lastPaymentId":26}}
/payment/process:
  post:
    description: To process a transaction on generated payment.
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: Payment Id
        description: Generated payment id by /payment/initiate call
      param3:
        required: true
        displayName: Transaction Type Id
        description: Id value of the transaction type. To get available list please call /payments/transactionlist endpoint
      param4:
        required: true
        displayName: Transaction Currency Id
        description: Currency id for the transaction. To obtain the list of currencies please call /masterdata/currencies endpoint
      param5:
        required: true
        displayName: Transaction Amount
        description: Total Amount for the transaction. Decimal part should be 2 digits. ie 10.24
      param6:
        required: false
        displayName: Mobile Number
        description: Mobile number of the client. Mandatory on wallet calls only.
      param7:
        required: false
        displayName: Additional parameters
        description: json string of additional parameters required by different payment types.
    responses:
      200:
        body:
          application/json:
            example: {}
/payment/authenticate:
  post:
    description: To process a transaction on generated payment.
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: Payment Id
        description: Generated payment id by /payment/initiate call
      param3:
        required: true
        displayName: Transaction Type Id
        description: Id value of the transaction type. To get available list please call /payments/transactionlist endpoint
      param4:
        required: true
        displayName: Transaction Id
        description: Id of the transaction
      param5:
        required: true
        displayName: OTP
        description: OTP for that transaction
    responses:
      200:
        body:
          application/json:
            example: |
/payment/update:
  post:
    description: To process a transaction on generated payment.
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: Payment Id
        description: Generated payment id by /payment/initiate call
      param3:
        required: true
        displayName: Transaction Type Id
        description: Id value of the transaction type. To get available list please call /payments/transactionlist endpoint
      param4:
        required: true
        displayName: Transaction Id
        description: Id of the transaction
      param5:
        required: true
        displayName: Json Object
        description: Json object for additional parameters for ex | {"Customer":"vinit","pan":""}
          <p>for card transactions</p>
          <p><b>deviceId </b> Mandatory Device id for the reader
          <p><b>tid      </b>
          <p><b>mid      </b>
          <p><b>apprCode </b>
          <p><b>emvtag   </b>
          <p><b>cardtype </b>
          <p><b>RRN      </b>
          <p><b>cardLabel</b>
          <p><b>TVR      </b>
          <p><b>TSI      </b>
          <p><b>TC       </b>
          <p><b>AID      </b>
          <p><b>tdate    </b>
          <p><b>ttime    </b>
          <p><b>Signature</b>
          <p><b>ErrorCode</b>
          <p><b>MaskedPAN</b>
    responses:
      200:
        body:
          application/json:
            example: |
/payment/finalize:
  post:
    description: for finalizing the payment
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Token generated on login call
      param2:
        required: true
        displayName: Payment Id
        description: payment id generated on /payment/initiate call
    responses:
      200:
        body:
          application/json:
            example: {}
/payment/list:
  post:
    description: for listing the payments as history
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Token generated on login call
      param2:
        required: false
        displayName: Json Object
        description: Json object to send additional criterias. Below is the available keys
            <p><b>fromDate</b> Unix timestamp of start date to filter the list.</p>
            <p><b>toDate</b> Unix timestamp of end date to filter the list.</p>
            <p><b>merchantId</b> if user has payment_list_bymerchant permission, you can send merchantId to retrieve specific merchant's payments.</p>
            <p><b>userId</b>  if user has payment_list_byuser permission, you can send userId to retrieve specific user's payments. Otherwise it will send current user's payments. Send 0 to fetch all users of the merchant if you have correct permissions.</p>
            <p><b>sourceId</b> if this id is given, only transactions that have given source id will be listed. This is used on masterwallet and other sources separation.</p>
            <p><b>userId</b> optional parameter for listing only given user's payments</p>
            <p><b>paymentId</b> optional parameter for fetching specific payment</p>
            <p><b>paymentStatusId</b> optional parameter for fetching payments with given status</p>
            <p><b>offset</b> offset for pagination</p>
            <p><b>limit</b> limit for pagination</p>
            <p><b>amountFrom</b> optional parameter to fetch transactions that has amount bigger than this value</p>
            <p><b>amountTo</b> optional parameter to fetch transactions that has amount smaller than this value</p>
            <p><b>transactionId</b> optional parameter to fetch only one transaction</p>
            <p><b>transactionTypeId</b> optional parameter to fetch only certain types of transactions</p>
            <p><b>include</b> array of items to include on the list. Possible items are
              <ul>
                <li>transactions - include transaction data</li>
                <li>history - include payment history data</li>
                <li>transactions_history - include transactions history data</li>
                <li>orders - include order and product data</li>
              </ul>
            </p>
    responses:
      200:
        body:
          application/json:
            example: |
              {"success":1,"response":[{"_id":{"$id":"56e6a1c8af195c7422000032"},"paymentId":43,"paymentStatusId":2,"paymentCurrencyId":1,"paymentAmount":"10.00","paymentTipAmount":"0.00","paymentSubTotal":"10.00","paymentTotalDiscount":"0.00","paymentCustomerId":0,"created_at":1457955272,"updated_at":1457956079,"transactions":[{"_id":{"$id":"56e6a205af195c682200002a"},"transactionId":17,"transactionTypeId":2,"transactionStatusId":2,"transactionCurrencyId":1,"transactionAmount":"10.00","created_at":1457955333,"updated_at":1457955333},{"_id":{"$id":"56e6a306af195c682200002c"},"transactionId":18,"transactionTypeId":2,"transactionStatusId":2,"transactionCurrencyId":1,"transactionAmount":"10.00","created_at":1457955590,"updated_at":1457955590},{"_id":{"$id":"56e6a3fcaf195c682200002e"},"transactionId":19,"transactionTypeId":2,"transactionStatusId":2,"transactionCurrencyId":1,"transactionAmount":"10.00","created_at":1457955836,"updated_at":1457955836},{"_id":{"$id":"56e6a4efaf195c6822000030"},"transactionId":20,"transactionTypeId":2,"transactionStatusId":2,"transactionCurrencyId":1,"transactionAmount":"10.00","created_at":1457956079,"updated_at":1457956079},{"_id":{"$id":"56e6a51baf195c6822000032"},"transactionId":21,"transactionTypeId":2,"transactionStatusId":2,"transactionCurrencyId":1,"transactionAmount":"10.00","created_at":1457956123,"updated_at":1457956123},{"_id":{"$id":"56e6a659af195c6822000034"},"transactionId":22,"transactionTypeId":2,"transactionStatusId":2,"transactionCurrencyId":1,"transactionAmount":"10.00","created_at":1457956441,"updated_at":1457956441},{"_id":{"$id":"56e6a96baf195c6822000036"},"transactionId":23,"transactionTypeId":2,"transactionStatusId":1,"transactionCurrencyId":1,"transactionAmount":"10.00","created_at":1457957227,"updated_at":1457957344}]}]}
/payment/details:
  post:
    description: Payment details api will fetch complete payment with transaction details and purchase products list
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Token generated on login call
      param2:
        required: false
        displayName: merchantId
        description: merchantId of user
      param3:
        required: false
        displayName: userId
        description: userId of user
      param4:
        required: false
        displayName: paymentId
        description: payment Id of payment
    responses:
      200:
        body:
          application/json:
            example: |
             {
                "success": 1,
                "response": {
                  "payments": {
                    "paymentId": 3505,
                    "paymentCurrencyId": 25,
                    "paymentAmount": "11.00",
                    "paymentTipAmount": "0.00",
                    "paymentSubTotal": "11.00",
                    "paymentTotalDiscount": "0.00",
                    "status": "Approved",
                    "details": {
                      "sourceId": "2",
                      "orderId": "581c6d32cfcdbc071d6fe44e"
                    },
                    "order": {
                      "customItems": [],
                      "products": [
                        {
                          "productId": "580a0a76cfcdbc75c971dcb7",
                          "variants": [
                            {
                              "variantId": "580a0a76cfcdbc75c971dcb8",
                              "unitPrice": "10.0",
                              "discount": "0.0",
                              "quantity": "1",
                              "calculatedDiscount": "0.0",
                              "calculatedPrice": "10.0",
                              "tax": []
                            }
                          ],
                          "productDisplayName": "milk"
                        }
                      ],
                      "subTotal": 10,
                      "totalPrice": 11,
                      "totalDiscount": 0,
                      "totalTax": 0,
                      "generalDiscount": 0,
                      "roundOffAmount": 0,
                      "serviceCharges": 10,
                      "deliveryCharges": 0,
                      "CalculatedTax": [],
                      "updated_at": 1478257970,
                      "created_at": 1478257970,
                      "merchantId": 1518,
                      "status": 1,
                      "orderId": "581c6d32cfcdbc071d6fe44e"
                    }
                  },
                  "transactions": [
                    {
                      "transactionId": 3279,
                      "transactionTypeId": 2,
                      "transactionTypeName": "Cash",
                      "transactionStatusId": 2,
                      "transactionStatus": "Approved",
                      "transactionAmount": "11.00",
                      "transactionDetails": []
                    }
                  ]
                }
              }
/payment/void:
  post:
    description: to void the payment and void all transactions
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Token generated on login call
      param2:
        required: true
        displayName: paymentId
        description: paymentId to void
/payment/cancel:
  post:
    description: to cancel the payment and void all transactions
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Token generated on login call
      param2:
        required: true
        displayName: paymentId
        description: paymentId to cancel
/receipt:
  post:
    description: To send receipt of payment via sms or email.
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: JSON STRING
        description: Json object for additional parameters for ex
    body:
      application/json:
        example: |
          {
            "paymentId":25,
            "email":'asd&gmail.com',
            "mobile":'678678678678678',
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
             }
  get:
    description: To view receipt of payment.
    queryParameters:
      param1:
        required: true
        displayName: cheksum
        description: payment chksum
      param2:
        required: true
        displayName: Payment Id
        description: Generated payment id by /payment/initiate call
      param3:
        required: true
        displayName: Receipt Type
        description: type of receipt
    body:
      application/json:
        example: |
          {
            "paymentId":25,
            "email":'asd&gmail.com',
            "mobile":'678678678678678',
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
             }
/user/role:
  get:
    description: It fetch list of all roles
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: data (json)
        description: json array example
        type:
        example:  |
         {
          merchantId: "345"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success":1,
                "response":{
                "Roles":[
                {
                "roleId":1,
                "merchantId":"0",
                "roleName":"Super Admin1"
                },
                {
                "roleId":2,
                "merchantId":"0",
                "roleName":"Merchant Admin"
                },
                {
                "roleId":3,
                "merchantId":"0",
                "roleName":"Merchant Admin (Approved)"
                },
                {
                "roleId":4,
                "merchantId":"0",
                "roleName":"Merchant User"
                },
                {
                "roleId":5,
                "merchantId":"0",
                "roleName":"Customer1"
                },
                {
                "roleId":6,
                "merchantId":"0",
                "roleName":"Account Manager"
                },
                {
                "roleId":7,
                "merchantId":"0",
                "roleName":"Assassin"
                },
                ]
                }
                }

  post:
    description: It will save new role
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: data (json)
        description: json array example
        type:
        example:  |
         {
           roleId':"",
          merchantId: "345",
          roleName:"fd"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
              "success":1,
              "response":{
              "merchantId":0,
              "roleName":"fd",
              "created_at":1482820349,
              "updated_at":1482820349,
              "createdUserId":455,
              "roleId":69
              }
              }
/salon/department:
  description: Departments endpoit provide you whole the functionality you need to work with department apis.
  get:
    description: To fetch a list of departments. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible departments will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>departmentId</i></b> - departmentId fetch specific department information. <u>Optional</u></p>
            <p><b><i>departmentsId</i></b> - departmentsId fetch a list of department information. <u>Optional</u></p>
            <p><b><i>departmentName</i></b> - departmentName fetch all department their name started with this paramter's value information. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "departmentsId": [1,2,3,4,5,6]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Departments": [
                    {
                      "departmentId": 1,
                      "departmentName": "Accident and emergency (A&E)",
                      "departmentDescription": "Also called Casualty Department, where you're likely to be taken if you have arrived in an ambulance or emergency situation.",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481013677,
                      "updated_at": 1481013677,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    },
                    {
                      "departmentId": 2,
                      "departmentName": "Physiotherapy",
                      "departmentDescription": "Physiotherapists work through physical therapies such as exercise, massage, and manipulation of bones, joints and muscle tissues.",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481014148,
                      "updated_at": 1481014148,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    },
                    {
                      "departmentId": 3,
                      "departmentName": "Microbiology",
                      "departmentDescription": "The microbiology department provides an extensive clinical service, including mycology, parasitology, mycobacteriology, a high security pathology unit, and a healthcare associated infection investigation unit, as well as routine bacteriology and an expanding molecular diagnostic repertoire.",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481014176,
                      "updated_at": 1481014176,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    },
                    {
                      "departmentId": 4,
                      "departmentName": "Neurology",
                      "departmentDescription": "A medical specialty dealing with disorders of the nervous system. Specifically, it deals with the diagnosis and treatment of all categories of disease involving the central, peripheral, and autonomic nervous systems, including their coverings, blood vessels, and all effector tissue, such as muscle. Includes the brain, spinal cord, and spinal cord injuries (SCI).",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481014176,
                      "updated_at": 1481014176,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    },
                    {
                      "departmentId": 5,
                      "departmentName": "Obstetrics/Gynecology",
                      "departmentDescription": "Specialist nurses, midwives and imaging technicians provide maternity services such as: antenatal and postnatal care, maternal and foetal surveillance, and prenatal diagnosis.",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481014176,
                      "updated_at": 1481014176,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    },
                    {
                      "departmentId": 6,
                      "departmentName": "Oncology",
                      "departmentDescription": "A branch of medicine that deals with cancer and tumors. A medical professional who practices oncology is an oncologist. The Oncology department provides treatments, including radiotherapy and chemotherapy, for cancerous tumors and blood disorders.",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481014801,
                      "updated_at": 1481014801,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    }
                  ],
                  "total": "6"
                }
              }
  post:
    description: To create a new department.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>departmentName</i></b> - departmentName is a title for each department like Emeregency.</p>
            <p><b><i>departmentDescription</i></b> - a short description <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "departmentName": "Accident and emergency (A&E)",
            "departmentDescription": "Also called Casualty Department, where you're likely to be taken if you have arrived in an ambulance or emergency situation."
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "departmentName": "Accident and emergency (A&E)",
                  "departmentDescription": "Also called Casualty Department, where you're likely to be taken if you have arrived in an ambulance or emergency situation.",
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1481013677,
                  "updated_at": 1481013677,
                  "departmentId": 1
                }
              }
  put:
    description: To edit a department.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>departmentId</i></b> - roomId is unique identifier for each department.</p>
            <p><b><i>departmentName</i></b> - departmentName is a title for each department like Emeregency.</p>
            <p><b><i>departmentDescription</i></b> - a short description <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "departmentId": 1,
            "departmentName": "Accident and emergency (A&E)",
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "departmentName": "Accident and emergency (A&E)",
                  "departmentDescription": "Also called Casualty Department, where you're likely to be taken if you have arrived in an ambulance or emergency situation.",
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1481013677,
                  "updated_at": 1481013677,
                  "departmentId": 1
                }
              }
  delete:
    description: To delete a department.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>departmentId</i></b> - roomId is unique identifier for each department.</p>
    body:
      application/json:
        example: |
          {
            "departmentId": 1
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/salon/room:
  description: Rooms endpoit provide you whole the functionality you need to work with room apis.
  get:
    description: To fetch a list of rooms. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible rooms will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>roomId</i></b> - roomId fetch specific room information. <u>Optional</u></p>
            <p><b><i>roomsId</i></b> - fetch a list of specific rooms information. <u>Optional</u></p>
            <p><b><i>roomName</i></b> - roomName fetch all rooms their name started with this paramter's value information. <u>Optional</u></p>
            <p><b><i>isForBarber</i></b> - fetch only rooms for barbers. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: '{"roomsId": [1,3]}'
    responses:
        200:
          body:
            application/json:
              example: |
                {
                  "success": 1,
                  "response": {
                    "Rooms": [
                      {
                        "roomId": 1,
                        "roomName": "Emergency",
                        "roomNumber": "1",
                        "isForBarber": 1,
                        "status": 1,
                        "created_at": 1479463340,
                        "updated_at": 1479463765,
                        "createdUserId": 459,
                        "updatedUserId": 459,
                        "merchantId": 472
                      },
                      {
                        "roomId": 3,
                        "roomName": "Emergency Heart",
                        "roomNumber": "1",
                        "isForBarber": 0,
                        "status": 1,
                        "created_at": 1479464162,
                        "updated_at": 1479464211,
                        "createdUserId": 459,
                        "updatedUserId": 459,
                        "merchantId": 472
                      }
                    ],
                    "total": "2"
                  }
                }
  post:
    description: To create a new room.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>roomName</i></b> - roomName is a title for each room like Emeregency.</p>
            <p><b><i>roomNumber</i></b> - roomNumber is for the situations we have more than one room for specific purpos for example if you have 3 emergency room you have roomNumber 1, 2 and 3 with the same roomName. <u>Optional</u></p>
            <p><b><i>isForBarber</i></b> - fetch only rooms for barbers. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "roomName": "Emergency",
            "roomNumber": "1",
            "isForBarber": 0,
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "roomName": "Emergency",
                  "roomNumber": "1",
                  "isForBarber": 0,
                  "createdUserId": 459,
                  "updatedUserId": 459,
                  "created_at": 1479463340,
                  "updated_at": 1479463340,
                  "roomId": 1,
                  "merchantId": 472
                }
              }
  put:
    description: To edit a room.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>roomId</i></b> - roomId is unique identifier for each room.</p>
            <p><b><i>roomName</i></b> - roomName is a title for each room like Emeregency.</p> <u>Optional</u></p>
            <p><b><i>roomNumber</i></b> - roomNumber is for the situations we have more than one room for specific purpos for example if you have 3 emergency room you have roomNumber 1, 2 and 3 with the same roomName. <u>Optional</u></p>
            <p><b><i>isForBarber</i></b> - fetch only rooms for barbers. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "roomId": 1,
            "isForBarber": 1,
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "roomId": 1,
                  "roomName": "Emergency",
                  "roomNumber": "1",
                  "isForBarber": 1,
                  "status": 1,
                  "created_at": 1479463340,
                  "updated_at": 1479463765,
                  "createdUserId": 459,
                  "updatedUserId": 459,
                  "merchantId": 472
                }
              }
  delete:
    description: To delete a room.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>roomId</i></b> - roomId is unique identifier for each room.</p>
    body:
      application/json:
        example: |
          {
            "roomId": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/salon/client:
  description: Patients endpoit provide you whole the functionality you need to work with client apis.
  get:
    description: To fetch a list of clients. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible products will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>clientId</i></b> - clientId fetch specific client information. <u>Optional</u></p>
            <p><b><i>clientsId</i></b> - to fetch a list of specific client information. <u>Optional</u></p>
            <p><b><i>clientHairColor</i></b> - clientBloodType fetch all clients with specific blood type. <u>Optional</u></p>
            <p><b><i>clientEyeColor</i></b> - clientBloodType fetch all clients with specific blood type. <u>Optional</u></p>
            <p><b><i>clientBirthday</i></b> - fetch all clients with specific birthday. <u>Optional</u></p>
            <p><b><i>clientGender</i></b> - fetch all clients with specific gender 0 is for women and 1 is for men. <u>Optional</u></p>
            <p><b><i>phoneNumber</i></b> - fetch all clients with specified phone number. <u>Optional</u></p>
            <p><b><i>name</i></b> - fetch all clients with specified name or family. <u>Optional</u></p>
            <p><b><i>email</i></b> - fetch all clients with specified email address. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch clients update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "clientId":1
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Clients": [
                    {
                      "clientId": 1,
                      "clientColor": "#ffffff",
                      "clientLabel": "",
                      "customerId": 13,
                      "clientBloodType": "B+",
                      "clientBirthday": "Dec 7th 1988",
                      "clientGender": 0,
                      "status": 1,
                      "created_at": 1479482582,
                      "updated_at": 1479483079,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "merchantId": 472,
                      "storeLocationId": 0,
                      "appointments": [],
                      "information": {
                        "firstName": "FL7lWmd4IrI,",
                        "lastName": "p5xzKzTubP0,",
                        "email": "5xMYFiXp_gDw_xLA7SC9OESmzZK-LstYbDgZ3v4Nzio,",
                        "phoneNumber": "546546",
                        "address1": "ZNmzTfdby84yWShlLCe1Uw,,",
                        "address2": "RBubUB9ddQWixhht5WGdnw,,",
                        "cityId": null,
                        "stateId": null,
                        "countryCode": null,
                        "pincode": null
                      }
                    },
                    {
                      "clientId": 2,
                      "clientColor": "#ffffff",
                      "clientLabel": "",
                      "customerId": 1,
                      "clientBloodType": "AB+",
                      "clientBirthday": "Dec 7th 1989",
                      "clientGender": 1,
                      "status": 1,
                      "created_at": 1479483059,
                      "updated_at": 1479483236,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "merchantId": 472,
                      "storeLocationId": 0,
                      "appointments": [
                        {
                          "appointmentId": 5,
                          "appointmentDate": "23-11-2016",
                          "appointmentStartTime": 1479718800,
                          "appointmentEndTime": 1479722400,
                          "barberId": 2,
                          "clientId": 2,
                          "roomId": 3,
                          "status": 1,
                          "created_at": 1480525261,
                          "updated_at": 1480525261,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472,
                          "storeLocationId": 424
                        },
                        {
                          "appointmentId": 6,
                          "appointmentDate": "25-11-2016",
                          "appointmentStartTime": 1479718800,
                          "appointmentEndTime": 1479722400,
                          "barberId": 5,
                          "clientId": 2,
                          "roomId": 1,
                          "status": 1,
                          "created_at": 1480651969,
                          "updated_at": 1480652438,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472,
                          "storeLocationId": 424
                        },
                        {
                          "appointmentId": 7,
                          "appointmentDate": "26-11-2016",
                          "appointmentStartTime": 1479718800,
                          "appointmentEndTime": 1479722400,
                          "barberId": 2,
                          "clientId": 2,
                          "roomId": 1,
                          "status": 1,
                          "created_at": 1480652147,
                          "updated_at": 1480652147,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472,
                          "storeLocationId": 424
                        },
                        {
                          "appointmentId": 8,
                          "appointmentDate": "26-12-2016",
                          "appointmentStartTime": 1479718800,
                          "appointmentEndTime": 1479722400,
                          "barberId": 2,
                          "clientId": 2,
                          "roomId": 1,
                          "status": 1,
                          "created_at": 1480652198,
                          "updated_at": 1480652198,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472,
                          "storeLocationId": 424
                        },
                        {
                          "appointmentId": 9,
                          "appointmentDate": "28-12-2016",
                          "appointmentStartTime": 1479718800,
                          "appointmentEndTime": 1479722400,
                          "barberId": 2,
                          "clientId": 2,
                          "roomId": 1,
                          "status": 1,
                          "created_at": 1480653214,
                          "updated_at": 1480653214,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472,
                          "storeLocationId": 424
                        }
                      ],
                      "information": {
                        "firstName": "FdyTIo0coNQ,",
                        "lastName": "y7EDW-yWxsw,",
                        "email": "CMzOn1V8HdO8y1DtVjqIrQ,,",
                        "phoneNumber": "A5xPRpHW7rpKYdWhghBjwg,,",
                        "address1": "NapT_JHucsk,",
                        "address2": "YyiODPHGDKg,",
                        "cityId": null,
                        "stateId": null,
                        "countryCode": null,
                        "pincode": null
                      }
                    }
                  ],
                  "total": "2"
                }
              }
  post:
    description: To create a new client.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>customerId</i></b> - customer id for current client.</p>
            <p><b><i>clientBloodType</i></b> - clientBloodType blood type for current client.</p>
            <p><b><i>clientGender</i></b> - Gender for current client 0 for women and 1 for men.</p>
            <p><b><i>clientBirthday</i></b> - birthday date for current client.</p>
    body:
      application/json:
        example: |
          {
            "customerId": 13,
            "clientBloodType": "AB+",
            "clientGender": 1,
            "clientBirthday": "Dec 7th 1989"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "customerId": 13,
                  "clientBloodType": "AB+",
                  "clientGender": 1,
                  "clientBirthday": "Dec 7th 1989",
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1479482582,
                  "updated_at": 1479482582,
                  "clientId": 1
                }
              }
  put:
    description: To edit a client.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>clientId</i></b> - customer id for current client.</p>
            <p><b><i>clientBloodType</i></b> - clientBloodType blood type for current client.</p>
            <p><b><i>clientGender</i></b> - Gender for current client 0 for women and 1 for men.</p>
            <p><b><i>clientBirthday</i></b> - birthday date for current client.</p>
    body:
      application/json:
        example: |
          {
            "clientId": 1,
            "clientBloodType": "B+",
            "clientGender": 0,
            "clientBirthday": "Dec 7th 1988"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "clientId": 1,
                  "customerId": 13,
                  "clientBloodType": "B+",
                  "clientBirthday": "Dec 7th 1988",
                  "clientGender": 0,
                  "status": 1,
                  "created_at": 1479482582,
                  "updated_at": 1479483079,
                  "createdUserId": 459,
                  "updatedUserId": 459,
                  "merchantId": 472
                }
              }
  delete:
    description: To delete a client.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>clientId</i></b> - clientId is unique identifier for each client.</p>
    body:
      application/json:
        example: |
          {
            "clientId": 2
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/salon/client/message:
  description: Patients message endpoit provide you whole the functionality you need to work with client message apis.
  post:
    description: To send a message to a client.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>clientId</i></b> - client id you want to send this message to.</p>
            <p><b><i>clients</i></b> - array of client id you want to send this message to all of them.</p>
            <p><b><i>type</i></b> - 'sms' or 'email'.</p>
            <p><b><i>message</i></b> - body of message.</p>
    body:
      application/json:
        example: |
          {
            "clientId": 1,
            "type": "sms",
            "message": "Hello, Tomorrow is your resevation date for initial consultation please come to hospital between 13:00 to 13:30"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/salon/barber:
  description: Barber endpoit provide you whole the functionality you need to work with barber apis.
  get:
    description: To fetch a list of barbers. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible rooms will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - barberId fetch specific barber information. <u>Optional</u></p>
            <p><b><i>barbersId</i></b> - to fetch a list of barbers information. <u>Optional</u></p>
            <p><b><i>barberName</i></b> - Name of barber. <u>Optional</u></p>
            <p><b><i>barberJob</i></b> - Job of barber, Physician or Reception. <u>Optional</u></p>
            <p><b><i>barberTitle</i></b> - Title of barber. "Dr. " <u>Optional</u></p>
            <p><b><i>day</i></b> - avaiable in specific day of week. <u>Optional</u></p>
            <p><b><i>status</i></b> - 1 for active 2 for inactive. <u>Optional</u></p>
            <p><b><i>start</i></b> - avaiable in specific time in a specific day of week. <u>Optional</u></p>
            <p><b><i>end</i></b> - avaiable in specific time in a specific day of week. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "updated_at": 1468062355,
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
                "success": 1,
                "response": {
                  "Barbers": [
                    {
                      "barberId": 1,
                      "barberName": "",
                      "barberLabel": "MS",
                      "email": "someemail@address.com",
                      "roleId": 43,
                      "phoneNumber": 98651321646,
                      "barberJob": "Pedicure",
                      "barberTitle": "Mr",
                      "barberColor": "#ffffff",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 0,
                      "created_at": 1479712067,
                      "updated_at": 1479712699,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "workingHours": [
                        {
                          "barberWorkingHourId": 18,
                          "barberId": 1,
                          "weekDay": "Monday",
                          "startTime": "09:00:00",
                          "endTime": "12:00:00",
                          "status": 1,
                          "merchantId": 472,
                          "created_at": 1479974276,
                          "updated_at": 1479974276,
                          "createdUserId": 459,
                          "updatedUserId": 459
                        },
                        {
                          "barberWorkingHourId": 19,
                          "barberId": 1,
                          "weekDay": "Friday",
                          "startTime": "09:00:00",
                          "endTime": "12:00:00",
                          "status": 1,
                          "merchantId": 472,
                          "created_at": 1479974276,
                          "updated_at": 1479975217,
                          "createdUserId": 459,
                          "updatedUserId": 459
                        },
                        {
                          "barberWorkingHourId": 20,
                          "barberId": 1,
                          "weekDay": "Tuesday",
                          "startTime": "09:00:00",
                          "endTime": "12:00:00",
                          "status": 1,
                          "merchantId": 472,
                          "created_at": 1479974276,
                          "updated_at": 1479974276,
                          "createdUserId": 459,
                          "updatedUserId": 459
                        },
                        {
                          "barberWorkingHourId": 21,
                          "barberId": 1,
                          "weekDay": "Friday",
                          "startTime": "09:00:00",
                          "endTime": "12:00:00",
                          "status": 1,
                          "merchantId": 472,
                          "created_at": 1479974276,
                          "updated_at": 1479974276,
                          "createdUserId": 459,
                          "updatedUserId": 459
                        }
                      ]
                    },
                    {
                      "barberId": 2,
                      "barberName": "",
                      "email": "someemail@address.com",
                      "roleId": 43,
                      "phoneNumber": 98651321646,
                      "barberLabel": "LV",
                      "barberJob": "Hair Styler",
                      "barberTitle": "Mis",
                      "barberColor": "#ffffff",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 0,
                      "created_at": 1479712463,
                      "updated_at": 1479712463,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "workingHours": [
                        {
                          "barberWorkingHourId": 26,
                          "barberId": 2,
                          "weekDay": "Monday",
                          "startTime": "13:00:00",
                          "endTime": "17:00:00",
                          "status": 1,
                          "merchantId": 472,
                          "created_at": 1479974276,
                          "updated_at": 1479974276,
                          "createdUserId": 459,
                          "updatedUserId": 459
                        }
                      ]
                    },
                    {
                      "barberId": 3,
                      "barberName": "Helen Rodrigez",
                      "email": "someemail@address.com",
                      "roleId": 43,
                      "phoneNumber": 98651321646,
                      "barberJob": "Pedicure",
                      "barberTitle": "Miss.",
                      "barberColor": "#ffffff",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 0,
                      "created_at": 1480588544,
                      "updated_at": 1480588544,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "workingHours": []
                    },
                    {
                      "barberId": 4,
                      "email": "someemail@address.com",
                      "roleId": 43,
                      "phoneNumber": 98651321646,
                      "barberName": "Sara Martin",
                      "barberJob": "Hair Styler",
                      "barberTitle": "Ms.",
                      "barberColor": "#ffffff",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 0,
                      "created_at": 1480588587,
                      "updated_at": 1480588587,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "workingHours": []
                    },
                    {
                      "barberId": 5,
                      "email": "someemail@address.com",
                      "roleId": 43,
                      "phoneNumber": 98651321646,
                      "barberName": "Leon Brown",
                      "barberJob": "Hair Styler",
                      "barberTitle": "Mr.",
                      "barberColor": "#ffffff",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 0,
                      "created_at": 1480588690,
                      "updated_at": 1480588690,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "workingHours": []
                    }
                  ],
                  "total": "5"
                }
              }
  post:
    description: To create a new barber.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberName</i></b> - Name of barber.</p>
            <p><b><i>barberLabel</i></b> - Label of barber.</p>
            <p><b><i>barberJob</i></b> - Job of barber, Physician or Reception.</p>
            <p><b><i>departmentId</i></b> - unique identifier for the department.</p>
            <p><b><i>barberTitle</i></b> - Title of barber. "Dr. "</p>
            <p><b><i>barberColor</i></b> - HEX value of barberColor "#ffffff".</p>
            <p><b><i>userId</i></b> - unique identifier for the user.</p>
            <p><b><i>file</i></b> - file base 64 encode.</p>
            <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
            <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
    body:
      application/json:
        example: |
          {
            "userId": 123,
            "barberName": "Helen Rodrigez",
            "barberJob": "Pedicure",
            "commissionType": "Fix",
            "commissionFee": 1000,
            "file": "iVBORw0KGgoAAAANSUhEUgAAADQAAABQCAIAAADZf8HwAAAAA3NCSVQICAjb4U\/gAAAAGXRFWHRTb2Z0d2FyZQBnbm9tZS1zY3JlZW5zaG907wO\/PgAAAGtJREFUaIHtzjEBwCAAwDBA2R4M4F\/MHOzow45EQeazz\/irdTvwRa6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+SqF7wIAXd1UjysAAAAAElFTkSuQmCC",
            "barberTitle": "Miss."
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "barberId": 21,
                      "userId": 1441,
                      "departmentId": 113,
                      "barberLabel": "NA",
                      "barberName": "Nandini Anil Bhagat",
                      "barberJob": "DDS",
                      "barberTitle": "Mrs",
                      "barberColor": "#e336cc",
                      "commissionType": "Fix",
                      "commissionFee": 1000,
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1486449564,
                      "updated_at": 1486648269,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "barberImage": "v2\/salonapp\/barbers\/459__20170209072107.png"
                  }
              }
  put:
    description: To edit a barber.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - barberId is unique identifier for each barber.</p>
            <p><b><i>barberName</i></b> - Name of barber. <u>Optional</u></p>
            <p><b><i>barberLabel</i></b> - Label of barber.</p>
            <p><b><i>barberJob</i></b> - Job of barber, Physician or Reception. <u>Optional</u></p>
            <p><b><i>barberTitle</i></b> - Title of barber. "Dr. " <u>Optional</u></p>
            <p><b><i>barberColor</i></b> - HEX value of barberColor "#ffffff". <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "barberId":1,
            "barberJob":"Orthopedist"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "userId": 123,
                  "barberId": 1,
                  "barberJob": "Orthopedist",
                  "barberTitle": "Dr.",
                  "barberColor": "#ffffff",
                  "commissionType": "Fix",
                  "commissionFee": 1000,
                  "status": 1,
                  "created_at": 1479712067,
                  "updated_at": 1479712279,
                  "createdUserId": 459,
                  "updatedUserId": 459,
                  "merchantId": 472
                }
              }
  delete:
    description: To delete a barber.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - barberId is unique identifier for each barber.</p>
    body:
      application/json:
        example: |
          {
            "barberId": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/salon/barber/file:
  description: Service endpoit provide you whole the functionality you need to work with service apis.
  get:
    description: To fetch image content.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberImage</i></b> image to load.</p>
    body:
      application/json:
        example: |
          {
              "barberImage": "v2\/salonapp\/services\/459__20170209061447.png"
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
                "success": 1,
                "response": {
                    "filename": "v2\/salonapp\/services\/459__20170209061447.png",
                    "data": "iVBORw0KGgoAAAANSUhEUgAAADQAAABQCAIAAADZf8HwAAAAA3NCSVQICAjb4U\/gAAAAGXRFWHRTb2Z0d2FyZQBnbm9tZS1zY3JlZW5zaG907wO\/PgAAAGtJREFUaIHtzjEBwCAAwDBA2R4M4F\/MHOzow45EQeazz\/irdTvwRa6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+SqF7wIAXd1UjysAAAAAElFTkSuQmCC"
                }
              }
/salon/barber/working-hours:
  description: Barber Working Hour endpoit provide you whole the functionality you need.
  post:
    description: To create and edit a barber working hour row.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - unique identifier for the doctor.</p>
            <p><b><i>workingHours</i></b> - array of "day", "start" and "end" to create plus "doctorWorkingHourId" for edit only.</p>
    body:
      application/json:
        example: |
          {
            "barberId": 1,
            "workingHours": [
              {
                "day": "Monday",
                "start": "9:00",
                "end": "12:00"
              },
              {
                "day": "Monday",
                "start": "14:00",
                "end": "18:00"
              },
              {
                "day": "Tuesday",
                "start": "9:00",
                "end": "12:00"
              },
              {
                "day": "Friday",
                "start": "9:00",
                "end": "12:00"
              },
              {
                "barberWorkingHourId": 19,
                "day": "Friday",
                "start": "9:00",
                "end": "12:00"
              }
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "barberId": 1598,
                    "merchantId": 472,
                    "weekDay": "Monday",
                    "startTime": "9:00",
                    "endTime": "12:00",
                    "created_at": 1481612359,
                    "updated_at": 1481612359,
                    "barberWorkingHourId": 25708
                  },
                  {
                    "barberId": 1598,
                    "merchantId": 472,
                    "weekDay": "Monday",
                    "startTime": "14:00",
                    "endTime": "18:00",
                    "created_at": 1481612359,
                    "updated_at": 1481612359,
                    "barberWorkingHourId": 25709
                  },
                  {
                    "barberId": 1598,
                    "merchantId": 472,
                    "weekDay": "Tuesday",
                    "startTime": "9:00",
                    "endTime": "12:00",
                    "created_at": 1481612359,
                    "updated_at": 1481612359,
                    "barberWorkingHourId": 25710
                  },
                  {
                    "barberId": 1598,
                    "merchantId": 472,
                    "weekDay": "Friday",
                    "startTime": "9:00",
                    "endTime": "12:00",
                    "created_at": 1481612359,
                    "updated_at": 1481612359,
                    "barberWorkingHourId": 25711
                  },
                  {
                    "barberWorkingHourId": 25707,
                    "doctorId": 1598,
                    "weekDay": "Friday",
                    "startTime": "9:00",
                    "endTime": "12:00",
                    "status": 1,
                    "merchantId": 472,
                    "created_at": 1481612271,
                    "updated_at": 1481612359,
                    "createdUserId": 0,
                    "updatedUserId": 0
                  }
                ]
              }
  delete:
    description: To delete a doctor working hour.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberWorkingHourId</i></b> - unique identifier for the doctor working hour.</p>
    body:
      application/json:
        example: |
          {
            "barberWorkingHourId": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/salon/barber/service:
  description: Barber Service endpoit provide you whole the functionality you need to work with barber service apis.
  post:
    description: To create a new barber service row.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - unique identifier for the barber.</p>
            <p><b><i>serviceId</i></b> - unique identifier for the service.</p>
            <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
            <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
            an array of above information is also acceptable.
    body:
      application/json:
        example: |
          {
            "barberId": 1,
            "serviceId": 2,
            "commissionType": "Fix",
            "commissionFee": 1000
          } |
            [
              {
                "barberId": 1,
                "serviceId": 2,
                "commissionType": "Fix",
                "commissionFee": 1000
              },
              {
                "barberId": 2,
                "serviceId": 2,
                "commissionType": "Fix",
                "commissionFee": 1000
              }
            ]
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "barberId": 1,
                  "serviceId": 2,
                  "merchantId": 472,
                  "commissionType": "Fix",
                  "commissionFee": 1000,
                  "created_at": 0,
                  "updated_at": 1481035306,
                  "createdUserId": 0,
                  "updatedUserId": 459
                }
              }
  put:
    description: To edit a barber service.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - unique identifier for the barber.</p>
            <p><b><i>serviceId</i></b> - unique identifier for the service.</p>
            <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
            <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
    body:
      application/json:
        example: |
          {
            "barberId": 1,
            "serviceId": 2,
            "commissionType": "Fix",
            "commissionFee": 1000
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "barberId": 1,
                  "serviceId": 2,
                  "merchantId": 472,
                  "commissionType": "Fix",
                  "commissionFee": 1000,
                  "created_at": 0,
                  "updated_at": 1481035306,
                  "createdUserId": 0,
                  "updatedUserId": 459
                }
              }
  delete:
    description: To delete a doctor.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - unique identifier for the barber.</p>
            <p><b><i>serviceId</i></b> - unique identifier for the service.</p>
    body:
      application/json:
        example: |
          {
            "barberId": 3,
            "serviceId": 2
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/salon/barber/notification:
  description: Barber notification endpoit provide the functionality to send notification for a reception.
  post:
    description: To send a notification to a reception.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>receptionId</i></b> - Name of barber.</p>
            <p><b><i>message</i></b> - the messages you want to send to a reception.</p>
    body:
      application/json:
        example: |
          {
            "barberId": 1,
            "message": "Requesting the next client."
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
                "success": 1,
                "response": []
              }
/salon/appointment:
  description: Appointment endpoit provide you whole the functionality you need to work with appointment apis.
  get:
    description: To fetch a list of clients. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible products will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client (device).
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentStatusValue</i></b> - fetch list of appointment at a specific status 0 for open, 1 for cancel by doctor, 2 for cancel by patient, 3 for patient check-in, 4 for patient check-out and 5 for waiting. <u>Optional</u></p>
            <p><b><i>appointmentId</i></b> - appointmentId fetch specific appointment information. <u>Optional</u></p>
            <p><b><i>apointmentsId</i></b> - fetch a list of specific appointment. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - fetch a all appointment for specific barber. <u>Optional</u></p>
            <p><b><i>barbersId</i></b> - fetch a all appointment for some barbers. <u>Optional</u></p>
            <p><b><i>roomId</i></b> - ffetch a all appointment for specific room. <u>Optional</u></p>
            <p><b><i>roomsId</i></b> - fetch a all appointment for some rooms. <u>Optional</u></p>
            <p><b><i>clientId</i></b> - fetch a all appointment for specific client. <u>Optional</u></p>
            <p><b><i>clientsId</i></b> - fetch a all appointment for some clients. <u>Optional</u></p>
            <p><b><i>clientId</i></b> - clientId fetch alll appointments for specific client. <u>Optional</u></p>
            <p><b><i>roomId</i></b> - clientId fetch alll appointments for specific room. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - clientId fetch alll appointments for specific barber. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch clients update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "appointmentStatusValue": 2
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Appointments": [
                    {
                      "appointmentId": 32013,
                      "customerId": 41646,
                      "clientId": 39849,
                      "appointmentDate": "21-Sep-17",
                      "appointmentStartTime": 1481265750,
                      "appointmentEndTime": 1481266661,
                      "consultationType": "debitis voluptas aliquam",
                      "barberId": 2104,
                      "roomId": 136,
                      "status": 1,
                      "created_at": 1481265750,
                      "updated_at": 1481265750,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "appointmentStatuses": [
                        {
                          "appointmentStatusId": 128394,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 0,
                          "status": 2,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "appointmentStatusId": 128395,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 1,
                          "status": 2,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "appointmentStatusId": 128396,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 2,
                          "status": 2,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "appointmentStatusId": 128397,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 3,
                          "status": 2,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "appointmentStatusId": 128398,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 4,
                          "status": 2,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "appointmentStatusId": 128399,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 5,
                          "status": 1,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        }
                      ],
                      "service": {
                        "serviceId": 135,
                        "serviceLabel": "NU",
                        "serviceImage": null,
                        "storeLocationId": 424,
                        "serviceName": "Nutrition and dietetics",
                        "serviceNumberOfSession": 2,
                        "serviceDescription": "Ut sint recusandae minus et voluptatum. Sed voluptates nesciunt velit labore pariatur. Quae laboriosam eligendi et non et iste magnam.",
                        "servicePrice": 98,
                        "serviceTypeOfPrice": 1,
                        "serviceDuration": "00:15:00",
                        "serviceColor": "#bf6518",
                        "merchantId": 472,
                        "status": 1,
                        "created_at": 1481265441,
                        "updated_at": 1481265441,
                        "createdUserId": 459,
                        "updatedUserId": 459
                      },
                      "customer": {
                        "customerId": 41646,
                        "firstName": "Gayatri",
                        "lastName": "Oza",
                        "email": "roma06@yahoo.com",
                        "phoneNumber": "1319333102688",
                        "password_hash": null,
                        "otp": null,
                        "dob": "1964-09-23",
                        "address1": "59, Chandpole, Gandhinagar - 372567",
                        "address2": null,
                        "created_at": 1481265704,
                        "updated_at": 1481265704,
                        "createdUserId": 459,
                        "updatedUserId": 459,
                        "status": 1,
                        "cityId": null,
                        "stateId": null,
                        "pincode": null,
                        "countryCode": null
                      },
                      "client": {
                        "clientId": 39849,
                        "clientColor": "#401ae9",
                        "clientLabel": "GO",
                        "customerId": 41646,
                        "clientBirthday": "1964-09-23",
                        "clientGender": 0,
                        "status": 1,
                        "created_at": 1481265704,
                        "updated_at": 1481265704,
                        "createdUserId": 459,
                        "updatedUserId": 459,
                        "merchantId": 472,
                        "storeLocationId": 424
                      },
                      "barber": {
                        "barberId": 2104,
                        "userId": 0,
                        "barberLabel": "BI",
                        "barberName": "Binita Tara",
                        "barberJob": "DDS",
                        "barberTitle": "DC",
                        "barberColor": "#7828ec",
                        "status": 1,
                        "merchantId": 472,
                        "storeLocationId": 424,
                        "created_at": 1481265515,
                        "updated_at": 1481265515,
                        "createdUserId": 459,
                        "updatedUserId": 459,
                        "departmentId": 37
                      },
                      "room": {
                        "roomId": 136,
                        "roomName": "nursery",
                        "roomNumber": "2",
                        "isForDoctor": 0,
                        "status": 1,
                        "created_at": 1481265442,
                        "updated_at": 1481265442,
                        "createdUserId": 459,
                        "updatedUserId": 459,
                        "merchantId": 472,
                        "storeLocationId": 424
                      }
                    }
                  ],
                  "total": "1"
                }
              }
  post:
    description: To create a new appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>services</i></b> - an array of unique identifier for the service this appointment is going to.</p>
            <p><b><i>roomId</i></b> - unique identifier for the room this appointment is going to take place.</p>
            <p><b><i>barberId</i></b> - unique identifier for the barber.</p>
            <p><b><i>clientId</i></b> - unique identifier for the client.</p>
            <p><b><i>appointmentDate</i></b> - date of appointment with "d-M-y" format pattern as described in the ICU manual.</p>
            <p><b><i>appointmentStartTime</i></b> - start of appointment timestamp.</p>
            <p><b><i>appointmentEndTime</i></b> - end of appointment timestamp.</p>
    body:
      application/json:
        example: |
          {
            "services": [2, 5],
            "roomId": 1,
            "barberId": 1,
            "clientId": 1,
            "appointmentDate": "21-11-2016",
            "appointmentStartTime": 1479718800,
            "appointmentEndTime": 1479722400
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "roomId": 1,
                  "barberId": 2,
                  "clientId": 2,
                  "appointmentDate": "26-11-2016",
                  "appointmentStartTime": 1479718800,
                  "appointmentEndTime": 1479722400,
                  "merchantId": 472,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "storeLocationId": 424,
                  "created_at": 1480652147,
                  "updated_at": 1480652147,
                  "appointmentId": 7
                }
              }
  put:
    description: To edit an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentId</i></b> - appointment id is unique identifier for appointment you want to edit.</p>
            <p><b><i>roomId</i></b> - unique identifier for the room this appointment is going to take place. <u>Optional</u></p>
            <p><b><i>barberId</i></b> - unique identifier for the barber. <u>Optional</u></p>
            <p><b><i>clientId</i></b> - unique identifier for the client. <u>Optional</u></p>
            <p><b><i>appointmentDate</i></b> - date of appointment with "d-M-y" format pattern as described in the ICU manual. <u>Optional</u></p>
            <p><b><i>appointmentStartTime</i></b> - start of appointment timestamp. <u>Optional</u></p>
            <p><b><i>appointmentEndTime</i></b> - end of appointment timestamp. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "appointmentId": 1,
            "barberId": 2
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "appointmentId": 6,
                  "appointmentDate": "25-11-2016",
                  "appointmentStartTime": 1479718800,
                  "appointmentEndTime": 1479722400,
                  "barberId": 5,
                  "clientId": 2,
                  "roomId": 1,
                  "status": 1,
                  "created_at": 1480651969,
                  "updated_at": 1480652438,
                  "createdUserId": 459,
                  "updatedUserId": 459,
                  "merchantId": 472,
                  "storeLocationId": 424
                }
              }
  delete:
    description: To delete an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentId</i></b> - appointment id is unique identifier for appointment you want to edit.</p>
    body:
      application/json:
        example: |
          {
            "appointmentId": 5
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/salon/appointment/status:
  description: Appointment status endpoit provide you create/edit/delete the functionality you need to work with appointment status apis.
  post:
    description: To create a new appointment status.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentId</i></b> - appointmentId is unique identifier for each appointment.</p>
            <p><b><i>appointmentStatusValue</i></b> - value can be 0 for open, 1 for canceled by client, 2 canceled by barber, 3 check in, 4 check out.</p>
    body:
      application/json:
        example: |
          {
            "appointmentId": 5,
            "appointmentStatusValue": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "appointmentId": 5,
                  "appointmentStatusValue": 3,
                  "merchantId": 472,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1480652851,
                  "updated_at": 1480652851,
                  "appointmentStatusId": 4
                }
              }
  put:
    description: To edit an appointment status.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentStatusId</i></b> - appointmentStatusId is a unique id for each appointment status.</p></p>
            <p><b><i>appointmentStatusValue</i></b> - new status value for appointment status</p>
    body:
      application/json:
        example: |
          {
            "appointmentStatusId": 1,
            "appointmentStatusValue": 1
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "appointmentId": 1,
                  "appointmentStatusValue": 1,
                  "merchantId": 472,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1479755189,
                  "updated_at": 1479755189,
                  "appointmentStatusId": 1
                }
              }
  delete:
    description: To delete a room.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentStatusId</i></b> - appointmentStatusId is unique identifier for each appointment status.</p>
    body:
      application/json:
        example: |
          {
            "appointmentStatusId": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/salon/service:
  description: Service endpoit provide you whole the functionality you need to work with service apis.
  get:
    description: To fetch a list of services. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible products will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceId</i></b> - serviceId fetch specific service information. <u>Optional</u></p>
            <p><b><i>servicesId</i></b> - to fetch a list of services information. <u>Optional</u></p>
            <p><b><i>productCategortyId</i></b> - fetch a list of services belong to a productCategory. <u>Optional</u></p>
            <p><b><i>productCategoriesId</i></b> - fetch a list of services belong to some product categories. <u>Optional</u></p>
            <p><b><i>servicesId</i></b> - to fetch a list of services information. <u>Optional</u></p>
            <p><b><i>serviceName</i></b> - serviceName fetch all services with the name start with serviceName. <u>Optional</u></p>
            <p><b><i>serviceLabel</i></b> - serviceLabel fetch all services with the label equal to serviceLabel. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch services update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "updated_at": 1468062355
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
                "success": 1,
                "response": {
                  "Services": [
                    {
                      "serviceId": 1,
                      "serviceLabel": "SW",
                      "serviceImage": null,
                      "storeLocationId": 424,
                      "serviceName": "Shave and wash214",
                      "serviceNumberOfSession": 1,
                      "serviceDescription": "Come to Premium Barbershop and experience our brand of the classic NYC barber.",
                      "servicePrice": 10,
                      "serviceTypeOfPrice": 0,
                      "serviceDuration": "01:15:00",
                      "serviceColor": "#FFEEDD",
                      "merchantId": 472,
                      "status": 1,
                      "created_at": 1481117029,
                      "updated_at": 1481117029,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "commissionType": "%",
                      "commissionFee": 0,
                      "productCategoryId": 34,
                      "productCategory": {
                        "productCategoryId": 34,
                        "parentProductCategoryId": null,
                        "productCategoryName": "Electronic",
                        "status": 1,
                        "createdUserId": 468,
                        "updatedUserId": 468,
                        "created_at": 1469428718,
                        "updated_at": 1469428718,
                        "merchantId": 0,
                        "productCategoryColor": "#FFFFFF"
                      }
                    }
                  ],
                  "total": "1"
                }
              }
  post:
    description: To create a new service.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceName</i></b> - name of the service.</p>
            <p><b><i>serviceNumberOfSession</i></b> - how many session this service needs. <u>Optional</u></p>
            <p><b><i>productCategoriId</i></b> - id of the product category. <u>Optional</u></p>
            <p><b><i>serviceLabel</i></b> - label of service.</p>
            <p><b><i>servicePrice</i></b> - price of service.</p>
            <p><b><i>serviceTypeOfPrice</i></b> - 0 for fixed and 1 for hourly price.</p>
            <p><b><i>serviceDuration</i></b> - how long it will take.</p>
            <p><b><i>serviceColor</i></b> - color of service "#ffffff".</p>
            <p><b><i>serviceDescription</i></b> - service description. <u>Optional</u></p>
            <p><b><i>file</i></b> - base 64 encoded value of the image file. <u>Optional</u></p>
            <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
            <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
    body:
      application/json:
        example: |
          {
            "file": "iVBORw0KGgoAAAANSUhEUgAAADQAAABQCAIAAADZf8HwAAAAA3NCSVQICAjb4U\/gAAAAGXRFWHRTb2Z0d2FyZQBnbm9tZS1zY3JlZW5zaG907wO\/PgAAAGtJREFUaIHtzjEBwCAAwDBA2R4M4F\/MHOzow45EQeazz\/irdTvwRa6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+SqF7wIAXd1UjysAAAAAElFTkSuQmCC",
            "serviceColor": "#FFFFFF",
            "commissionType": "Fix",
            "commissionFee": 1000,
            "productCategoryId": 43,
            "serviceName": "Shave",
            "serviceLabel": "SH",
            "serviceNumberOfSession": 1,
            "servicePrice": 10,
            "serviceTypeOfPrice": 0,
            "serviceDuration": "1:15",
            "serviceDescription": "Come to Premium Barbershop and experience our brand of the classic NYC barber."
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "serviceColor": "#FFFFFF",
                      "commissionType": "Fix",
                      "commissionFee": 1000,
                      "productCategoryId": 43,
                      "serviceName": "Shave",
                      "serviceLabel": "SH",
                      "serviceNumberOfSession": 1,
                      "servicePrice": 10,
                      "serviceTypeOfPrice": 0,
                      "serviceDuration": "1:15",
                      "serviceDescription": "Come to Premium Barbershop and experience our brand of the classic NYC barber.",
                      "merchantId": 466,
                      "updatedUserId": 459,
                      "createdUserId": 459,
                      "storeLocationId": 424,
                      "status": 1,
                      "serviceImage": "v2\/salonapp\/services\/459__20170209061447.png",
                      "created_at": 1486644289,
                      "updated_at": 1486644289,
                      "serviceId": 1255
                  }
              }

  put:
    description: To edit a service.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceId</i></b> - id of the service.</p>
            <p><b><i>serviceName</i></b> - name of the service.</p>
            <p><b><i>serviceNumberOfSession</i></b> - how many session this service needs. <u>Optional</u></p>
            <p><b><i>productCategoriId</i></b> - id of the product category. <u>Optional</u></p>
            <p><b><i>serviceLabel</i></b> - label of service.</p>
            <p><b><i>servicePrice</i></b> - price of service.</p>
            <p><b><i>serviceTypeOfPrice</i></b> - 0 for fixed and 1 for hourly price.</p>
            <p><b><i>serviceDuration</i></b> - how long it will take.</p>
            <p><b><i>serviceColor</i></b> - color of service "#ffffff".</p>
            <p><b><i>serviceDescription</i></b> - service description. <u>Optional</u></p>
            <p><b><i>file</i></b> - base 64 encoded value of the image file. <u>Optional</u></p>
            <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
            <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
    body:
      application/json:
        example: |
          {
            "serviceId": 2,
            "serviceNumberOfSession": 2
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "serviceName": "Initial Consultation",
                  "serviceNumberOfSession": 2,
                  "productCategoryId": 43,
                  "serviceLabel": "SH",
                  "servicePrice": 10,
                  "serviceTypeOfPrice": 0,
                  "serviceDuration": "1:15",
                  "serviceColor": "#ffffff",
                  "serviceDescription": "Patient for the first time need to be check with a barber for inital consultation.",
                  "merchantId": 472,
                  "commissionType": "Fix",
                  "commissionFee": 1000,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "storeLocationId": 424,
                  "created_at": 1480078941,
                  "updated_at": 1480078941,
                  "serviceId": 2
                }
              }
  delete:
    description: To delete a service.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceId</i></b> - id of the service.</p>
    body:
      application/json:
        example: |
          {
            "serviceId": 1
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/salon/service/file:
  description: Service endpoit provide you whole the functionality you need to work with service apis.
  get:
    description: To fetch image content.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceImage</i></b> image to load.</p>
    body:
      application/json:
        example: |
          {
              "serviceImage": "v2\/salonapp\/services\/459__20170209061447.png"
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
                "success": 1,
                "response": {
                    "filename": "v2\/salonapp\/services\/459__20170209061447.png",
                    "data": "iVBORw0KGgoAAAANSUhEUgAAADQAAABQCAIAAADZf8HwAAAAA3NCSVQICAjb4U\/gAAAAGXRFWHRTb2Z0d2FyZQBnbm9tZS1zY3JlZW5zaG907wO\/PgAAAGtJREFUaIHtzjEBwCAAwDBA2R4M4F\/MHOzow45EQeazz\/irdTvwRa6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+SqF7wIAXd1UjysAAAAAElFTkSuQmCC"
                }
              }
/user/login:
  description: logging in user
  post:
    description: logging in user
    queryParameters:
       param1:
        type: string
        required: true
        description: generated imei for the user.
        displayName: IMEI
       param2:
        type: string
        required: true
        description: username should be a valid email address
        displayName: Username (e-mail)
       param3:
        type: string
        required: true
        description: password given while registeration
        displayName: Password
       param4:
        type: string
        required: true
        description: GCMId for sending notifications.
        displayName: GcmId
       param5:
        type: string
        required: true
        description: Version of the client app
        displayName: Version
       param6:
        type: integer
        required: false
        description: SourceId of the app. This can be obtained from masterdata sources call
        displayName: sourceId
       param7:
        type: string
        required: false
        description: location of the user. Default is 0,0
        displayName: location
    responses:
      200:
        body:
          application/json:
            example: |
              {"success":1,
              "response":{"id":16,"userRoleId":0,"username":"ty@ty.com","merchantId":14,"auth_key":"jB2VMdsfsdfslWOA1GBelLDFsxi4jfmPHGxyrb","auth_key_creationtime":1455890591,"password_hash":"$2y$13$JxMasFFwcN0WLz12VO./SeFADvasXxxVIEQuocWlM7BzX3QvQabuW","userMobileNumber":"1234567890","userFirstName":"ttt","userMiddleName":"hhh","userLastName":"high","userLogo":"","CityId":0,"StateId":0,"PINCode":"23652","CountryCode":"IN","userAddress1":"thhh","userAddress2":"yyklk##","userIMEI":"DpndIb","userPANNumber":"566416666","userAppVersion":"0.00","dateOfBirth":"17.03.2016","created_at":1455712023,"updated_at":1455890591}}
/user/coldlogin:
  description: for generating new token
  post:
    description: for generating new token
    queryParameters:
       param1:
        type: string
        required: true
        description: generated imei for the user.
        displayName: IMEI
       param2:
        type: string
        required: true
        description: this json object should include username, password, merchantId, sourceId and userId keys. Optional keys are location
        displayName: json object
/user/register:
  description: Api call for registering a new user
  post:
    description: Api call for registering a new user
    queryParameters:
      param1:
        required: true
        displayName: Json string
        description: Below keys are accepted
          <p><b>IMEI</b> - mobile imei</p>
          <p><b>Username (mandatory)</b> - email of the user</p>
          <p><b>Password (mandatory)</b> - Password of the user</p>
          <p><b>UserFirstName (mandatory)</b> - First name of the user</p>
          <p><b>UserMiddleName</b> - Middle name of the user</p>
          <p><b>UserLastName (mandatory)</b> - Last name of the user</p>
          <p><b>UserMobileNumber (mandatory)</b> - Mobile number of the user</p>
          <p><b>UserPANNumber</b> - User's Pan number</p>
          <p><b>BusinessName (mandatory)</b> - Company name (mandatory)</p>
          <p><b>CompanyPANCode</b> - Company PAN Code</p>
          <p><b>YearlyRevenue</b> - Company Yearly Revenue</p>
          <p><b>BusinessTypeId</b> - Business Type id obtained from business types call</p>
          <p><b>Industry (mandatory)</b> - Selected Industry obtained from industry call. If "other" industry is selected, send other industry name instead of id</p>
          <p><b>Category (mandatory)</b> - Selected Category obtained from industry call. If "other" category is selected, send other category name instead of id.</p>
          <p><b>Subcategory</b> - Selected subcategory id. This field doesnt support other.</p>
          <p><b>CityId (mandatory)</b> - Selected city id</p>
          <p><b>StateId (mandatory)</b> - Selected state id</p>
          <p><b>DateOfBirth</b> - User's birthday in dd.mm.YYYY format</p>
          <p><b>PINCode</b> - Pincode for user's location</p>
          <p><b>CountryCode (mandatory)</b> - 2-digit code of the selected country. You can also send the country id if obtained from country call</p>
          <p><b>Address1</b> - Address line 1</p>
          <p><b>Address2</b> - Address line 2</p>
          <p><b>sourceId</b> - SourceId for generating the token</p>
          <p><b>registeredReferralCode</b> - referralCode of the referred merchant</p>
/user/check:
  description: Api call for checking if user exists with given details
  post:
    description: Api call for checking if user exists with given details
    queryParameters:
      param1:
        required: true
        displayName: Json string
        description: Below keys are accepted
          <p><b>username</b> - username (email) of the user to check</p>
          <p><b>mobile</b> - mobile number of the user to check</p>
    responses:
      200:
        body:
          application/json:
            example: |
              {"success":1,"response":{"username":{"exists":true,"message":"There is already a user with given details."},"mobile":{"exists":false,"message":"There is no user found with given details."}}}
/user/profile:
  description: To update user and merchant data
  put:
    description: To update user and merchant data
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        type: string
        displayName: json string
        description: key value pair in json string. Available params are
      body:
      application/json:
        example: |
                EX1
                 {
                  "userId":455,
                  "roleId":1,
                  "username":"m@m.com",
                  "merchantId":466,
                  "storeLocationId":0,
                  "userMobileNumber":"+919960947632",
                  "userFirstName":"Satish",
                  "userMiddleName":"Uttamrao",
                  "userLastName":"Charmal",
                  "userImage":"v2/productimages/455__20160802065859.jpeg",
                  "userCityId":3159,
                  "cityName":"Kopergaon",
                  "userStateId":13,
                  "stateName":"Maharashtra",
                  "pincode":"423601",
                  "userAddress1":"2342",
                  "userAddress2":"Mahape",
                  "userPanNumber":"",
                  "dateOfBirth":"",
                  "Industry":"other",
                  "Category":"other",
                  }
                  EX2
                    {

                    "merchantId":466,
                    "planId":1,
                    "businessTypeId":1,
                    "planExpiryDate":"0000-00-00 00:00:00",
                    "industryId":5,
                    "countryCode":"IN",
                    "stateId":13,
                    "cityId":2949,
                    "areaId":0,
                    "merchantCompanyName":"clover infotech",
                    "merchantPANCode":"ADERP1242K",
                    "merchantYearlyRevenue":6,
                    "merchantAllowedUser":1,
                    "merchantTransactionStatus":"ACTIVE",
                    "Industry":"other",
                    "Category":"other"
                    "Subcategory":[
                    43,
                    44,
                    47
                    ]
                    }
/user/changepassword:
  description: To change user's password
  put:
    description: To change user's password
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        type: string
        displayName: json string
        description: key value pair in json string. Available params are
            <br>currentPassword
            <br>newPassword
/user/invite:
  description: To invite other users to join to a merchant.
  post:
    description: To invite other users to join to a merchant.
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: Json String
        description: Json array of users to invite. Keys are below.
                    email - email of user. This is required.
                    userFirstname - firstname of user. This is optional.
                    userLastname - Lastname of the invited user. Its optional.
                    Currently, users are invited with Merchant user role and it's not allowed to send roleId on invitation.
      body:
      application/json:
        example: |
          [
            {
            "userFirstName":"vinit.choudhari@epaisa.com",
            "userLastName":"vinit",
            "email":"choudhari",
            "roleId":{
            "roleId":1,
            "merchantId":"0",
            "roleName":"Super Admin"
            }
            },
            {
            "userFirstName":"sagar",
            "userLastName":"choudhari",
            "email":"vinit.epaisa@gmail.com",
            "roleId":{
            "roleId":4,
            "merchantId":"0",
            "roleName":"Merchant User"
            }
            }
            ],
    responses:
      200:
        body:
          application/json:
            example: |
                 [{"success":1,"response":{"username":"vinit.choudhari@epaisa.com","userFirstName":"vinit","userLastName":"choudhari","roleId":4,"storeLocationId":0,"merchantId":466,"status":0,"password_hash":"$2y$13$hFseT8nuJEHiBiZHgWATt.cLtoEJzmv/dTk08pJ7Q4UbWmbbOe1eK","created_at":1470318976,"updated_at":1470318976,"id":547,"auth_key":"BAB5mi-fklFM7D05VK7Ja6NslPHGqn9-kq6N0yZ1hWXY_HEuf40ZCqD5vOUjf9su","auth_key_creationtime":1470318976}},{"success":1,"response":{"username":"vinit.epaisa@gmail.com","userFirstName":"sagar","userLastName":"choudhari","roleId":4,"storeLocationId":0,"merchantId":466,"status":0,"password_hash":"$2y$13$0PbfkYuUpOdtQWCOORkvZedBxyzB2X7RSN8iXMUPzx4AX33DVXhAy","created_at":1470318978,"updated_at":1470318978,"id":548,"auth_key":"tQV36sdcArps701IYc5ehMg89t5cXoMQ4L-U9xRo3CIQr4XqpOh-tOmTh1Y3Pr7W","auth_key_creationtime":1470318978}}]
/user/acceptinvitation:
  description: endpoint to call when user accepts an invitation. This endpoint can be called with get parameters from a link.
  get:
    description: endpoint to call when user accepts an invitation. This endpoint can be called with get parameters from a link.
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
  post:
    description: endpoint to call when user accepts an invitation. Post version can be called by a client app.
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
/user/forgotpassword:
  description: To generate and send a new password to the user.
  post:
    description: To generate and send a new password to the user.
    queryParameters:
      param1:
        required: true
        displayName: json string of parameters
        description: based on the flow, we need different parameters encoded in json string <p><b>Step 1</B></p> on this step we can either send "email" parameter and start email based password reset flow or "mobile" parameter and start otp based password reset flow. <p><b>Step 2</b></p> If we have started the email flow, merchant ui will make the calls accordingly with the token and new password. If otp based flow is started, this endpoint needs to be called again with "mobile", "otp" and "newpassword" fields to validate the otp and reset the password.
/user/role:
  description: to list custom roles created by the merchant
  get:
    description: to list custom roles created by the merchant
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
  post:
    description: to create a new custom role to be used by the merchant. This custom role will only be visible to merchant will not be public.
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: RoleName
        description: Name for the custom role
  put:
    description: to update a custom role
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: RoleId
        description: Id of the custom role
      param3:
        required: true
        displayName: RoleName
        description: New Name for the custom role
  delete:
    description: to soft delete a given custom role
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: RoleId
        description: Id of the custom role
/credits:
  description: to list all credited amount to merchant.
  get:
    description: to list all credited amount to merchant.
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: JSON STRING
        description: "merchantId IS required"
  post:
    description: to add amount to merchant account
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: JSON STRING
        description: Json string with follwing keys are required
                    merchantId - merchantId
                    amount - amoun to add in merchant account
/user/doc:
  description: to list all documents of merchant.
  get:
    description: to list all documents of merchant.
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: JSON STRING
        description: "merchantId IS required"
  post:
    description: to upload kyc documents
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: JSON STRING
        description: Json string with follwing keys are required
                    merchantId - merchantId
                    files - array of base 64 encoded data
                    documentMainType - 'IDPROOF','BANKPROOF','COMPANYPROOF','ADDRESSPROOF','OTHER'
                    documentSubType - sub type will depen on documentMainType
                    IDPROOF =>
                    'Driver's Licence',
                    'Pan Card',
                    'Aadhar Card',
                    'Ration Card',
                    'Voter Id Card'

                    BANKPROOF =>
                    '6 Month bank statement',
                    'Cancelled Cheque',

                    COMPANYPROOF =>
                    'VAT',
                    'TIN',
                    'Income Tax Return',

                    ADDRESSPROOF =>
                     'Aadhar Card',
                    '6 Month bank statement',
                    'Telephone Bill',
                    'Driver\'s Licence',
                    'Voter Id Card',
                    'Latest Electricity Bill'
/user/docread:
  description: to read actual document data in base64 format
  get:
    description: to read actual document data in base64 format
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: JSON STRING
        description: "documentId IS required. To fetch other merchants' documents please send merchantId key. But on this case, it will check for list_documents permission."
/user/devices:
  get:
    description: to list all devices of merchant.
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: JSON STRING
        description: merchantId IS required in json string
                     optional parameters as follows
                     merchantDeviceId
                     userId
                     deviceId
                     deviceSerialNumber
/user/passwordupdate:
  post:
    description: Update password when its expire
    queryParameters:
      param1:
        required: true
        displayName: JSON STRING
        description: json string.
                    {"userName":"xyz@pqr.com","currentPassword":"abcdef@567","newPassword":"25asdfgT@1988"}
/user/permission:
  get:
    description: to list all permissions available to merchant.
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        type: string
        displayName: json string
        description: key value pair in json string.
                    {"roleId":1,"merchantId":466,"sourceId":1}
                     sourceId optional
  post:
    description: to assign a permission to given custom role
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: RoleId
        description: Id of the custom role
      param3:
        required: true
        displayName: RoleDetailId
        description: Id of the permission (roleDetail) to assign to the role
      param4:
        required: true
        displayName: value
        description: 1 read, 2 write, 3 readwrite
  put:
    description: to update permission value of a custom role
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: RoleId
        description: Id of the custom role
      param3:
        required: true
        displayName: RoleDetailId
        description: Id of the permission (roleDetail) to assign to the role
      param4:
        required: true
        displayName: value
        description: 1 read, 2 write, 3 readwrite
  delete:
    description: to soft delete a permission of custom role
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: RoleId
        description: Id of the custom role
      param3:
        required: true
        displayName: RoleDetailId
        description: Id of the permission (roleDetail) to assign to the role
/setting:
  get:
    description: for getting merchant & user settings data
    queryParameters:
       param1:
        required: true
        displayName: Token
        description: Token generated by login call
  put:
    description: for updating merchant & user settings
    queryParameters:
       param1:
        required: true
        displayName: Token
        description: Token generated by login call
       param2:
        required: true
        displayName: json string. Main key is "settingoptionsparams"
        description: json array of criterias. Possible keys are below
                      <h3>General</h3>
                      <p><b>Language</b> App language 2-digit  key</p>
                      <p><b>CurrencyId</b> id of the selected currency</p>
                      <p><b>CurrencyId</b> id of the selected currency</p>
                      <h3>Device</h3>
                      <p><b>EnableSound</b> Enable/Disable sound on the app</p>
                      <p><b>EnableCamera</b> Enable/Disable camera on the app</p>
                      <h3>Transaction</h3>
                      <p><b>OfflineTransactions</b> Enable/Disable offline transactions on the app</p>
                      <p><b>RoundOff</b> Enable/Disable roundoff on the app</p>
                      <p><b>TaxSelection</b> Tax selection (Manual, Auto, Disabled)</p>
                      <p><b>TaxType</b> Tax type (Inclusive,)</p>
                      <p><b>Vat</b> Vat in percentage</p>
                      <p><b>ServiceTax</b> Service Tax in percentage</p>
                      <p><b>SwachhBharatCess</b> Swachh Bharat Cess in percentage</p>
                      <p><b>VatFbm</b> Vat (Fbm) in percentage</p>           <p><b>SalesTax</b> Sales Tax in percentage</p>
                      <h3>Notification</h3>
                      <p><b>TransactionNotification</b> receive notifications about transactions. Values are combined boolean based on order. ie 111 means push, email, sms is open. 011 means push is closed, sms and email is open. 000 means all are closed.</p>
                      <p><b>SummaryNotification</b> receive summary notifications. Values are combined boolean based on order. ie 111 means push, email, sms is open. 011 means push is closed, sms and email is open. 000 means all are closed.</p>
                      <p><b>HeldTransactionsDailySummary</b> receive notifications about daily transactions. Values are combined boolean based on order. ie 111 means push, email, sms is open. 011 means push is closed, sms and email is open. 000 means all are closed.</p>
                      <p><b>EpaisaOffersNotification</b> Receive notifications about ePaisa offerings. Values are combined boolean based on order. ie 111 means push, email, sms is open. 011 means push is closed, sms and email is open. 000 means all are closed.</p>
/tax:
  get:
    description: to list of taxes created by the merchant
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token
      body:
      application/json:
        example: |
             {"merchantId":679,"userId":662}
    responses:
      200:
        body:
          application/json:
            example: |
                 {
                   "success":1,
                   "response":
                   {
                     "Tax":[
                       {
                         "taxId":15,
                         "merchantId":679,
                         "taxName":"VAT",
                         "taxRuleApplyFor":null,
                         "taxValue":"12.00",
                         "taxMode":"%",
                         "taxType":"Inclusive",
                         "taxScope":"Global",
                         "taxServiceIncluded": 1
                         }
                      ]
                    }
                  }
  post:
    description: to create a new taxes
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: JSON STRING
        description:  merchantId ,userId ,taxMode (mode of tax i.e percentage or amount) ,taxName (tax name), taxRuleApplyFor ('Delivery','For Here','Pickup','To Go'),taxType (Inclusive oe Exclusive ),taxValue (value of tax to applied) ,taxScope ('Global' or 'Custom' global taxes can apply to all products but custom taxes are applied to a specific product), taxServiceIncluded (0 or 1)

      body:
      application/json:
        example: |
              {
                "taxId":"",
                "merchantId":466,
                "userId":455,
                "taxName":"GST",
                "taxValue":"12",
                "taxMode":"%",
                "taxType":"Inclusive",
                "taxScope":"Custom",
                "taxServiceIncluded": 1
              }
    responses:
      200:
        body:
          application/json:
            example: |
                 {
                   "success":1,
                   "response":  {
                     "merchantId":466,
                     "taxName":"GST",
                     "taxRuleApplyFor":null,
                     "taxMode":"%",
                     "taxType":"Inclusive",
                     "taxValue":"12",
                     "created_at":1470378923,
                     "updated_at":1470378923,
                     "createdUserId":455,
                     "taxId":2,
                     "taxScope":"Custom",
                     "taxServiceIncluded": 1
                   }
                 }
  put:
    description: to update a new taxes
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: JSON STRING
        description:  merchantId ,taxId ,taxMode ,taxName, taxRuleApplyFor,taxType ,taxValue , taxScope , userId, taxServiceIncluded
  delete:
    description: to delete tax
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: taxId
        description: Id of the tax
/deposithistory:
  get:
    description: to fetch merchant's deposit history.
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token
      param2:
        required: true
        displayName: criterias
        description: Criterias to fetch the deposit history data
                     <p><B>merchantId</b> merchantId for the deposit history</p>
                     <p><B>depositedRefNumber</b> unique number generated on settlement to find history belong to certain settlement.</p>
                     <p><B>depositedTID</b> unique TID number of the merchant.</p>
                     <p><B>depositedMID</b> unique MID number of the merchant.</p>
      body:
      application/json:
        example: |
             {"merchantId":679,"depositedRefNumber":"100000","depositedTID":"tid","depositedMID":"mid"}
    responses:
      200:
        body:
          application/json:
            example: |
                 {"success":1,"response":{"merchantDeposits":[{"depositedHistoryId":1,"merchantId":480,"depositedRefNumber":"100000","depositedCharge":"14.00","depositedTID":"tid","depositedMID":"mid","created_at":1471950774,"updated_at":1471951143}]}}
  post:
    description: to create a new merchant deposit history record
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token
      param2:
        required: true
        displayName: JSON STRING
        description:  <p><B>merchantId</b> merchantId for the deposit history</p>
                     <p><B>depositedRefNumber</b> unique number generated on settlement to find history belong to certain settlement.</p>
                     <p><B>depositedCharge</b> Amount that had deposited.</p>
                     <p><B>depositedTID</b> unique TID number of the merchant.</p>
                     <p><B>depositedMID</b> unique MID number of the merchant.</p>

      body:
      application/json:
        example: |
              {
                "depositedRefNumber":"1000000",
                "merchantId":466,
                "depositedCharge":"12.00",
                "depositedTID":"tid",
                "depositedMID":"mid"
                }
    responses:
      200:
        body:
          application/json:
            example: |
                 {"success":1,"response":{"depositedHistoryId":1,"merchantId":480,"depositedRefNumber":"100000","depositedCharge":"14.00","depositedTID":"tid","depositedMID":"mid","created_at":1471950774,"updated_at":1471951143}}}


  put:
    description: to update a merchant deposit history record
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token
      param2:
        required: true
        displayName: JSON STRING
        description:
                     <p><B>depositedHistoryId</b> unique id of the deposit history record</p>
                     <p><B>merchantId</b> merchantId for the deposit history</p>
                     <p><B>depositedRefNumber</b> unique number generated on settlement to find history belong to certain settlement.</p>
                     <p><B>depositedCharge</b> Amount that had deposited.</p>
                     <p><B>depositedTID</b> unique TID number of the merchant.</p>
                     <p><B>depositedMID</b> unique MID number of the merchant.</p>

      body:
      application/json:
        example: |
              {
                "depositedHistoryId":"1",
                "depositedRefNumber":"1000000",
                "merchantId":466,
                "depositedCharge":"12.00",
                "depositedTID":"tid",
                "depositedMID":"mid"
                }
    responses:
      200:
        body:
          application/json:
            example: |
                 {"success":1,"response":{"depositedHistoryId":1,"merchantId":480,"depositedRefNumber":"100000","depositedCharge":"14.00","depositedTID":"tid","depositedMID":"mid","created_at":1471950774,"updated_at":1471951143}}}
  delete:
    description: to delete a merchant deposit history record
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: JSON STRING
        description:
                     <p><B>merchantId</b> merchantId for the deposit history record</p>
      body:
      application/json:
        example: |
              {
                "depositedHistoryId":"1",
                "merchantId":466,
                }
    responses:
      200:
        body:
          application/json:
            example: |
                 {"success":1,"response":"Merchant deposit history record deleted successfully."}
/user/regeneratetoken:
  get:
    description: Api call for generating a new token
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token
      param2:
        required: true
        displayName: Json string
        description: Below keys are accepted
          <p><b>merchantId</b> - merchantId to validate</p>
          <p><b>sourceId</b> - sourceId to generate the token into</p>
    responses:
      200:
        body:
          application/json:
            example: |
              {"success":1,"response":{"id":463,"roleId":3,"userRole":"Merchant Admin (Approved)","username":"hk@eigital.com","merchantId":480,"storeLocationId":0,"auth_key":"Hbvh59Dco6C3VF_mxzHhdq7doEiDD5lV9tIbTsVSXJFehy6GEWjgcE6vLW2toojj","auth_key_creationtime":1471959822,"userMobileNumber":"+485104397460","userFirstName":"Galileo","userMiddleName":"","userLastName":"Kabaca ","userImage":"","cityId":0,"stateId":0,"pincode":"122333333333","countryCode":"IN","userAddress1":"Test","userAddress2":"Test2","userIMEI":"le8fKp","userPanNumber":"","userAppVersion":"0.00","dateOfBirth":"26.04.1984","status":1,"created_at":1467616820,"updated_at":1471602941}}
/ticket:
  post:
    description: to create a new ticket
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: JSON STRING
        description:  merchantId, userId, username, email, company, message, cellphone
      body:
      application/json:
        example: |
          {
            "username":"somename",
            "merchantId":466,
            "userId":455,
            "email":"someemail@someaddress.com",
            "company":"some company",
            "message":"I have some problem in adding new product.",
            "cellphone":"91932487349"
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
               "success":1,
               "message":"Ticket added successfully"
             }
/store:
  description: <b>/store</b> to list all credited amount to merchant.
  get:
    description: to list all credited amount to merchant.
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token sent to invited user.
      param2:
        required: true
        displayName: JSON STRING
        description: "merchantId IS required"
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "StoreLocations": [
                    {
                      "workingHours": [],
                      "details": [
                        {
                          "storeLocationDetailId": 1,
                          "storeLocationId": 424,
                          "paramName": "test",
                          "paramValue": "rest",
                          "sourceId": 0,
                          "status": 1,
                          "created_at": 0,
                          "updated_at": 0,
                          "createdUserId": 0,
                          "updatedUserId": 0
                        },
                        {
                          "storeLocationDetailId": 2,
                          "storeLocationId": 424,
                          "paramName": "Foo",
                          "paramValue": "Bar",
                          "sourceId": 0,
                          "status": 1,
                          "created_at": 0,
                          "updated_at": 0,
                          "createdUserId": 0,
                          "updatedUserId": 0
                        }
                      ],
                      "storeLocationId": 424,
                      "merchantId": 472,
                      "type": "store",
                      "caption": "Headquarters",
                      "phoneNumber":"",
                      "pincode":"",
                      "address1":"",
                      "address2":"",
                      "cityId":"",
                      "stateId":"",
                      "countryCode":""
                    },
                    {
                      "workingHours": [],
                      "details": [],
                      "storeLocationId": 1426,
                      "merchantId": 472,
                      "type": "store",
                      "caption": "NEW STORE",
                      "phoneNumber":"",
                      "pincode":"",
                      "address1":"",
                      "address2":"",
                      "cityId":"",
                      "stateId":"",
                      "countryCode":""
                    },
                    {
                      "workingHours": [],
                      "details": [],
                      "storeLocationId": 1428,
                      "merchantId": 472,
                      "type": "store",
                      "caption": "BANDRA",
                      "phoneNumber":"",
                      "pincode":"",
                      "address1":"",
                      "address2":"",
                      "cityId":"",
                      "stateId":"",
                      "countryCode":""
                    }
                  ]
                }
              }
  post:
    description: This api will add new store
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: data (json)
        description:
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>storeLocationId</i></b>
            <p><b><i>type</i></b>
            <p><b><i>caption</i></b>
            <p><b><i>address1</i></b>
            <p><b><i>address2</i></b>
            <p><b><i>cityId</i></b>
            <p><b><i>stateId</i></b>
            <p><b><i>countryCode</i></b>
            <p><b><i>pincode</i></b>
            <p><b><i>phoneNumber</i></b>
            <p><b><i>merchantId</i></b>
            <p><b><i>workingHours</i></b> - an array of (to update an old row) storeLocationWorkingHourId is necessary, day, start and end
            <p><b><i>params</i></b> - an array of (to update an old row) storeLocationDetailId is necessary, paramName and paramValue
    body:
      application/json:
        example: |
         {
            "merchantId": 123,
            "type": "store",
            "caption": "Big Store",
            "phoneNumber": "",
            "pincode": "",
            "address1": "",
            "address2": "",
            "cityId": "",
            "stateId": "",
            "countryCode": "",
            "workingHours": [
              {
                "day": "Monday",
                "start": "9:00",
                "end": "12:00"
              },
              {
                "day": "Monday",
                "start": "14:00",
                "end": "18:00"
              },
              {
                "day": "Tuesday",
                "start": "9:00",
                "end": "12:00"
              },
              {
                "day": "Friday",
                "start": "9:00",
                "end": "12:00"
              }
            ],
            "params": [
              {
                "paramName": "Foo",
                "paramValue": "Bar"
              },
              {
                "paramName": "Foo",
                "paramValue": "Bar"
              },
              {
                "paramName": "Foo",
                "paramValue": "Bar"
              },
              {
                "paramName": "Foo",
                "paramValue": "Bar"
              }
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                success: 1,
                message: "Store details added successfully."
                }
              }
  put:
    description: This api will edit a store
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>storeLocationId</i></b>
            <p><b><i>type</i></b>
            <p><b><i>caption</i></b>
            <p><b><i>address1</i></b>
            <p><b><i>address2</i></b>
            <p><b><i>cityId</i></b>
            <p><b><i>stateId</i></b>
            <p><b><i>countryCode</i></b>
            <p><b><i>pincode</i></b>
            <p><b><i>phoneNumber</i></b>
            <p><b><i>merchantId</i></b>
            <p><b><i>workingHours</i></b> - an array of (to update an old row) storeLocationWorkingHourId is necessary, day, start and end
            <p><b><i>params</i></b> - an array of (to update an old row) storeLocationDetailId is necessary, paramName and paramValue
    body:
      application/json:
        example: |
         {
            "storeLocationId": 123,
            "type": "store",
            "caption": "Not so big",
            "address": "another address",
            "merchantId": 54,
            "workingHours": [
              {
                "storeLocationWorkingHourId": 4,
                "day": "Monday",
                "start": "9:00",
                "end": "12:00"
              },
              {
                "storeLocationWorkingHourId": 5,
                "day": "Monday",
                "start": "14:00",
                "end": "18:00"
              },
              {
                "day": "Tuesday",
                "start": "9:00",
                "end": "12:00"
              },
              {
                "day": "Friday",
                "start": "9:00",
                "end": "12:00"
              }
            ],
            "params": [
              {"storeLocationDetailId": 54, "paramName":"Foo","paramValue":"Bar"},
              {"storeLocationDetailId": 59, "paramName":"Foo","paramValue":"Bar"},
              {"paramName":"Foo","paramValue":"Bar"},
              {"paramName":"Foo","paramValue":"Bar"}
            ]
         }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                success: 1,
                message: "Store details updated successfully",
                messageDetails: []
              }
  delete:
    description: This api will delete a customer details in customerDetail table
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: data (json)
        description: json array example phoneNumber , firstName & lastName required Key
    body:
      application/json:
        example: |
          {
            "storeLocationId": 123,
            "merchantId": 54
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                success: 1,
                response: []
              }
/store/working-hours:
  description: Store Working Hour endpoit provide you whole the functionality you need.
  post:
    description: To create and edit a store working hour row.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>storeLocationId</i></b> - unique identifier for the store.</p>
            <p><b><i>workingHours</i></b> - array of "day", "start" and "end" to create plus "storeLocationWorkingHourId" for edit only.</p>
    body:
      application/json:
        example: |
          {
            "storeLocationId": 424,
            "workingHours": [
              {
                "day": "Monday",
                "start": "9:00",
                "end": "12:00"
              },
              {
                "day": "Monday",
                "start": "14:00",
                "end": "18:00"
              },
              {
                "day": "Tuesday",
                "start": "9:00",
                "end": "12:00"
              },
              {
                "day": "Friday",
                "start": "9:00",
                "end": "12:00"
              },
              {
                "storeLocationWorkingHourId": 4,
                "day": "Friday",
                "start": "9:00",
                "end": "12:00"
              }
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "message": "parameters are store successfully.",
                "messageDetails": []
              }
  delete:
    description: To delete a store working hour.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>storeLocationWorkingHourId</i></b> - unique identifier for the store location working hour.</p>
    body:
      application/json:
        example: |
          {
            "storeLocationWorkingHourId": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/store/details:
   post:
    description: This api will add new store details
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: data (json)
        description: json array example phoneNumber , firstName & lastName required Key
        type:
        example: |
         {
            "storeLocationId": 123,
            "params": [
              {"paramName":"Foo","paramValue":"Bar"},
              {"paramName":"Foo","paramValue":"Bar"},
              {"paramName":"Foo","paramValue":"Bar"},
              {"paramName":"Foo","paramValue":"Bar"}
            ]
         }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                success: 1,
                message: "parameters are store successfully."
                }
              }
   put:
    description: This api will edit a store details
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: data (json)
        description: json array example phoneNumber , firstName & lastName required Key
        type:
        example:  |
         {
            "storeLocationId": 123,
            "storeLocationDetailId": 54
         }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                success: 1,
                message: "parameters are store successfully.",
                messageDetails: []
              }
   delete:
    description: This api will delete a customer details in customerDetail table
    queryParameters:
      param1:
        required: true
        displayName: Token
        description: Access token generated from login call on /user/login
      param2:
        required: true
        displayName: data (json)
        description: json array example phoneNumber , firstName & lastName required Key
        type:
        example:  |
         {
            "storeLocationId": 123,
            "storeLocationDetailId": 54
         }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                success: 1,
                response: []
              }
/vas:
  description: Reports endpoit provide you whole the functionality you need to work with vas apis.
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>parentId</i></b> - departmentId fetch specific department information. <u>Optional</u></p>
            IN EACH STEP IF YOU FIND ONLY ONE VAS OR OPERATOR PLEASE JUMP THAT STEP AND SEND VALUSE IMIDIATLY
    body:
      application/json:
        example: |
          {"parentId":"5"}
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                    {
                        "vasId": 18,
                        "parentId": 5,
                        "name": "Money Transfer",
                        "className": "app\\components\\vas\\MoneyTransfer",
                        "status": 1,
                        "created_at": 0,
                        "updated_at": 0,
                        "createdUserId": 0,
                        "updatedUserId": 0,
                        "operators": [
                            {
                                "vasOperatorId": 1,
                                "vasId": 18,
                                "name": "Eko",
                                "status": 1,
                                "created_at": 0,
                                "updated_at": 0,
                                "createdUserId": 0,
                                "updatedUserId": 0
                            }
                        ],
                        "providers": [
                            {
                                "vasProviderId": 1,
                                "vasId": 18,
                                "providerId": 8,
                                "className": "app\\components\\vas\\providers\\moneyTransfer\\Eko",
                                "status": 1,
                                "created_at": 0,
                                "updated_at": 0,
                                "createdUserId": 0,
                                "updatedUserId": 0
                            }
                        ]
                    }
                ]
              } |
              {
                "success": 1,
                "response": [
                    {
                        "vasId": 1,
                        "parentId": null,
                        "name": "Ticket Booking",
                        "className": null,
                        "status": 1,
                        "created_at": 0,
                        "updated_at": 0,
                        "createdUserId": 0,
                        "updatedUserId": 0,
                        "operators": [],
                        "providers": [],
                        "subCategory": [
                            {
                                "vasId": 7,
                                "parentId": 1,
                                "name": "Air Ticket Booking",
                                "className": "app\\components\\vas\\AirTicketBooking",
                                "status": 1,
                                "created_at": 0,
                                "updated_at": 0,
                                "createdUserId": 0,
                                "updatedUserId": 0,
                                "operators": [],
                                "providers": []
                            },
                            {
                                "vasId": 8,
                                "parentId": 1,
                                "name": "Rail Ticket Booking",
                                "className": "app\\components\\vas\\RailTicketBooking",
                                "status": 1,
                                "created_at": 0,
                                "updated_at": 0,
                                "createdUserId": 0,
                                "updatedUserId": 0,
                                "operators": [],
                                "providers": []
                            },
                            {
                                "vasId": 20,
                                "parentId": 1,
                                "name": "Bus Ticket Booking",
                                "className": "app\\components\\vas\\BusTicketBooking",
                                "status": 1,
                                "created_at": 1486473909,
                                "updated_at": 1486473909,
                                "createdUserId": 0,
                                "updatedUserId": 0,
                                "operators": [
                                    {
                                        "vasOperatorId": 2,
                                        "vasId": 20,
                                        "name": "SeatSeller",
                                        "status": 1,
                                        "created_at": 1486474312,
                                        "updated_at": 1486474312,
                                        "createdUserId": 0,
                                        "updatedUserId": 0
                                    }
                                ],
                                "providers": [
                                    {
                                        "vasProviderId": 2,
                                        "vasId": 20,
                                        "providerId": 9,
                                        "className": "app\\components\\vas\\providers\\ticketBooking\\SeatSeller",
                                        "status": 1,
                                        "created_at": 1486473912,
                                        "updated_at": 1486473912,
                                        "createdUserId": 0,
                                        "updatedUserId": 0
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        "vasId": 2,
                        "parentId": null,
                        "name": "Bill Payment",
                        "className": null,
                        "status": 1,
                        "created_at": 0,
                        "updated_at": 0,
                        "createdUserId": 0,
                        "updatedUserId": 0,
                        "operators": [],
                        "providers": [],
                        "subCategory": [
                            {
                                "vasId": 9,
                                "parentId": 2,
                                "name": "Mobile Bill Payment",
                                "className": "app\\components\\vas\\MobileBillPayment",
                                "status": 1,
                                "created_at": 0,
                                "updated_at": 0,
                                "createdUserId": 0,
                                "updatedUserId": 0,
                                "operators": [],
                                "providers": []
                            },
                            {
                                "vasId": 10,
                                "parentId": 2,
                                "name": "Electricity Bill Payment",
                                "className": "app\\components\\vas\\ElectricityBillPayment",
                                "status": 1,
                                "created_at": 0,
                                "updated_at": 0,
                                "createdUserId": 0,
                                "updatedUserId": 0,
                                "operators": [],
                                "providers": []
                            },
                            {
                                "vasId": 11,
                                "parentId": 2,
                                "name": "Gas Bill Payment",
                                "className": "app\\components\\vas\\GasBillPayment",
                                "status": 1,
                                "created_at": 0,
                                "updated_at": 0,
                                "createdUserId": 0,
                                "updatedUserId": 0,
                                "operators": [],
                                "providers": []
                            }
                        ]
                    },
                    {
                        "vasId": 3,
                        "parentId": null,
                        "name": "Recharge",
                        "className": null,
                        "status": 1,
                        "created_at": 0,
                        "updated_at": 0,
                        "createdUserId": 0,
                        "updatedUserId": 0,
                        "operators": [],
                        "providers": [],
                        "subCategory": [
                            {
                                "vasId": 12,
                                "parentId": 3,
                                "name": "Mobile Recharge",
                                "className": "app\\components\\vas\\MobileRecharge",
                                "status": 1,
                                "created_at": 0,
                                "updated_at": 0,
                                "createdUserId": 0,
                                "updatedUserId": 0,
                                "operators": [],
                                "providers": []
                            },
                            {
                                "vasId": 13,
                                "parentId": 3,
                                "name": "Datacard Recharge",
                                "className": "app\\components\\vas\\DataCardRecharge",
                                "status": 1,
                                "created_at": 0,
                                "updated_at": 0,
                                "createdUserId": 0,
                                "updatedUserId": 0,
                                "operators": [],
                                "providers": []
                            },
                            {
                                "vasId": 14,
                                "parentId": 3,
                                "name": "DTH Recharge",
                                "className": "app\\components\\vas\\DthRecharge",
                                "status": 1,
                                "created_at": 0,
                                "updated_at": 0,
                                "createdUserId": 0,
                                "updatedUserId": 0,
                                "operators": [],
                                "providers": []
                            },
                            {
                                "vasId": 15,
                                "parentId": 3,
                                "name": "Broadband Recharge",
                                "className": "app\\components\\vas\\BroadbandRecharge",
                                "status": 1,
                                "created_at": 0,
                                "updated_at": 0,
                                "createdUserId": 0,
                                "updatedUserId": 0,
                                "operators": [],
                                "providers": []
                            },
                            {
                                "vasId": 16,
                                "parentId": 3,
                                "name": "International Recharge",
                                "className": "app\\components\\vas\\InternationalRecharge",
                                "status": 1,
                                "created_at": 0,
                                "updated_at": 0,
                                "createdUserId": 0,
                                "updatedUserId": 0,
                                "operators": [],
                                "providers": []
                            }
                        ]
                    },
                    {
                        "vasId": 4,
                        "parentId": null,
                        "name": "Gift Card",
                        "className": null,
                        "status": 1,
                        "created_at": 0,
                        "updated_at": 0,
                        "createdUserId": 0,
                        "updatedUserId": 0,
                        "operators": [],
                        "providers": [],
                        "subCategory": [
                            {
                                "vasId": 17,
                                "parentId": 4,
                                "name": "Gift Card",
                                "className": "app\\components\\vas\\GiftCard",
                                "status": 1,
                                "created_at": 0,
                                "updated_at": 0,
                                "createdUserId": 0,
                                "updatedUserId": 0,
                                "operators": [],
                                "providers": []
                            }
                        ]
                    },
                    {
                        "vasId": 5,
                        "parentId": null,
                        "name": "Money Transfer",
                        "className": null,
                        "status": 1,
                        "created_at": 0,
                        "updated_at": 0,
                        "createdUserId": 0,
                        "updatedUserId": 0,
                        "operators": [],
                        "providers": [],
                        "subCategory": [
                            {
                                "vasId": 18,
                                "parentId": 5,
                                "name": "Money Transfer",
                                "className": "app\\components\\vas\\MoneyTransfer",
                                "status": 1,
                                "created_at": 0,
                                "updated_at": 0,
                                "createdUserId": 0,
                                "updatedUserId": 0,
                                "operators": [
                                    {
                                        "vasOperatorId": 1,
                                        "vasId": 18,
                                        "name": "Eko",
                                        "status": 1,
                                        "created_at": 0,
                                        "updated_at": 0,
                                        "createdUserId": 0,
                                        "updatedUserId": 0
                                    }
                                ],
                                "providers": [
                                    {
                                        "vasProviderId": 1,
                                        "vasId": 18,
                                        "providerId": 8,
                                        "className": "app\\components\\vas\\providers\\moneyTransfer\\Eko",
                                        "status": 1,
                                        "created_at": 0,
                                        "updated_at": 0,
                                        "createdUserId": 0,
                                        "updatedUserId": 0
                                    }
                                ]
                            }
                        ]
                    }
                ]
              }
/vas/money-transfer/bank:
  description: list of available banks.
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>orderId</i></b> - order id string</p>
    body:
      application/json:
        example: |
          {
            "orderId":"58885c656b619c050d5552d6"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                      "name": "Axis Bank",
                      "code": "UTIB",
                      "imps": 1,
                      "neft": 1,
                      "accValidationFeature": 1
                  },
                  {
                      "name": "State Bank of Mauritius Ltd",
                      "code": "STCB",
                      "imps": 0,
                      "neft": 1,
                      "accValidationFeature": 0
                  },
                  {
                      "name": "State Bank of Mysore",
                      "code": "SBMY",
                      "imps": 1,
                      "neft": 1,
                      "accValidationFeature": 1
                  },
                  {
                      "name": "State Bank of Travancore",
                      "code": "SBTR",
                      "imps": 1,
                      "neft": 1,
                      "accValidationFeature": 1
                  },
                  {
                      "name": "State Bank of Patiala",
                      "code": "STBP",
                      "imps": 1,
                      "neft": 1,
                      "accValidationFeature": 1
                  },
                  {
                      "name": "Syndicate Bank",
                      "code": "SYNB",
                      "imps": 1,
                      "neft": 1,
                      "accValidationFeature": 0
                  },
                  {
                      "name": "Tamilnad Mercantile Bank Ltd",
                      "code": "TMBL",
                      "imps": 1,
                      "neft": 1,
                      "accValidationFeature": 1
                  },
                  {
                      "name": "The Bank of Nova Scotia",
                      "code": "NOSC",
                      "imps": 0,
                      "neft": 1,
                      "accValidationFeature": 0
                  },
                  {
                      "name": "The Ahmedabad Mercantile Co-Operative Bank Ltd",
                      "code": "AMCB",
                      "imps": 0,
                      "neft": 1,
                      "accValidationFeature": 0
                  },
                  {
                      "name": "Raipur Urban Mercantile Co-operative Bank Ltd",
                      "code": "HDRU",
                      "imps": 1,
                      "neft": 1,
                      "accValidationFeature": 1
                  }
                ]
              }
/vas/money-transfer/bank/info:
  description: to bank details information.
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>cellphone</i></b> - customer's cellphone.</p>
            <p><b><i>orderId</i></b> - order id string</p>
            <p><b><i>bankIdType</i></b> - type of bank id can be ifsc or bank_code</p>
            <p><b><i>bankId</i></b> - bank id is the value of the ifsc or bank_code</p>
    body:
      application/json:
        example: |
          {
            "orderId":"58885c656b619c050d5552d6",
            "cellphone":"9393023386"
            "bankIdType":"ifsc",
            "bankId":"sbin0000001",
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "branch": "KOLKATA MAIN",
                      "bank": "STATE BANK OF INDIA",
                      "ifsc": "SBIN0000001"
                  }
              }
/vas/money-transfer/customer:
  description: Reports endpoit provide you whole the functionality you need to work with vas money transfer apis for customers operation.
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>amount</i></b> - vas amount in Rs.</p>
            <p><b><i>amountServiceCharge</i></b> - merchant's service charge amount in Rs. <u>Optional</u></p>
            <p><b><i>cellphone</i></b> - customer's cellphone.</p>
            <p><b><i>vasId</i></b> - selected vas id.</p>
            <p><b><i>vasOperatorId</i></b> - selected operator id.</p>
            <p><b><i>vasProviderId</i></b> - selected provider id.</p>
    body:
      application/json:
        example: |
          {
            "vasId":5,
            "vasOperatorId":1,
            "cellphone":989153023386,
            "amount": 100,
            "amountServiceCharge": 10
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "customerBalance": "0.0",
                      "customerId": "9393023386",
                      "customerName": "Ramin Farmani",
                      "customerStatus": "2",
                      "customerStateDescription": "Non-Kyc",
                      "customerCurrency": "INR",
                      "customerCellphone": "9393023386",
                      "recipientList": [],
                      "orderId": "58885c656b619c050d5552d6"
                  }
              }
  post:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>name</i></b> - customer's name.</p>
            <p><b><i>cellphone</i></b> - customer's cellphone.</p>
            <p><b><i>vasOperatorId</i></b> - selected operator id.</p>
            <p><b><i>vasProviderId</i></b> - selected provider id.</p>
            <p><b><i>orderId</i></b> - orderId value from previous call GET verb to the same endpoint.</p>
    body:
      application/json:
        example: |
          {
            "operatorId":1,
            "providerId":1,
            "cellphone":"989153023386",
            "name": "Ramin Farmani"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response":
                {
                  "customerId":"9393023386"
                }
              }
/vas/money-transfer/customer/otp:
  description: Resend otp to the customer.
  post:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>cellphone</i></b> - customer's cellphone.</p>
            <p><b><i>vasId</i></b> - selected vas id.</p>
            <p><b><i>vasOperatorId</i></b> - selected operator id.</p>
    body:
      application/json:
        example: |
          {
            "orderId":"58885c656b619c050d5552d6",
            "cellphone":"9393023386"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response":
                {}
              }
/vas/money-transfer/customer/verify:
  description: verify the customer.
  put:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>otp</i></b> - otp value.</p>
            <p><b><i>cellphone</i></b> - customer's cellphone.</p>
            <p><b><i>vasId</i></b> - selected vas id.</p>
            <p><b><i>vasOperatorId</i></b> - selected operator id.</p>
    body:
      application/json:
        example: |
          {
            "vasOperatorId":"58885c656b619c050d5552d6",
            "cellphone":"9393023386",
            "otp":"549",
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response":
                {}
              }
/vas/money-transfer/customer/recipient/account-info:
  description: to verify and see if the recipient bank account is correct or not.
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>cellphone</i></b> - customer's cellphone.</p>
            <p><b><i>orderId</i></b> - order id string</p>
            <p><b><i>bankIdType</i></b> - type of bank id can be ifsc or bank_code</p>
            <p><b><i>bankId</i></b> - bank id is the value of the ifsc or bank_code</p>
            <p><b><i>accountNumber</i></b> - recipient account number</p>
    body:
      application/json:
        example: |
          {
            "orderId":"58885c656b619c050d5552d6",
            "cellphone":"9393023386"
            "bankIdType":"ifsc",
            "bankId":"sbin0000001",
            "accountNumber":"61046336411"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "fee": "0.00",
                      "amount": "0.00",
                      "is_Ifsc_required": "0",
                      "is_name_editable": "0",
                      "verification_failure_refund": "",
                      "account": "61046336411",
                      "bank": "STATE BANK OF INDIA",
                      "tid": "12570560",
                      "aadhar": "",
                      "recipient_name": "NirmalMaheshwari",
                      "ifsc": "sbin0000001"
                  }
              }
/vas/money-transfer/customer/recipient:
  description: add new recipient.
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>cellphone</i></b> - customer's cellphone.</p>
            <p><b><i>orderId</i></b> - order id string</p>
            <p><b><i>recipientAccountType</i></b> - bank account type "acc_ifsc" or "acc_bankcode"</p>
            <p><b><i>recipientAccountId</i></b> - order id string</p>
    body:
      application/json:
        example: |
          {
              "orderId": "58ae67716b619c63fc7b44c8",
              "cellphone": "9393023386",
              "recipientAccountType": "acc_ifsc",
              "recipientAccountId": "10012524"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "recipientId": 10012524,
                      "name": "Some Name",
                      "recipientAccountType": "acc_ifsc",
                      "recipientAccount": "61046336411",
                      "ifsc": "sbin0000001",
                      "bankcode": null
                  }
              }
  post:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>cellphone</i></b> - customer's cellphone.</p>
            <p><b><i>orderId</i></b> - order id string</p>
            <p><b><i>recipientType</i></b> - 1 for wallet, 2 for Utility and 3 for Account</p>
            <p><b><i>recipientAccountType</i></b> - bank account type "acc_ifsc" or "acc_bankcode"</p>
            <p><b><i>recipientAccountId</i></b> - order id string</p>
            <p><b><i>recipientName</i></b> - recipient name</p>
            <p><b><i>recipientMobile</i></b> - recipient mobile number</p>
    body:
      application/json:
        example: |
          {
              "orderId": "58ae67716b619c63fc7b44c8",
              "cellphone": "9393023386",
              "recipientType": "3",
              "recipientAccountType": "acc_ifsc",
              "recipientAccountId": "61046336411_sbin0000001",
              "recipientName": "Some Name",
              "recipientMobile": "8987896897"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "recipientId": 10012088,
                      "isSelfAccount": 0,
                      "recipientMobile": "9393023386"
                  }
              }
  delete:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>cellphone</i></b> - customer's cellphone.</p>
            <p><b><i>orderId</i></b> - order id string</p>
            <p><b><i>recipientAccountType</i></b> - bank account type "acc_ifsc" or "acc_bankcode"</p>
            <p><b><i>recipientId</i></b> - recipient's id string</p>
    body:
      application/json:
        example: |
          {
            "orderId":"58885c656b619c050d5552d6",
            "cellphone":"9153023386",
            "recipientAccountType":"acc_ifsc",
            "recipientId":"10012088",
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": "Recipient has been deleted successfully.
              }
/vas/money-transfer/send-money:
  description: send money to a recipient.
  post:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>orderId</i></b> - order id string</p>
    body:
      application/json:
        example: |
          {
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "recipientId": 10012088,
                      "isSelfAccount": 0,
                      "recipientMobile": "9393023386"
                  }
              }
/vas/ticket-booking/bus/locations:
  description: to get a list of source and destination cities you can use this api.
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>sourceId</i></b> - if you want to get a list of destiantion for specific source you need to set sourceId. <u>Optional</u></p>
            <p><b><i>vasId</i></b> - selected vas id.</p>
            <p><b><i>vasOperatorId</i></b> - selected operator id.</p>
            <p><b><i>vasProviderId</i></b> - selected provider id.</p>
    body:
      application/json:
        example: |
          {
              "vasId": 6,
              "vasOperatorId": 2,
              "vasProviderId": 2,
              "sourceId": 2429
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                    "cities": [
                        {
                            "id": "1367",
                            "name": "Ludhiana"
                        },
                        {
                            "id": "5209",
                            "name": "Katra "
                        },
                        {
                            "id": "2543",
                            "name": "Gurgaon"
                        },
                        {
                            "id": "1492",
                            "name": "Delhi"
                        },
                        {
                            "id": "1984",
                            "name": "International Airport Taxi on Hire Delhi"
                        }
                    ]
                }
              }
/vas/ticket-booking/bus/trips:
  description: Reports endpoit provide you whole the functionality you need to work with vas bus ticket booking apis.
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>sourceId</i></b> - source city Id.</p>
            <p><b><i>destinationId</i></b> - destination city Id.</p>
            <p><b><i>date</i></b> - date of trip.</p>
            <p><b><i>vasId</i></b> - selected vas id.</p>
            <p><b><i>vasOperatorId</i></b> - selected operator id.</p>
            <p><b><i>vasProviderId</i></b> - selected provider id.</p>
    body:
      application/json:
        example: |
          {
              "vasId": 6,
              "vasOperatorId": 2,
              "vasProviderId": 2,
              "sourceId": 2429,
              "destinationId": 1492,
              "date": "2017-02-09"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                    "availableTrips": {
                        "AC": "true",
                        "arrivalTime": "1800",
                        "availableSeats": "39",
                        "boardingTimes": {
                            "address": "G T ROAD 9872364786",
                            "bpId": "60572",
                            "bpName": "Phillaur",
                            "contactNumber": "9872364786,9417103274",
                            "landmark": "G T ROAD PHILLAUR 9872364786",
                            "location": "Phillaur",
                            "prime": "true",
                            "time": "1438"
                        },
                        "busType": "Volvo Multiaxle A\/C Seater Semi Sleeper (2+2)",
                        "busTypeId": "101",
                        "cancellationPolicy": "0:-1:100:0;",
                        "cpId": "1142",
                        "departureTime": "1438",
                        "destination": "1492",
                        "doj": "2017-02-09T00:00:00+05:30",
                        "droppingTimes": [
                            {
                                "bpId": "26100",
                                "bpName": "Karnal Bypass,Delhi",
                                "location": "Karnal Bypass,Delhi",
                                "prime": "false",
                                "time": "1780"
                            },
                            {
                                "bpId": "60597",
                                "bpName": "Red Fort",
                                "location": "Red Fort",
                                "prime": "true",
                                "time": "1800"
                            }
                        ],
                        "fareDetails": {
                            "baseFare": "775.00",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercentage": "0",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "totalFare": "775.00"
                        },
                        "fares": "775.00",
                        "id": "2000798622310001643",
                        "idProofRequired": "false",
                        "liveTrackingAvailable": "false",
                        "nonAC": "false",
                        "operator": "6353",
                        "partialCancellationAllowed": "true",
                        "reschedulingPolicy": {
                            "reschedulingCharge": "0",
                            "windowTime": "720"
                        },
                        "routeId": "2000798600000001643",
                        "seater": "true",
                        "sleeper": "false",
                        "source": "2429",
                        "tatkalTime": "0.00",
                        "travels": "Golden Temple Volvo Bus Service",
                        "vehicleType": "BUS",
                        "zeroCancellationTime": "0.00",
                        "mTicketEnabled": "true"
                    }
                }
              }
/vas/ticket-booking/bus/trip:
  description: Reports endpoit provide you whole the functionality you need to work with vas bus ticket booking apis.
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>id</i></b> - trip id.</p>
            <p><b><i>vasId</i></b> - selected vas id.</p>
            <p><b><i>vasOperatorId</i></b> - selected operator id.</p>
            <p><b><i>vasProviderId</i></b> - selected provider id.</p>
    body:
      application/json:
        example: |
          {
              "vasId": 6,
              "vasOperatorId": 2,
              "vasProviderId": 2,
              "id": "2000798622310001643"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                    "seats": [
                        {
                            "available": "false",
                            "baseFare": "775.00",
                            "column": "0",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "1",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "0",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "false",
                            "baseFare": "775.00",
                            "column": "0",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "2",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "1",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "false",
                            "baseFare": "775.00",
                            "column": "0",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "3",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "3",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "false",
                            "baseFare": "775.00",
                            "column": "0",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "4",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "4",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "false",
                            "baseFare": "775.00",
                            "column": "1",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "5",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "0",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "false",
                            "baseFare": "775.00",
                            "column": "1",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "6",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "1",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "false",
                            "baseFare": "775.00",
                            "column": "1",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "7",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "3",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "false",
                            "baseFare": "775.00",
                            "column": "1",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "8",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "4",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "2",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "9",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "0",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "2",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "10",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "1",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "2",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "11",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "3",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "2",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "12",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "4",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "3",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "13",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "0",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "3",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "14",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "1",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "3",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "15",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "3",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "3",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "16",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "4",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "4",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "17",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "0",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "4",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "18",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "1",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "4",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "19",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "3",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "4",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "20",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "4",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "5",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "21",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "0",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "5",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "22",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "1",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "false",
                            "baseFare": "775.00",
                            "column": "5",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "23",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "3",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "false",
                            "baseFare": "775.00",
                            "column": "5",
                            "fare": "775.00",
                            "ladiesSeat": "true",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "24",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "4",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "6",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "25",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "0",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "6",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "26",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "1",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "6",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "27",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "3",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "6",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "28",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "4",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "7",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "29",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "0",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "7",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "30",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "1",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "7",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "31",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "3",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "7",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "32",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "4",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "8",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "33",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "0",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "8",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "34",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "1",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "8",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "35",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "3",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "8",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "36",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "4",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "9",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "37",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "0",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "9",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "38",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "1",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "9",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "39",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "3",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "9",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "40",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "4",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "10",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "41",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "0",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "10",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "42",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "1",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "10",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "43",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "3",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "10",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "44",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "4",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "11",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "45",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "0",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "11",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "46",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "1",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "11",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "47",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "2",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "11",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "48",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "3",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        },
                        {
                            "available": "true",
                            "baseFare": "775.00",
                            "column": "11",
                            "fare": "775.00",
                            "ladiesSeat": "false",
                            "length": "1",
                            "markupFareAbsolute": "0",
                            "markupFarePercentage": "0",
                            "name": "49",
                            "operatorServiceChargeAbsolute": "0.00",
                            "operatorServiceChargePercent": "0",
                            "row": "4",
                            "serviceTaxAbsolute": "0.00",
                            "serviceTaxPercentage": "0",
                            "width": "1",
                            "zIndex": "0"
                        }
                    ]
                }
              }
/vas/ticket-booking/bus/ticket:
  description: Reports endpoit provide you whole the functionality you need to work with vas bus ticket booking apis.
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>ticketId</i></b> - get the information of a ticket.</p>
    body:
      application/json:
        example: |
          {"ticketId":"5"}
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                    {

                    }
                ]
              } |
              {
                "success": 1,
                "response": [

                ]
              }
  post:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>availableTripId</i></b> - the id for trip</p>
            <p><b><i>inventoryItems</i></b> - an array with these key.
            seatname,
            fare,
            ladiesSeat,
            passenger

            and passenger should be an array with these key
            name
            mobile
            title
            email
            age
            gender </p>
            This api will block ticket
    body:
      application/json:
        example: |
          {
              "source": 626,
              "vasId": 19,
              "availableTripId": "1000001822371170214",
              "vasProviderId": 4,
              "vasOperatorId": 2,
              "destination": 649,
              "boardingPointId": "1089133",
              "inventoryItems": [
                  {
                      "ladiesSeat": false,
                      "passenger": {
                          "email": "dkalpesh91@gmail.com",
                          "age": "24",
                          "mobile": "9503636108",
                          "gender": "Male",
                          "name": "Kalpesh dhumal",
                          "primary": "true"
                      },
                      "fare": "1200.00",
                      "seatName": "5"
                  },
                  {
                      "ladiesSeat": false,
                      "passenger": {
                          "email": "",
                          "age": "34",
                          "mobile": "",
                          "gender": "Male",
                          "name": "satis d"
                      },
                      "fare": "1200.00",
                      "seatName": "6"
                  }
              ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                    "status": 1,
                    "orderId":"SDfjskdheqrwjh34",
                    "response":""
                ]
              }
  put:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>orderId</i></b> - the id for order</p>
            <p><b><i>blockKey</i></b> - block key is in response of ticket block api</p>
    body:
      application/json:
        example: |
          {
            "orderId":"SDfjskdheqrwjh34",
            "blockKey":""
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [

                ]
              }
/vas/ticket-booking/bus/ticket/cancel-information:
  description: Reports endpoit provide you whole the functionality you need to work with vas bus ticket booking apis.
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>ticketId</i></b> - "/ticket</p>
    body:
      application/json:
        example: |
          {"ticketId":"5"}
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                    {

                    }
                ]
              } |
              {
                "success": 1,
                "response": [

                ]
              }
/vas/recharge/cellphone:
  description: Returns relevant information on a MSISDN (operator, country...) as well as the list of products configured for your account and the destination operator linked to that MSISDN. Allows to check if a MSISDN is subjected to a promotion.
  get:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>cellphone</i></b> - cellphone number.</p>
    body:
      application/json:
        example: |
          {
            "cellphone": "+989153021234",
            "vasOperatorId":3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "orderId": "58885c656b619c050d5552d6"
                  }
              }
  post:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>name</i></b> - customer's name.</p>
            <p><b><i>cellphone</i></b> - customer's cellphone.</p>
            <p><b><i>amount</i></b> - amount of recharge.</p>
            <p><b><i>vasOperatorId</i></b> - selected operator id.</p>
    body:
      application/json:
        example: |
          {
            "vasOperatorId":1,
            "cellphone":"989153021234",
            "amount": "19.99"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response":
                {
                  "customerId":"9393023386"
                }
              }
/vas/recharge/send-money:
  description: send money to a recipient.
  post:
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>orderId</i></b> - order id string</p>
    body:
      application/json:
        example: |
          {
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                  "success": 1,
                  "response": {
                      "recipientId": 10012088,
                      "isSelfAccount": 0,
                      "recipientMobile": "9393023386"
                  }
              }
/vas/giftcards/list:
  description: to get a list available gift cards
  get:
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: Json STRING
      body:
      application/json:
        example: |
              {
              "vasId": 17,
              "vasOperatorId": 4,
              "vasProviderId": 5,
              }
/vas/giftcards/buy:
  description: buy gift cards
  post:
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: Json STRING
      body:
      application/json:
        example: |
              {
              "vasId": 17,
              "vasOperatorId": 4,
              "vasProviderId": 5,
              "receiverMobilenumber":"918793252893",
              "receiverName": "vinit",
              "receiverEmail": "coudhari@gmail.com",
              "giftCardId": 5,
              "giftProductDenomination": "5",
              "quantity": "5",
              "serviceCharge": "0.00",
              "totalAmount": "50.00",
              }