#%RAML 0.8
title: ePaisa Doctor App
version: 2.0
baseUri: http://nine.epaisa.com
securitySchemes:
  - customSecurityScheme:
      type: x-custome
      description: This <i>Token</i> is generated by login call and is working for one houre.
/care/department:
  description: Departments endpoit provide you whole the functionality you need to work with department apis.
  get:
    description: To fetch a list of departments. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible departments will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>departmentId</i></b> - departmentId fetch specific department information. <u>Optional</u></p>
            <p><b><i>departmentsId</i></b> - departmentsId fetch a list of department information. <u>Optional</u></p>
            <p><b><i>departmentName</i></b> - departmentName fetch all department their name started with this paramter's value information. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "departmentsId": [1,2,3,4,5,6]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Departments": [
                    {
                      "departmentId": 1,
                      "departmentName": "Accident and emergency (A&E)",
                      "departmentDescription": "Also called Casualty Department, where you're likely to be taken if you have arrived in an ambulance or emergency situation.",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481013677,
                      "updated_at": 1481013677,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    },
                    {
                      "departmentId": 2,
                      "departmentName": "Physiotherapy",
                      "departmentDescription": "Physiotherapists work through physical therapies such as exercise, massage, and manipulation of bones, joints and muscle tissues.",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481014148,
                      "updated_at": 1481014148,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    },
                    {
                      "departmentId": 3,
                      "departmentName": "Microbiology",
                      "departmentDescription": "The microbiology department provides an extensive clinical service, including mycology, parasitology, mycobacteriology, a high security pathology unit, and a healthcare associated infection investigation unit, as well as routine bacteriology and an expanding molecular diagnostic repertoire.",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481014176,
                      "updated_at": 1481014176,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    },
                    {
                      "departmentId": 4,
                      "departmentName": "Neurology",
                      "departmentDescription": "A medical specialty dealing with disorders of the nervous system. Specifically, it deals with the diagnosis and treatment of all categories of disease involving the central, peripheral, and autonomic nervous systems, including their coverings, blood vessels, and all effector tissue, such as muscle. Includes the brain, spinal cord, and spinal cord injuries (SCI).",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481014176,
                      "updated_at": 1481014176,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    },
                    {
                      "departmentId": 5,
                      "departmentName": "Obstetrics/Gynecology",
                      "departmentDescription": "Specialist nurses, midwives and imaging technicians provide maternity services such as: antenatal and postnatal care, maternal and foetal surveillance, and prenatal diagnosis.",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481014176,
                      "updated_at": 1481014176,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    },
                    {
                      "departmentId": 6,
                      "departmentName": "Oncology",
                      "departmentDescription": "A branch of medicine that deals with cancer and tumors. A medical professional who practices oncology is an oncologist. The Oncology department provides treatments, including radiotherapy and chemotherapy, for cancerous tumors and blood disorders.",
                      "status": 1,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "created_at": 1481014801,
                      "updated_at": 1481014801,
                      "createdUserId": 459,
                      "updatedUserId": 459
                    }
                  ],
                  "total": "6"
                }
              }
  post:
    description: To create a new department.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>departmentName</i></b> - departmentName is a title for each department like Emeregency.</p>
            <p><b><i>departmentDescription</i></b> - a short description <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "departmentName": "Accident and emergency (A&E)",
            "departmentDescription": "Also called Casualty Department, where you're likely to be taken if you have arrived in an ambulance or emergency situation."
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "departmentName": "Accident and emergency (A&E)",
                  "departmentDescription": "Also called Casualty Department, where you're likely to be taken if you have arrived in an ambulance or emergency situation.",
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1481013677,
                  "updated_at": 1481013677,
                  "departmentId": 1
                }
              }
  put:
    description: To edit a department.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>departmentId</i></b> - roomId is unique identifier for each department.</p>
            <p><b><i>departmentName</i></b> - departmentName is a title for each department like Emeregency.</p>
            <p><b><i>departmentDescription</i></b> - a short description <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "departmentId": 1,
            "departmentName": "Accident and emergency (A&E)",
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "departmentName": "Accident and emergency (A&E)",
                  "departmentDescription": "Also called Casualty Department, where you're likely to be taken if you have arrived in an ambulance or emergency situation.",
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1481013677,
                  "updated_at": 1481013677,
                  "departmentId": 1
                }
              }
  delete:
    description: To delete a department.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>departmentId</i></b> - roomId is unique identifier for each department.</p>
    body:
      application/json:
        example: |
          {
            "departmentId": 1
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }

/care/room:
  description: Rooms endpoit provide you whole the functionality you need to work with room apis.
  get:
    description: To fetch a list of rooms. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible rooms will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>roomId</i></b> - roomId fetch specific room information. <u>Optional</u></p>
            <p><b><i>roomsId</i></b> - fetch a list of specific rooms information. <u>Optional</u></p>
            <p><b><i>roomName</i></b> - roomName fetch all rooms their name started with this paramter's value information. <u>Optional</u></p>
            <p><b><i>isForDoctor</i></b> - fetch only rooms for doctors. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "roomsId": [1,3]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Rooms": [
                    {
                      "roomId": 1,
                      "roomName": "Emergency",
                      "roomNumber": "1",
                      "isForDoctor": 1,
                      "status": 1,
                      "created_at": 1479463340,
                      "updated_at": 1479463765,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "merchantId": 472
                    },
                    {
                      "roomId": 3,
                      "roomName": "Emergency Heart",
                      "roomNumber": "1",
                      "isForDoctor": 0,
                      "status": 1,
                      "created_at": 1479464162,
                      "updated_at": 1479464211,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "merchantId": 472
                    }
                  ],
                  "total": "2"
                }
              }
  post:
    description: To create a new room.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>roomName</i></b> - roomName is a title for each room like Emeregency.</p>
            <p><b><i>roomNumber</i></b> - roomNumber is for the situations we have more than one room for specific purpos for example if you have 3 emergency room you have roomNumber 1, 2 and 3 with the same roomName. <u>Optional</u></p>
            <p><b><i>isForDoctor</i></b> - fetch only rooms for doctors. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "roomName": "Emergency",
            "roomNumber": "1",
            "isForDoctor": 0,
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "roomName": "Emergency",
                  "roomNumber": "1",
                  "isForDoctor": 0,
                  "createdUserId": 459,
                  "updatedUserId": 459,
                  "created_at": 1479463340,
                  "updated_at": 1479463340,
                  "roomId": 1,
                  "merchantId": 472
                }
              }
  put:
    description: To edit a room.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>roomId</i></b> - roomId is unique identifier for each room.</p>
            <p><b><i>roomName</i></b> - roomName is a title for each room like Emeregency.</p> <u>Optional</u></p>
            <p><b><i>roomNumber</i></b> - roomNumber is for the situations we have more than one room for specific purpos for example if you have 3 emergency room you have roomNumber 1, 2 and 3 with the same roomName. <u>Optional</u></p>
            <p><b><i>isForDoctor</i></b> - fetch only rooms for doctors. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "roomId": 1,
            "isForDoctor": 1,
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "roomId": 1,
                  "roomName": "Emergency",
                  "roomNumber": "1",
                  "isForDoctor": 1,
                  "status": 1,
                  "created_at": 1479463340,
                  "updated_at": 1479463765,
                  "createdUserId": 459,
                  "updatedUserId": 459,
                  "merchantId": 472
                }
              }
  delete:
    description: To delete a room.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>roomId</i></b> - roomId is unique identifier for each room.</p>
    body:
      application/json:
        example: |
          {
            "roomId": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }

/care/patient:
  description: Patients endpoit provide you whole the functionality you need to work with patient apis.
  get:
    description: To fetch a list of patients. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible products will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>patientId</i></b> - patientId fetch specific patient information. <u>Optional</u></p>
            <p><b><i>patientsId</i></b> - fetch a list of specific patients information. <u>Optional</u></p>
            <p><b><i>patientBloodType</i></b> - patientBloodType fetch all patients with specific blood type. <u>Optional</u></p>
            <p><b><i>patientBirthday</i></b> - fetch all patients with specific birthday. <u>Optional</u></p>
            <p><b><i>patientGender</i></b> - fetch all patients with specific gender 0 is for women and 1 is for men. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch patients update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "patientsId":[1,2]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Patients": [
                    {
                      "patientId": 36973,
                      "patientColor": "#f23470",
                      "patientLabel": "IR",
                      "customerId": 38770,
                      "patientBloodType": "B-",
                      "patientBirthday": "1977-02-08",
                      "patientGender": 0,
                      "status": 1,
                      "created_at": 1481265551,
                      "updated_at": 1481265551,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "conditions": [
                        {
                          "patientConditionId": 195218,
                          "patientId": 36973,
                          "patientConditionsDiagnosedDate": 1481249249,
                          "conditionTitle": "Blood Pressure",
                          "conditionValue": "13/9",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195219,
                          "patientId": 36973,
                          "patientConditionsDiagnosedDate": 1481172139,
                          "conditionTitle": "Blood Pressure",
                          "conditionValue": "12/8",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195220,
                          "patientId": 36973,
                          "patientConditionsDiagnosedDate": 1481198371,
                          "conditionTitle": "Blood Pressure",
                          "conditionValue": "16/9",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195221,
                          "patientId": 36973,
                          "patientConditionsDiagnosedDate": 1481168834,
                          "conditionTitle": "Blood Pressure",
                          "conditionValue": "15/10",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195222,
                          "patientId": 36973,
                          "patientConditionsDiagnosedDate": 1481214111,
                          "conditionTitle": "Heart Rate",
                          "conditionValue": "110",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195223,
                          "patientId": 36973,
                          "patientConditionsDiagnosedDate": 1481217973,
                          "conditionTitle": "Heart Rate",
                          "conditionValue": "88",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195224,
                          "patientId": 36973,
                          "patientConditionsDiagnosedDate": 1481201695,
                          "conditionTitle": "Heart Rate",
                          "conditionValue": "67",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195225,
                          "patientId": 36973,
                          "patientConditionsDiagnosedDate": 1481206803,
                          "conditionTitle": "Heart Rate",
                          "conditionValue": "120",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195226,
                          "patientId": 36973,
                          "patientConditionsDiagnosedDate": 1481235707,
                          "conditionTitle": "Heart Rate",
                          "conditionValue": "100",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        }
                      ],
                      "appointments": [
                        {
                          "appointmentId": 34924,
                          "serviceId": 141,
                          "appointmentDate": "14-Apr-17",
                          "appointmentStartTime": 1481265890,
                          "appointmentEndTime": 1481267344,
                          "consultationType": "quo et laborum",
                          "doctorId": 1802,
                          "patientId": 36973,
                          "roomId": 112,
                          "status": 1,
                          "created_at": 1481265890,
                          "updated_at": 1481265890,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472,
                          "storeLocationId": 424
                        },
                        {
                          "appointmentId": 36246,
                          "serviceId": 125,
                          "appointmentDate": "14-Feb-17",
                          "appointmentStartTime": 1481265965,
                          "appointmentEndTime": 1481268558,
                          "consultationType": "est harum expedita",
                          "doctorId": 2376,
                          "patientId": 36973,
                          "roomId": 142,
                          "status": 1,
                          "created_at": 1481265965,
                          "updated_at": 1481265965,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472,
                          "storeLocationId": 424
                        },
                        {
                          "appointmentId": 36535,
                          "serviceId": 125,
                          "appointmentDate": "13-Dec-16",
                          "appointmentStartTime": 1481265978,
                          "appointmentEndTime": 1481268895,
                          "consultationType": "sunt esse officia",
                          "doctorId": 2088,
                          "patientId": 36973,
                          "roomId": 140,
                          "status": 1,
                          "created_at": 1481265978,
                          "updated_at": 1481265978,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472,
                          "storeLocationId": 424
                        }
                      ],
                      "information": {
                        "firstName": "Isha",
                        "lastName": "Ram",
                        "email": "rahim.bedi@kashyap.in",
                        "phoneNumber": "1891308313805",
                        "address1": "83, Prerna Apartments, AbhishekGarh Surat - 279342",
                        "address2": null,
                        "cityId": null,
                        "stateId": null,
                        "countryCode": null,
                        "pincode": null
                      }
                    },
                    {
                      "patientId": 36975,
                      "patientColor": "#ba4195",
                      "patientLabel": "LS",
                      "customerId": 38772,
                      "patientBloodType": "A+",
                      "patientBirthday": "1949-03-19",
                      "patientGender": 1,
                      "status": 1,
                      "created_at": 1481265551,
                      "updated_at": 1481265551,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "conditions": [
                        {
                          "patientConditionId": 195236,
                          "patientId": 36975,
                          "patientConditionsDiagnosedDate": 1481223281,
                          "conditionTitle": "Blood Pressure",
                          "conditionValue": "13/9",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195237,
                          "patientId": 36975,
                          "patientConditionsDiagnosedDate": 1481170216,
                          "conditionTitle": "Blood Pressure",
                          "conditionValue": "12/8",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195238,
                          "patientId": 36975,
                          "patientConditionsDiagnosedDate": 1481232768,
                          "conditionTitle": "Blood Pressure",
                          "conditionValue": "16/9",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195239,
                          "patientId": 36975,
                          "patientConditionsDiagnosedDate": 1481240685,
                          "conditionTitle": "Blood Pressure",
                          "conditionValue": "15/10",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195240,
                          "patientId": 36975,
                          "patientConditionsDiagnosedDate": 1481174148,
                          "conditionTitle": "Heart Rate",
                          "conditionValue": "110",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195241,
                          "patientId": 36975,
                          "patientConditionsDiagnosedDate": 1481246553,
                          "conditionTitle": "Heart Rate",
                          "conditionValue": "88",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195242,
                          "patientId": 36975,
                          "patientConditionsDiagnosedDate": 1481178377,
                          "conditionTitle": "Heart Rate",
                          "conditionValue": "67",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195243,
                          "patientId": 36975,
                          "patientConditionsDiagnosedDate": 1481230830,
                          "conditionTitle": "Heart Rate",
                          "conditionValue": "120",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195244,
                          "patientId": 36975,
                          "patientConditionsDiagnosedDate": 1481177012,
                          "conditionTitle": "Heart Rate",
                          "conditionValue": "100",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        }
                      ],
                      "appointments": [
                        {
                          "appointmentId": 34185,
                          "serviceId": 141,
                          "appointmentDate": "21-Nov-17",
                          "appointmentStartTime": 1481265861,
                          "appointmentEndTime": 1481268543,
                          "consultationType": "omnis aut optio",
                          "doctorId": 2008,
                          "patientId": 36975,
                          "roomId": 134,
                          "status": 1,
                          "created_at": 1481265861,
                          "updated_at": 1481265861,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472,
                          "storeLocationId": 424
                        }
                      ],
                      "information": {
                        "firstName": "Labeen",
                        "lastName": "Shankar",
                        "email": "bansal.kirti@bhatia.in",
                        "phoneNumber": "5403636664458",
                        "address1": "35, Aundh, Surat - 448523",
                        "address2": null,
                        "cityId": null,
                        "stateId": null,
                        "countryCode": null,
                        "pincode": null
                      }
                    },
                    {
                      "patientId": 36977,
                      "patientColor": "#c8d671",
                      "patientLabel": "DD",
                      "customerId": 38774,
                      "patientBloodType": "A-",
                      "patientBirthday": "1987-07-30",
                      "patientGender": 1,
                      "status": 1,
                      "created_at": 1481265551,
                      "updated_at": 1481265551,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "conditions": [
                        {
                          "patientConditionId": 195254,
                          "patientId": 36977,
                          "patientConditionsDiagnosedDate": 1481203907,
                          "conditionTitle": "Blood Pressure",
                          "conditionValue": "13/9",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195255,
                          "patientId": 36977,
                          "patientConditionsDiagnosedDate": 1481171297,
                          "conditionTitle": "Blood Pressure",
                          "conditionValue": "12/8",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195256,
                          "patientId": 36977,
                          "patientConditionsDiagnosedDate": 1481233951,
                          "conditionTitle": "Blood Pressure",
                          "conditionValue": "16/9",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195257,
                          "patientId": 36977,
                          "patientConditionsDiagnosedDate": 1481248693,
                          "conditionTitle": "Blood Pressure",
                          "conditionValue": "15/10",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195258,
                          "patientId": 36977,
                          "patientConditionsDiagnosedDate": 1481221495,
                          "conditionTitle": "Heart Rate",
                          "conditionValue": "110",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195259,
                          "patientId": 36977,
                          "patientConditionsDiagnosedDate": 1481247973,
                          "conditionTitle": "Heart Rate",
                          "conditionValue": "88",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195260,
                          "patientId": 36977,
                          "patientConditionsDiagnosedDate": 1481214760,
                          "conditionTitle": "Heart Rate",
                          "conditionValue": "67",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195261,
                          "patientId": 36977,
                          "patientConditionsDiagnosedDate": 1481247599,
                          "conditionTitle": "Heart Rate",
                          "conditionValue": "120",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "patientConditionId": 195262,
                          "patientId": 36977,
                          "patientConditionsDiagnosedDate": 1481217906,
                          "conditionTitle": "Heart Rate",
                          "conditionValue": "100",
                          "status": 1,
                          "created_at": 1481265551,
                          "updated_at": 1481265551,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        }
                      ],
                      "appointments": [
                        {
                          "appointmentId": 34279,
                          "serviceId": 139,
                          "appointmentDate": "16-Jan-17",
                          "appointmentStartTime": 1481265865,
                          "appointmentEndTime": 1481268980,
                          "consultationType": "fugit necessitatibus nam",
                          "doctorId": 1856,
                          "patientId": 36977,
                          "roomId": 152,
                          "status": 1,
                          "created_at": 1481265865,
                          "updated_at": 1481265865,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472,
                          "storeLocationId": 424
                        }
                      ],
                      "information": {
                        "firstName": "Deepesh",
                        "lastName": "Deshpande",
                        "email": "yadu.kapadia@gmail.com",
                        "phoneNumber": "2303409548663",
                        "address1": "95, Srinivasan Villas, Goregaon Gurgaon - 321082",
                        "address2": null,
                        "cityId": null,
                        "stateId": null,
                        "countryCode": null,
                        "pincode": null
                      }
                    }
                  ],
                  "total": "1804"
                }
              }
  post:
    description: To create a new patient.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>customerId</i></b> - customer id for current patient.</p>
            <p><b><i>patientBloodType</i></b> - patientBloodType blood type for current patient.</p>
            <p><b><i>patientGender</i></b> - Gender for current patient 0 for women and 1 for men.</p>
            <p><b><i>patientBirthday</i></b> - birthday date for current patient.</p>
    body:
      application/json:
        example: |
          {
            "customerId": 13,
            "patientBloodType": "AB+",
            "patientGender": 1,
            "patientBirthday": "Dec 7th 1989"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "customerId": 13,
                  "patientBloodType": "AB+",
                  "patientGender": 1,
                  "patientBirthday": "Dec 7th 1989",
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1479482582,
                  "updated_at": 1479482582,
                  "patientId": 1
                }
              }
  put:
    description: To edit a patient.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>patientId</i></b> - customer id for current patient.</p>
            <p><b><i>patientBloodType</i></b> - patientBloodType blood type for current patient.</p>
            <p><b><i>patientGender</i></b> - Gender for current patient 0 for women and 1 for men.</p>
            <p><b><i>patientBirthday</i></b> - birthday date for current patient.</p>
    body:
      application/json:
        example: |
          {
            "patientId": 1,
            "patientBloodType": "B+",
            "patientGender": 0,
            "patientBirthday": "Dec 7th 1988"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "patientId": 1,
                  "customerId": 13,
                  "patientBloodType": "B+",
                  "patientBirthday": "Dec 7th 1988",
                  "patientGender": 0,
                  "status": 1,
                  "created_at": 1479482582,
                  "updated_at": 1479483079,
                  "createdUserId": 459,
                  "updatedUserId": 459,
                  "merchantId": 472
                }
              }
  delete:
    description: To delete a patient.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>patientId</i></b> - patientId is unique identifier for each patient.</p>
    body:
      application/json:
        example: |
          {
            "patientId": 2
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }

/care/patient/message:
  description: Patients message endpoit provide you whole the functionality you need to work with patient message apis.
  post:
    description: To send a message to a patient.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>patientId</i></b> - patient id you want to send this message to.</p>
            <p><b><i>patients</i></b> - array of patient id you want to send this message to all of them.</p>
            <p><b><i>type</i></b> - 'sms' or 'email'.</p>
            <p><b><i>message</i></b> - body of message.</p>
    body:
      application/json:
        example: |
          {
            "patientId": 1,
            "type": "sms",
            "message": "Hello, Tomorrow is your resevation date for initial consultation please come to hospital between 13:00 to 13:30"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }

/care/patient/condition:
  description: Patients endpoit provide you create/edit/delete the functionality you need to work with patient conditions apis.
  post:
    description: To create a new patient condition.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>patientId</i></b> - roomName is a title for each room like Emeregency.</p>
            <p><b><i>patientConditionsDiagnosedDate</i></b> - diagnosed date timestamp value. <u>Optional</u></p>
            <p><b><i>conditionTitle</i></b> - title. <u>Optional</u></p>
            <p><b><i>conditionValue</i></b> - value. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "patientId": 1,
            "patientConditionsDiagnosedDate": 1479463948,
            "conditionTitle": "Blood Pressure",
            "conditionValue": "13/9",
          } |
            [
              {
                "patientId": 1,
                "patientConditionsDiagnosedDate": 1479463948,
                "conditionTitle": "Blood Pressure",
                "conditionValue": "13/9",
              },
              {
                "patientId": 1,
                "patientConditionsDiagnosedDate": 1479463948,
                "conditionTitle": "Blood Pressure",
                "conditionValue": "13/9",
              },
              {
                "patientId": 1,
                "patientConditionsDiagnosedDate": 1479463948,
                "conditionTitle": "Blood Pressure",
                "conditionValue": "13/9",
              },
              {
                "patientId": 1,
                "patientConditionsDiagnosedDate": 1479463948,
                "conditionTitle": "Blood Pressure",
                "conditionValue": "13/9",
              }
            ]
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "patientId": 1,
                  "patientConditionsDiagnosedDate": 1479463948,
                  "conditionTitle": "Blood Pressure",
                  "conditionValue": "13/9",
                  "merchantId": 472,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1479533280,
                  "updated_at": 1479533280,
                  "patientConditionId": 3
                }
              }
  put:
    description: To edit a patient condition.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>patientConditionId</i></b> - roomName is a title for each room like Emeregency.</p> <u>Optional</u></p>
            <p><b><i>patientConditionsDiagnosedDate</i></b> - diagnosed date. <u>Optional</u></p>
            <p><b><i>conditionTitle</i></b> - title. <u>Optional</u></p>
            <p><b><i>conditionValue</i></b> - value. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "patientConditionId": 1,
            "patientConditionsDiagnosedDate": 1479463948,
            "conditionTitle": "Blood Pressure",
            "conditionValue": "12/8",
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "patientId": 1,
                  "patientConditionsDiagnosedDate": 1479463948,
                  "conditionTitle": "Blood Pressure",
                  "conditionValue": "12/8",
                  "merchantId": 472,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1479533280,
                  "updated_at": 1479533280,
                  "patientConditionId": 1
                }
              }
  delete:
    description: To delete a patient condition.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>patientConditionId</i></b> - patientConditionId is unique identifier for each patient condition.</p>
    body:
      application/json:
        example: |
          {
            "patientConditionId": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }

/care/doctor:
  description: Doctor endpoit provide you whole the functionality you need to work with doctor apis.
  get:
    description: To fetch a list of doctors. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible rooms will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>doctorId</i></b> - doctorId fetch specific doctor information. <u>Optional</u></p>
            <p><b><i>doctorsId</i></b> - to fetch a list of specific doctor information. <u>Optional</u></p>
            <p><b><i>doctorName</i></b> - Name of doctor. <u>Optional</u></p>
            <p><b><i>doctorJob</i></b> - Job of doctor, Physician or Reception. <u>Optional</u></p>
            <p><b><i>doctorTitle</i></b> - Title of doctor. "Dr. " <u>Optional</u></p>
            <p><b><i>day</i></b> - avaiable in specific day of week. <u>Optional</u></p>
            <p><b><i>status</i></b> - 1 for active 2 for inactive. <u>Optional</u></p>
            <p><b><i>start</i></b> - avaiable in specific time in a specific day of week. <u>Optional</u></p>
            <p><b><i>end</i></b> - avaiable in specific time in a specific day of week. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch a room update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "updated_at": 1468062355,
            "day":"Monday"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Doctors": [
                    {
                      "doctorId": 1,
                      "doctorName": "",
                      "doctorJob": "Orthopedist",
                      "doctorTitle": "Dr.",
                      "doctorColor": "#ffffff",
                      "status": 1, // Active
                      "created_at": 1479712067,
                      "updated_at": 1479712699,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "merchantId": 472,
                      "workingHours": [
                        {
                          "doctorWorkingHourId": 18,
                          "doctorId": 1,
                          "weekDay": "Monday",
                          "startTime": "09:00:00",
                          "endTime": "12:00:00",
                          "status": 1,
                          "merchantId": 472,
                          "created_at": 1479974276,
                          "updated_at": 1479974276,
                          "createdUserId": 459,
                          "updatedUserId": 459
                        },
                        {
                          "doctorWorkingHourId": 19,
                          "doctorId": 1,
                          "weekDay": "Friday",
                          "startTime": "09:00:00",
                          "endTime": "12:00:00",
                          "status": 1,
                          "merchantId": 472,
                          "created_at": 1479974276,
                          "updated_at": 1479975217,
                          "createdUserId": 459,
                          "updatedUserId": 459
                        },
                        {
                          "doctorWorkingHourId": 20,
                          "doctorId": 1,
                          "weekDay": "Tuesday",
                          "startTime": "09:00:00",
                          "endTime": "12:00:00",
                          "status": 1,
                          "merchantId": 472,
                          "created_at": 1479974276,
                          "updated_at": 1479974276,
                          "createdUserId": 459,
                          "updatedUserId": 459
                        },
                        {
                          "doctorWorkingHourId": 21,
                          "doctorId": 1,
                          "weekDay": "Friday",
                          "startTime": "09:00:00",
                          "endTime": "12:00:00",
                          "status": 1,
                          "merchantId": 472,
                          "created_at": 1479974276,
                          "updated_at": 1479974276,
                          "createdUserId": 459,
                          "updatedUserId": 459
                        }
                      ]
                    },
                    {
                      "doctorId": 2,
                      "doctorName": "",
                      "doctorJob": "Surgery",
                      "doctorTitle": "Dr.",
                      "doctorColor": "#ffffff",
                      "status": 2, // inActive
                      "created_at": 1479712463,
                      "updated_at": 1479712463,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "merchantId": 472,
                      "workingHours": [
                        {
                          "doctorWorkingHourId": 26,
                          "doctorId": 2,
                          "weekDay": "Monday",
                          "startTime": "13:00:00",
                          "endTime": "17:00:00",
                          "status": 1,
                          "merchantId": 472,
                          "created_at": 1479974276,
                          "updated_at": 1479974276,
                          "createdUserId": 459,
                          "updatedUserId": 459
                        }
                      ]
                    }
                  ],
                  "total": "2"
                }
              }
  post:
    description: To create a new doctor.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>departmentId</i></b> - unique identifier for the department.</p>
            <p><b><i>doctorName</i></b> - Name of doctor.</p>
            <p><b><i>doctorJob</i></b> - Job of doctor, Physician or Reception.</p>
            <p><b><i>doctorTitle</i></b> - Title of doctor. "Dr. "</p>
            <p><b><i>doctorColor</i></b> - HEX value of doctorColor "#ffffff". </p>
            <p><b><i>userId</i></b> - unique identifier for the user.</p>
            <p><b><i>file</i></b> - file base 64 encode.</p>
            <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
            <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
    body:
      application/json:
        example: |
          {
            "doctorJob": "Orthopedist",
            "doctorTitle": "Dr.",
            "doctorColor": "#ffffff"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "doctorJob": "Orthopedist",
                  "doctorTitle": "Dr.",
                  "doctorColor": "#ffffff",
                  "merchantId": 472,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1479712067,
                  "updated_at": 1479712067,   
                  "commissionType": "%",
                  "commissionFee": 0.00, 
                  "doctorId": 1
                }
              }
  put:
    description: To edit a doctor.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>doctorId</i></b> - doctorId is unique identifier for each doctor.</p>
            <p><b><i>doctorName</i></b> - Name of doctor. <u>Optional</u></p>
            <p><b><i>doctorJob</i></b> - Job of doctor, Physician or Reception. <u>Optional</u></p>
            <p><b><i>doctorTitle</i></b> - Title of doctor. "Dr. " <u>Optional</u></p>
            <p><b><i>doctorColor</i></b> - HEX value of doctorColor "#ffffff". <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "doctorId":1,
            "doctorJob":"Orthopedist"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "doctorId": 1,
                  "doctorJob": "Orthopedist",
                  "doctorTitle": "Dr.",
                  "doctorColor": "#ffffff",
                  "status": 1,
                  "created_at": 1479712067,
                  "updated_at": 1479712279,
                  "createdUserId": 459,
                  "updatedUserId": 459,
                  "merchantId": 472
                }
              }
  delete:
    description: To delete a doctor.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>doctorId</i></b> - doctorId is unique identifier for each doctor.</p>
    body:
      application/json:
        example: |
          {
            "doctorId": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []

/care/doctor/file:
  description: Service endpoit provide you whole the functionality you need to work with service apis.
  get:
    description: To fetch image content.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>doctorImage</i></b> image to load.</p>
    body:
      application/json:
        example: |
          {
              "doctorImage": "v2\/salonapp\/services\/459__20170209061447.png"
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
                "success": 1,
                "response": {
                    "filename": "v2\/salonapp\/services\/459__20170209061447.png",
                    "data": "iVBORw0KGgoAAAANSUhEUgAAADQAAABQCAIAAADZf8HwAAAAA3NCSVQICAjb4U\/gAAAAGXRFWHRTb2Z0d2FyZQBnbm9tZS1zY3JlZW5zaG907wO\/PgAAAGtJREFUaIHtzjEBwCAAwDBA2R4M4F\/MHOzow45EQeazz\/irdTvwRa6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+SqF7wIAXd1UjysAAAAAElFTkSuQmCC"
                }
              }
/care/doctor/service:
  description: Doctor Service endpoit provide you whole the functionality you need to work with doctor service apis.
  post:
    description: To create a new doctor service row.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>doctorId</i></b> - unique identifier for the doctor.</p>
            <p><b><i>serviceId</i></b> - unique identifier for the service.</p>
            <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
            <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
    body:
      application/json:
        example: |
          {
            "doctorId": 1,
            "serviceId": 2,
            "commissionType": "Fix",
            "commissionFee": 1000
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "doctorId": 1,
                  "serviceId": 2,
                  "merchantId": 472,
                  "commissionType": "Fix",
                  "commissionFee": 1000,
                  "created_at": 0,
                  "updated_at": 1481035306,
                  "createdUserId": 0,
                  "updatedUserId": 459
                }
              }
  put:
    description: To edit a doctor.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>doctorId</i></b> - unique identifier for the doctor.</p>
            <p><b><i>serviceId</i></b> - unique identifier for the service.</p>
            <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
            <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
    body:
      application/json:
        example: |
          {
            "doctorId": 1,
            "serviceId": 2,
            "commissionType": "Fix",
            "commissionFee": 1000
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "doctorId": 1,
                  "serviceId": 2,
                  "merchantId": 472,
                  "commissionType": "Fix",
                  "commissionFee": 1000,
                  "created_at": 0,
                  "updated_at": 1481035306,
                  "createdUserId": 0,
                  "updatedUserId": 459
                }
              }
  delete:
    description: To delete a doctor.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>doctorId</i></b> - unique identifier for the doctor.</p>
            <p><b><i>serviceId</i></b> - unique identifier for the service.</p>
    body:
      application/json:
        example: |
          {
            "doctorId": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/care/doctor/working-hours:
  description: Doctor Working Hour endpoit provide you whole the functionality you need.
  post:
    description: To create and edit a doctor working hour row.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>doctorId</i></b> - unique identifier for the doctor.</p>
            <p><b><i>workingHours</i></b> - array of "day", "start" and "end" to create plus "doctorWorkingHourId" for edit only.</p>
    body:
      application/json:
        example: |
          {
            "doctorId": 1,
            "workingHours": [
              {
                "day": "Monday",
                "start": "9:00",
                "end": "12:00"
              },
              {
                "day": "Monday",
                "start": "14:00",
                "end": "18:00"
              },
              {
                "day": "Tuesday",
                "start": "9:00",
                "end": "12:00"
              },
              {
                "day": "Friday",
                "start": "9:00",
                "end": "12:00"
              },
              {
                "doctorWorkingHourId": 19,
                "day": "Friday",
                "start": "9:00",
                "end": "12:00"
              }
            ]
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": [
                  {
                    "doctorId": 1598,
                    "merchantId": 472,
                    "weekDay": "Monday",
                    "startTime": "9:00",
                    "endTime": "12:00",
                    "created_at": 1481612359,
                    "updated_at": 1481612359,
                    "doctorWorkingHourId": 25708
                  },
                  {
                    "doctorId": 1598,
                    "merchantId": 472,
                    "weekDay": "Monday",
                    "startTime": "14:00",
                    "endTime": "18:00",
                    "created_at": 1481612359,
                    "updated_at": 1481612359,
                    "doctorWorkingHourId": 25709
                  },
                  {
                    "doctorId": 1598,
                    "merchantId": 472,
                    "weekDay": "Tuesday",
                    "startTime": "9:00",
                    "endTime": "12:00",
                    "created_at": 1481612359,
                    "updated_at": 1481612359,
                    "doctorWorkingHourId": 25710
                  },
                  {
                    "doctorId": 1598,
                    "merchantId": 472,
                    "weekDay": "Friday",
                    "startTime": "9:00",
                    "endTime": "12:00",
                    "created_at": 1481612359,
                    "updated_at": 1481612359,
                    "doctorWorkingHourId": 25711
                  },
                  {
                    "doctorWorkingHourId": 25707,
                    "doctorId": 1598,
                    "weekDay": "Friday",
                    "startTime": "9:00",
                    "endTime": "12:00",
                    "status": 1,
                    "merchantId": 472,
                    "created_at": 1481612271,
                    "updated_at": 1481612359,
                    "createdUserId": 0,
                    "updatedUserId": 0
                  }
                ]
              }
  delete:
    description: To delete a doctor working hour.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>doctorWorkingHourId</i></b> - unique identifier for the doctor working hour.</p>
    body:
      application/json:
        example: |
          {
            "doctorWorkingHourId": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }
/care/doctor/notification:
  description: Doctor notification endpoit provide the functionality to send notification for a reception.
  post:
    description: To send a notification to a reception.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>receptionId</i></b> - Name of doctor.</p>
            <p><b><i>message</i></b> - the messages you want to send to a reception.</p>
    body:
      application/json:
        example: |
          {
            "doctorId": 1,
            "message": "Requesting the next patient."
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
                "success": 1,
                "response": []
              }

/care/appointment:
  description: Appointment endpoit provide you whole the functionality you need to work with appointment apis.
  get:
    description: To fetch a list of patients. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible products will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentStatusValue</i></b> - fetch list of appointment at a specific status 0 for open, 1 for cancel by doctor, 2 for cancel by patient, 3 for patient check-in, 4 for patient check-out and 5 for waiting. <u>Optional</u></p>
            <p><b><i>apointmentId</i></b> - fetch a specific appointment. <u>Optional</u></p>
            <p><b><i>apointmentsId</i></b> - fetch a list of specific appointment. <u>Optional</u></p>
            <p><b><i>appointmentDate</i></b> - fetch a list of appointment for specific date. <u>Optional</u></p>
            <p><b><i>doctorId</i></b> - fetch a all appointment for specific doctor. <u>Optional</u></p>
            <p><b><i>doctorsId</i></b> - fetch a all appointment for some doctors. <u>Optional</u></p>
            <p><b><i>roomId</i></b> - ffetch a all appointment for specific room. <u>Optional</u></p>
            <p><b><i>roomsId</i></b> - fetch a all appointment for some rooms. <u>Optional</u></p>
            <p><b><i>patientId</i></b> - fetch a all appointment for specific patient. <u>Optional</u></p>
            <p><b><i>customerId</i></b> - fetch a all appointment for specific customer. <u>Optional</u></p>
            <p><b><i>patientsId</i></b> - fetch a all appointment for some patients. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch patients update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "updated_at": 1468062355
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Appointments": [
                    {
                      "appointmentId": 32013,
                      "customerId": 41646,
                      "patientId": 39849,
                      "appointmentDate": "21-Sep-17",
                      "appointmentStartTime": 1481265750,
                      "appointmentEndTime": 1481266661,
                      "consultationType": "debitis voluptas aliquam",
                      "doctorId": 2104,
                      "roomId": 136,
                      "status": 1,
                      "created_at": 1481265750,
                      "updated_at": 1481265750,
                      "createdUserId": 459,
                      "updatedUserId": 459,
                      "merchantId": 472,
                      "storeLocationId": 424,
                      "appointmentStatuses": [
                        {
                          "appointmentStatusId": 128394,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 0,
                          "status": 2,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "appointmentStatusId": 128395,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 1,
                          "status": 2,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "appointmentStatusId": 128396,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 2,
                          "status": 2,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "appointmentStatusId": 128397,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 3,
                          "status": 2,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "appointmentStatusId": 128398,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 4,
                          "status": 2,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        },
                        {
                          "appointmentStatusId": 128399,
                          "appointmentId": 32013,
                          "appointmentStatusValue": 5,
                          "status": 1,
                          "created_at": 1481265750,
                          "updated_at": 1481265750,
                          "createdUserId": 459,
                          "updatedUserId": 459,
                          "merchantId": 472
                        }
                      ],
                      "service": {
                        "serviceId": 135,
                        "serviceLabel": "NU",
                        "serviceImage": null,
                        "storeLocationId": 424,
                        "serviceName": "Nutrition and dietetics",
                        "serviceNumberOfSession": 2,
                        "serviceDescription": "Ut sint recusandae minus et voluptatum. Sed voluptates nesciunt velit labore pariatur. Quae laboriosam eligendi et non et iste magnam.",
                        "servicePrice": 98,
                        "serviceTypeOfPrice": 1,
                        "serviceDuration": "00:15:00",
                        "serviceColor": "#bf6518",
                        "merchantId": 472,
                        "status": 1,
                        "created_at": 1481265441,
                        "updated_at": 1481265441,
                        "createdUserId": 459,
                        "updatedUserId": 459
                      },
                      "customer": {
                        "customerId": 41646,
                        "firstName": "Gayatri",
                        "lastName": "Oza",
                        "email": "roma06@yahoo.com",
                        "phoneNumber": "1319333102688",
                        "password_hash": null,
                        "otp": null,
                        "dob": "1964-09-23",
                        "address1": "59, Chandpole, Gandhinagar - 372567",
                        "address2": null,
                        "created_at": 1481265704,
                        "updated_at": 1481265704,
                        "createdUserId": 459,
                        "updatedUserId": 459,
                        "status": 1,
                        "cityId": null,
                        "stateId": null,
                        "pincode": null,
                        "countryCode": null
                      },
                      "patient": {
                        "patientId": 39849,
                        "patientColor": "#401ae9",
                        "patientLabel": "GO",
                        "customerId": 41646,
                        "patientBloodType": "A-",
                        "patientBirthday": "1964-09-23",
                        "patientGender": 0,
                        "status": 1,
                        "created_at": 1481265704,
                        "updated_at": 1481265704,
                        "createdUserId": 459,
                        "updatedUserId": 459,
                        "merchantId": 472,
                        "storeLocationId": 424
                      },
                      "doctor": {
                        "doctorId": 2104,
                        "userId": 0,
                        "doctorLabel": "BI",
                        "doctorName": "Binita Tara",
                        "doctorJob": "DDS",
                        "doctorTitle": "DC",
                        "doctorColor": "#7828ec",
                        "status": 1,
                        "merchantId": 472,
                        "storeLocationId": 424,
                        "created_at": 1481265515,
                        "updated_at": 1481265515,
                        "createdUserId": 459,
                        "updatedUserId": 459,
                        "departmentId": 37
                      },
                      "room": {
                        "roomId": 136,
                        "roomName": "nursery",
                        "roomNumber": "2",
                        "isForDoctor": 0,
                        "status": 1,
                        "created_at": 1481265442,
                        "updated_at": 1481265442,
                        "createdUserId": 459,
                        "updatedUserId": 459,
                        "merchantId": 472,
                        "storeLocationId": 424
                      }
                    }
                  ],
                  "total": "1"
                }
              }
  post:
    description: To create a new appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceId</i></b> - unique identifier for the service this appointment is going to.</p>
            <p><b><i>roomId</i></b> - unique identifier for the room this appointment is going to take place.</p>
            <p><b><i>doctorId</i></b> - unique identifier for the doctor.</p>
            <p><b><i>customerId</i></b> - unique identifier for the customer.</p>
            <p><b><i>appointmentDate</i></b> - date of appointment with "d-M-y" format pattern as described in the ICU manual.</p>
            <p><b><i>appointmentStartTime</i></b> - start of appointment timestamp.</p>
            <p><b><i>appointmentEndTime</i></b> - end of appointment timestamp.</p>
    body:
      application/json:
        example: |
          {
            "serviceId": 2,
            "roomId": 1,
            "doctorId": 1,
            "customerId": 1,
            "appointmentDate": "21-11-2016",
            "appointmentStartTime": 1479718800,
            "appointmentEndTime": 1479722400,
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "serviceId": 2,
                  "roomId": 1,
                  "doctorId": 1,
                  "customerId": 1,
                  "appointmentDate": "21-11-2016",
                  "appointmentStartTime": 1479718800,
                  "appointmentEndTime": 1479722400,
                  "consultationType": "Initial Consultation",
                  "merchantId": 472,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1479717344,
                  "updated_at": 1479717344,
                  "appointmentId": 1
                }
              }
  put:
    description: To edit an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentId</i></b> - appointment id is unique identifier for appointment you want to edit.</p>
            <p><b><i>roomId</i></b> - unique identifier for the room this appointment is going to take place. <u>Optional</u></p>
            <p><b><i>doctorId</i></b> - unique identifier for the doctor. <u>Optional</u></p>
            <p><b><i>patientId</i></b> - unique identifier for the patient. <u>Optional</u></p>
            <p><b><i>appointmentDate</i></b> - date of appointment with "d-M-y" format pattern as described in the ICU manual. <u>Optional</u></p>
            <p><b><i>appointmentStartTime</i></b> - start of appointment timestamp. <u>Optional</u></p>
            <p><b><i>appointmentEndTime</i></b> - end of appointment timestamp. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "appointmentId": 1,
            "doctorId": 2
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "appointmentId": 1,
                  "appointmentDate": "21-11-2016",
                  "appointmentStartTime": 1479718800,
                  "appointmentEndTime": 1479722400,
                  "doctorId": 2,
                  "patientId": 1,
                  "roomId": 1,
                  "status": 1,
                  "created_at": 1479717344,
                  "updated_at": 1479720413,
                  "createdUserId": 459,
                  "updatedUserId": 459,
                  "merchantId": 472
                }
              }
  delete:
    description: To delete an appointment.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentId</i></b> - appointment id is unique identifier for appointment you want to edit.</p>
    body:
      application/json:
        example: |
          {
            "appointmentId": 1
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }

/care/appointment/status:
  description: Appointment status endpoit provide you create/edit/delete the functionality you need to work with appointment status apis.
  post:
    description: To create a new appointment status.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentId</i></b> - appointmentId is unique identifier for each appointment.</p>
            <p><b><i>appointmentStatusValue</i></b> - value can be 0 for open, 1 for canceled by patient, 2 canceled by doctor, 3 check in, 4 check out, 5 waiting.</p>
    body:
      application/json:
        example: |
          {
            "appointmentId": 1,
            "appointmentStatusValue": 1
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "appointmentId": 1,
                  "appointmentStatusValue": 1,
                  "merchantId": 472,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1479755189,
                  "updated_at": 1479755189,
                  "appointmentStatusId": 1
                }
              }
  put:
    description: To edit an appointment status.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentStatusId</i></b> - appointmentStatusId is a unique id for each appointment status.</p></p>
            <p><b><i>appointmentStatusValue</i></b> - new status value for appointment status</p>
    body:
      application/json:
        example: |
          {
            "appointmentStatusId": 1,
            "appointmentStatusValue": 1
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "appointmentId": 1,
                  "appointmentStatusValue": 1,
                  "merchantId": 472,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "created_at": 1479755189,
                  "updated_at": 1479755189,
                  "appointmentStatusId": 1
                }
              }
  delete:
    description: To delete a room.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>appointmentStatusId</i></b> - appointmentStatusId is unique identifier for each appointment status.</p>
    body:
      application/json:
        example: |
          {
            "appointmentStatusId": 3
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }

/care/service:
  description: Service endpoit provide you whole the functionality you need to work with service apis.
  get:
    description: To fetch a list of services. you can set <b>limit</b> and <b>offset</b> default values are 100 and 0 accordingly. therefore if you send your request with none of the above parameters a list of first 100 avalible products will returned.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceId</i></b> - serviceId fetch specific service information. <u>Optional</u></p>
            <p><b><i>servicesId</i></b> - fetch a list of services. <u>Optional</u></p>
            <p><b><i>productCategortyId</i></b> - fetch a list of services belong to a productCategory. <u>Optional</u></p>
            <p><b><i>productCategoriesId</i></b> - fetch a list of services belong to some product categories. <u>Optional</u></p>
            <p><b><i>serviceName</i></b> - serviceName fetch all services with the name start with serviceName. <u>Optional</u></p>
            <p><b><i>updated_at</i></b> - last modified date is the last time client fetch services update. <u>Optional</u></p>
            <p><b><i>limit</i></b> - Integer number of orders in result list. <u>Optional</u></p>
            <p><b><i>offset</i></b> - Integer offset of orders in result list. <u>Optional</u></p>
    body:
      application/json:
        example: |
          {
            "updated_at": 1468062355
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "Services": [
                    {
                      "serviceName": "Initial Consultation",
                      "productCategoryId": 3,
                      "serviceNumberOfSession": 1,
                      "servicePrice": 10,
                      "serviceTypeOfPrice": 0,
                      "serviceDuration": "1:15",
                      "serviceDescription": "Patient for the first time need to be check with a doctor for inital consultation.",
                      "serviceColor": "#ffffff",
                      "merchantId": 472,
                      "updatedUserId": 459,
                      "createdUserId": 459,
                      "storeLocationId": 424,
                      "created_at": 1480078941,
                      "updated_at": 1480078941,
                      "serviceId": 2
                    }
                  ],
                  "total": "1"
                }
              }
  post:
    description: To create a new service.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceName</i></b> - name of the service.</p>
            <p><b><i>serviceLabel</i></b> - label of the service.</p>
            <p><b><i>serviceNumberOfSession</i></b> - how many session this service needs. <u>Optional</u></p>
            <p><b><i>productCategoriId</i></b> - id of the product category. <u>Optional</u></p>
            <p><b><i>servicePrice</i></b> - price of service.</p>
            <p><b><i>serviceTypeOfPrice</i></b> - 0 for fixed and 1 for hourly price.</p>
            <p><b><i>serviceDuration</i></b> - how long it will take.</p>
            <p><b><i>serviceDescription</i></b> - service description. <u>Optional</u></p>  
            <p><b><i>file</i></b> - base 64 encoded value of the image file. <u>Optional</u></p>            
            <p><b><i>serviceColor</i></b> - service color "#ffffff".</p>  
            <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
            <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
    body:
      application/json:
        example: |
          {
            "serviceName": "Initial Consultation",
            "serviceNumberOfSession": 1,
            "servicePrice": 10,
            "serviceTypeOfPrice": 0,
            "serviceDuration": "1:15",
            "serviceDescription": "Patient for the first time need to be check with a doctor for inital consultation.",
            "serviceColor": "#ffffff"
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "serviceName": "Initial Consultation",
                  "serviceNumberOfSession": 1,
                  "servicePrice": 10,
                  "serviceTypeOfPrice": 0,
                  "serviceDuration": "1:15",
                  "serviceDescription": "Patient for the first time need to be check with a doctor for inital consultation.",
                  "serviceColor": "#ffffff",
                  "merchantId": 472,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "storeLocationId": 424,
                  "created_at": 1480078941,
                  "updated_at": 1480078941,
                  "serviceId": 2
                }
              }
  put:
    description: To edit a service.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceId</i></b> - id of the service.</p>
            <p><b><i>serviceName</i></b> - name of the service.</p>
            <p><b><i>serviceNumberOfSession</i></b> - how many session this service needs. <u>Optional</u></p>
            <p><b><i>productCategoriId</i></b> - id of the product category. <u>Optional</u></p>
            <p><b><i>serviceLabel</i></b> - label of service.</p>
            <p><b><i>servicePrice</i></b> - price of service.</p>
            <p><b><i>serviceTypeOfPrice</i></b> - 0 for fixed and 1 for hourly price.</p>
            <p><b><i>serviceDuration</i></b> - how long it will take.</p>
            <p><b><i>serviceColor</i></b> - color of service "#ffffff".</p>
            <p><b><i>serviceDescription</i></b> - service description. <u>Optional</u></p>
            <p><b><i>file</i></b> - base 64 encoded value of the image file. <u>Optional</u></p>    
            <p><b><i>commissionFee</i></b> - value of commission like 30.</p>
            <p><b><i>commissionType</i></b> - type of commission '%' or 'Fix'.</p>
    body:
      application/json:
        example: |
          {
            "serviceId": 2,
            "serviceNumberOfSession": 2
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": {
                  "serviceName": "Initial Consultation",
                  "serviceNumberOfSession": 2,
                  "servicePrice": 10,
                  "serviceTypeOfPrice": 0,
                  "serviceDuration": "1:15",
                  "serviceDescription": "Patient for the first time need to be check with a doctor for inital consultation.",
                  "merchantId": 472,
                  "updatedUserId": 459,
                  "createdUserId": 459,
                  "storeLocationId": 424,
                  "created_at": 1480078941,
                  "updated_at": 1480078941,
                  "serviceId": 2
                }
              }
  delete:
    description: To delete a service.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: true
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceId</i></b> - id of the service.</p>
    body:
      application/json:
        example: |
          {
            "serviceId": 1
          }
    responses:
      200:
        body:
          application/json:
            example: |
              {
                "success": 1,
                "response": []
              }

/care/service/file:
  description: Service endpoit provide you whole the functionality you need to work with service apis.
  get:
    description: To fetch image content.
    securedBy: [customSecurityScheme]
    queryParameters:
      param1:
          required: true
          type: string
          displayName: Token
          description: This <i>Token</i> is generated by login call and is working for one houre.
      param2:
          required: true
          type: string
          displayName: clientId
          description: This <i>ID</i> is generated for each client.
      param3:
          required: false
          type: string
          displayName: requestParams
          description: Below keys are accepted [Json String]
            <p><b><i>IMEI</i></b> - generated imei value of the client. <u>Optional</u></p>
            <p><b><i>serviceImage</i></b> image to load.</p>
    body:
      application/json:
        example: |
          {
              "serviceImage": "v2\/salonapp\/services\/459__20170209061447.png"
          }
    responses:
      200:
        body:
          application/json:
            example: |
             {
                "success": 1,
                "response": {
                    "filename": "v2\/salonapp\/services\/459__20170209061447.png",
                    "data": "iVBORw0KGgoAAAANSUhEUgAAADQAAABQCAIAAADZf8HwAAAAA3NCSVQICAjb4U\/gAAAAGXRFWHRTb2Z0d2FyZQBnbm9tZS1zY3JlZW5zaG907wO\/PgAAAGtJREFUaIHtzjEBwCAAwDBA2R4M4F\/MHOzow45EQeazz\/irdTvwRa6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+QquUqukqvkKrlKrpKr5Cq5Sq6Sq+SqF7wIAXd1UjysAAAAAElFTkSuQmCC"
                }
              }